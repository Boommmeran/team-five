{"version":3,"file":"static/js/286.660689b1.chunk.js","mappings":"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","sources":["components/UserInfo/UserInfo.styled.js","components/EditProfile/EditProfile.styled.js","components/EditProfile/EditProfile.jsx","components/UserInfo/UserInfo.jsx","components/Header/Header.jsx","redux/boards/boardsSelectors.js","services/sendDataEmail.js","components/SendEmail/SendEmail.styled.js","components/ButtonClose/ButtonClose.styled.js","components/SendEmail/SendEmail.jsx","components/NeedHelp/NeedHelp.styled.jsx","components/NeedHelp/NeedHelp.jsx","components/SidebarBoardCreation/BoardCreation.styled.jsx","components/BoardCreatingModal/BoardCreatingModal.styled.jsx","components/BoardCreatingModal/BoardCreatingModal.jsx","components/SidebarBoardCreation/BoardCreation.jsx","components/BoardItem/BoardItem.styled.jsx","components/BoardItem/BoardItem.jsx","components/SideBar/SideBar.styled.jsx","components/SideBar/SideBar.jsx","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/FilterModal/FilterModal.styled.jsx","components/FilterModal/FilterModal.jsx","components/HeaderDashboard/HeaderDashboard.jsx","components/ScreensPage/ScreensPage.styled.jsx","components/Column/Column.styled.js","components/EditColumnModal/EditColumnModal.styled.jsx","components/EditColumnModal/EditColumnModal.jsx","components/Column/Column.jsx","components/Board/Board.styled.jsx","components/Board/Board.jsx","components/MainDashboard/MainDashboard.jsx","components/ScreensPage/ScreensPage.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  width: 79px;\n  height: 32px;\n  gap: 8px;\n`;\n\nexport const Name = styled.p`\n  margin: 5px 0;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing:-2;\n  color: var(--primaryTextColor);\n`;\n\nexport const Avatar = styled.img`\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n  border: 1px solid black;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 10px;\n  color: var(--primaryTextColor);\n  background:var(--modalBgColor);\n  border: 0;\n  cursor: pointer;\n  \n`;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Container = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 100%;\n  height: 440px;\n  border-radius: 8px;\n  background: var(--modalBgColor);\n\n  @media only screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin: 0 0 24px 0;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const AvatarField = styled(Field)`\n  margin-bottom: 25px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 68px;\n  height: 68px;\n  /* border: 1px solid black; */\n  cursor: pointer;\n  border-radius: 8px;\n`;\n\nexport const StyledField = styled(Field)`\n  position: relative;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  width: 100%;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  opacity: 0.4;\n  border-radius: 8px;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  transition: var(--transition);\n\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder{\n      color:transparent;\n    }\n    \n  }\n`;\nexport const LastField = styled(Field)`\n  margin-bottom: 24px;\n  padding: 14px 18px;\n  width: 100%;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  opacity: 0.4;\n  border-radius: 8px;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -2;\n  color: var(--primaryTextColor);\n  transition: var(--transition);\n\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder{\n      color:transparent;\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  background: var(--accent);\n  border: 0;\n  border-radius: 8px;\n  padding: 14px 126px;\n  color: var(--primaryTextColor);\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -2;\n`;\n\nexport const ButtonAvatar = styled.button`\n  position: absolute;\n  top: 125px;\n  right: 155px;\n\n  width: 24px;\n  height: 24px;\n  background: var(--accent);\n  border-radius: 8px;\n  border: 0;\n\n  @media only screen and (min-width: 768px) {\n    right: 186px;\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  /* color: red;\n  font-size: 14px; */\n\n  position: absolute;\n  top: 2px;\n  right: 4px;\n\n  color: red;\n  font-size: 12px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n\nexport const StyledLabel = styled.label`\n  position: relative;\n  display: block;\n\n  svg {\n    position: absolute;\n    top: 16px;\n    right: 15px;\n    opacity:0,5;\n    &:active{\n      opacity:1;\n    }\n  }\n`;\n","import {\n  Container,\n  Title,\n  Button,\n  StyledForm,\n  StyledField,\n  LastField,\n  AvatarField,\n  ButtonAvatar,\n  ErrMsg,\n  StyledLabel,\n  Label,\n} from './EditProfile.styled';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useAuth } from 'hooks';\nimport { update } from '../../redux/auth/authOperation';\nimport { useDispatch } from 'react-redux';\n\nimport { Icon } from 'components/Icon';\n\nconst EditProfileSchema = Yup.object().shape({\n  photo: Yup.string().url('invalid url'),\n  name: Yup.string()\n    .min(2, '2 chars minimum')\n    .max(32, '32 chars maximum')\n    .matches(/^[a-zA-Z0-9!@#$%^&*(),.?\":{}|<>]+$/, 'Invalin name ')\n    .required('this field is required'),\n  email: Yup.string().email('Invalid email').required('this field is required'),\n  password: Yup.string()\n    .min(8, '8 chars minimum')\n    .max(64, '64 chars maximum')\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*(),.?\":{}|<>]+$/,\n      'only latin letters, numbers and symbols'\n    )\n    .matches(/^\\S*$/, 'password must not contain spaces')\n    .required('this field is required '),\n});\n\nexport const EditProfile = () => {\n  const { user } = useAuth();\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <Title>Edit profile</Title>\n      <Formik\n        initialValues={{\n          name: user.name,\n          email: user.email,\n          password: '',\n        }}\n        validationSchema={EditProfileSchema}\n        onSubmit={(values, actions) => {\n          dispatch(update(values));\n          // actions.resetForm();\n        }}\n      >\n        <StyledForm>\n          <AvatarField id=\"photo\" name=\"photo\" type=\"file\" accept=\"image/*\" />\n\n          <Label>\n            <StyledField id=\"name\" name=\"name\" />\n            <ErrMsg name=\"name\" component=\"p\" />\n          </Label>\n\n          <Label>\n            <StyledField id=\"email\" name=\"email\" type=\"email\" />\n            <ErrMsg name=\"email\" component=\"p\" />\n          </Label>\n\n          <StyledLabel>\n            <Icon name=\"eye\" stroke=\"var(--primaryTextColor)\" />\n            <LastField\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Enter or update your password\"\n            />\n            <ErrMsg name=\"password\" component=\"p\" />\n          </StyledLabel>\n\n          <Button type=\"submit\">Submit</Button>\n        </StyledForm>\n      </Formik>\n      <ButtonAvatar>\n        <Icon\n          name=\"plus\"\n          width=\"10px\"\n          height=\"10px\"\n          stroke=\"var(--primaryTextColor)\"\n        />\n      </ButtonAvatar>\n    </Container>\n  );\n};\n","import { Container, Name, Avatar, Button } from './UserInfo.styled';\nimport { EditProfile } from 'components/EditProfile';\nimport { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\n\nimport { useAuth } from 'hooks';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    // marginRight: '-50%',\n    padding: '0',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nModal.setAppElement('#root');\n\nexport const UserInfo = () => {\n  const { user } = useAuth();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <Container>\n      <Name>{user.name}</Name>\n      <Avatar src=\"\" alt=\"image user\" onClick={openModal} />\n      <Modal isOpen={isModalOpen} style={customStyles} contentLabel=\"Modal\">\n        <EditProfile />\n        <Button onClick={closeModal}>\n          <Icon name=\"close\" stroke=\"var(--primaryTextColor)\" />\n        </Button>\n      </Modal>\n    </Container>\n  );\n};\n","import { UserInfo } from \"components/UserInfo/UserInfo\";\n\nexport const Header = () => {\n    return (<div>\n        <UserInfo />\n    </div>)\n};","export const selectBoards = state => state.boards.boards;\n","import axios from 'axios';\nimport toast from 'react-hot-toast';\n\nexport const sendDataEmail = async data => {\n  try {\n    await axios.post('/support', data);\n    toast.success('Successfully sent!');\n  } catch (error) {\n    toast.error('Oops. Something went wrong');\n  }\n};\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const ContainerForModal = styled.div`\n  position: relative;\n  padding: 24px 29px 50px 24px;\n  width: 335px;\n  height: 355px;\n  background: var(--headerBgColor);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 var(--nonAccentTextColor);\n\n  /* @media only screen and (min-width: 375px) {\n    min-width: 0;\n    width: 345px;\n  } */\n\n  @media only screen and (min-width: 768px) {\n    width: 400px;\n    height: 355px;\n    padding: 24px;\n  }\n`;\n\nexport const TitleForModal = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  margin-bottom: 24px;\n  text-align: start;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\nexport const StyledFormInModal = styled(Form)`\n  /* position: relative; */\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledFieldInModal = styled(Field)`\n  position: relative;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  width: 100%;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  resize: none;\n\n  font-size: 14px;\n  font-weight: 400px;\n  line-height: 1.5;\n  color: var(--primaryTextColor);\n`;\n\nexport const ButtonForModal = styled.button`\n  /* width: 100%; */\n  background: var(--accent);\n  border: 0;\n  border-radius: 8px;\n  padding: 14px 45%;\n  color: var(--primaryTextColor);\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  /* @media only screen and (min-width: 375px) {\n    padding: 14px 126px;\n  } */\n`;\n\n// export const ButtonClose = styled.button`\n//   position: absolute;\n//   top: 14px;\n//   right: 14px;\n\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n\n//   padding: 0;\n//   border: none;\n//   background: none;\n//   cursor: pointer;\n// `;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 4px;\n\n  color: red;\n  font-size: 12px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n","import styled from 'styled-components';\n\nexport const ButtonCloseStyled = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  padding: 0;\n  border: none;\n  background: none;\n  cursor: pointer;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { sendDataEmail } from 'services/sendDataEmail';\n// import { ButtonClose } from 'components/ButtonClose/ButtonClose';\nimport {\n  ButtonForModal,\n  ContainerForModal,\n  ErrMsg,\n  Label,\n  StyledFieldInModal,\n  StyledFormInModal,\n  TitleForModal,\n} from './SendEmail.styled';\nimport { Icon } from 'components/Icon';\nimport { ButtonCloseStyled } from 'components/ButtonClose/ButtonClose.styled';\n\nconst initialValues = {\n  emailForSupport: '',\n  textMessage: '',\n};\n\nconst builderSchema = Yup.object().shape({\n  emailForSupport: Yup.string().email().required('This field is required'),\n  textMessage: Yup.string()\n    .min(10, `It's can be up to 10 characters long`)\n    .required(`This field is required.`),\n});\n\nexport const SendEmail = ({ onClose }) => {\n  const onSubmit = (data, form) => {\n    sendDataEmail(data);\n    form.resetForm();\n  };\n\n  return (\n    <ContainerForModal>\n      <TitleForModal>Need help</TitleForModal>\n      {/* <ButtonClose/> */}\n      <ButtonCloseStyled type=\"button\" onClick={onClose}>\n        <Icon\n          stroke=\"var(--primaryTextColor)\"\n          name=\"close\"\n          width=\"18\"\n          height=\"18\"\n        />\n      </ButtonCloseStyled>{' '}\n      <Formik\n        initialValues={initialValues}\n        validationSchema={builderSchema}\n        onSubmit={onSubmit}\n      >\n        <StyledFormInModal>\n          <Label>\n            <StyledFieldInModal\n              type=\"email\"\n              name=\"emailForSupport\"\n              placeholder=\"Email address\"\n            />\n            <ErrMsg component=\"p\" name=\"emailForSupport\" />\n          </Label>\n\n          <Label>\n            <StyledFieldInModal\n              rows={4}\n              as=\"textarea\"\n              type=\"text\"\n              name=\"textMessage\"\n              placeholder=\"Comment\"\n            />\n            <ErrMsg component=\"p\" name=\"textMessage\" />\n          </Label>\n\n          <ButtonForModal type=\"submit\">Send</ButtonForModal>\n        </StyledFormInModal>\n      </Formik>\n    </ContainerForModal>\n  );\n};\n","import styled from 'styled-components';\n\nexport const NeedHelpBlock = styled.div`\n  height: 238px;\n  padding: 14px;\n  margin-bottom: 24px;\n  font-size: 12px;\n  border-radius: 8px;\n  background-color: var(--secondaryBgColor);\n\n  p {\n    margin-top: 14px;\n    margin-bottom: 18px;\n    line-height: 1.33333;\n    letter-spacing: 0;\n  }\n`;\n\nexport const NeedHelpBtn = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  background: none;\n  display: flex;\n  align-items: center;\n\n  span {\n    margin-left: 8px;\n    color: var(--primaryTextColor);\n    font-family: 'Poppins-Medium';\n  }\n`;","import { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { SendEmail } from 'components/SendEmail';\nimport { NeedHelpBlock, NeedHelpBtn } from './NeedHelp.styled';\n\nconst customStyles = {\n  content: {\n    width: 'fit-content',\n    height: 'fit-content',\n    padding: 0,\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\n// Modal.setAppElement('#root');\n\nexport const NeedHelp = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <NeedHelpBlock>\n      <picture>\n        <source\n          srcSet=\"\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-1x.webp 1x,\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-2x.webp 2x\n            \"\n        />\n        <img\n          src=\"https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-1x.webp\"\n          width=\"54\"\n          height=\"78\"\n          alt=\"little cute cactus\"\n        />\n      </picture>\n      <p>\n        If you need help with{' '}\n        <span style={{ color: 'var(--accent)' }}>TaskPro</span>, check out our\n        support resources or reach out to our customer support team.\n      </p>\n      <NeedHelpBtn type=\"button\" onClick={openModal}>\n        <div style={{ stroke: 'var(--primaryTextColor)' }}>\n          <Icon name=\"help\" width=\"20\" height=\"20\" />\n        </div>\n        <span>Need help?</span>\n      </NeedHelpBtn>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Need help modal\"\n      >\n        <SendEmail onClose={closeModal} />\n      </Modal>\n    </NeedHelpBlock>\n  );\n};","import styled from 'styled-components';\n\nexport const BoardCreationBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-top: rgba(255, 255, 255, 0.1) solid 1px;\n  border-bottom: rgba(255, 255, 255, 0.1) solid 1px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  margin-bottom: 40px;\n`;\n\nexport const BtnCreate = styled.button`\n  width: 40px;\n  height: 36px;\n  background-color: var(--btnPlus);\n  border: none;\n  border-radius: 6px;\n  stroke: var(--primaryBgColor);\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnPlusHover);\n  }\n`;","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 335px;\n  height: 433px;\n\n  border-radius: 8px;\n\n  background-color: var(--modalBgColor);\n\n  stroke: var(--primaryTextColor);\n\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const ModalTitle = styled.h3`\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Medium';\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--primaryTextColor);\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const FormWrap = styled(Form)`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const Input = styled(Field)`\n  width: 287px;\n  height: 49px;\n  padding: 14px 0 14px 18px;\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Regular';\n  font-size: 14px;\n\n  border: 1px solid var(--btnPlus);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n\n  color: var(--primaryTextColor);\n  background-color: ${({ theme }) =>\n    theme === 'dark' ? ' #1f1f1f' : 'inherit'};\n  opacity: 0.4;\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 14px;\n\n  color: var(--primaryTextColor);\n`;\n\nexport const IconsListWrap = styled.ul`\n  display: flex;\n  gap: 8px;\n\n  margin-bottom: 24px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 0;\n\n  border: none;\n  background-color: inherit;\n\n  width: 18px;\n  height: 18px;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  cursor: pointer;\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:focus,\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const InvisibleInput = styled(Field)`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n\nexport const BackgroundsPallet = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  width: 252px;\n  height: 60px;\n  margin-bottom: 40px;\n`;\n\nexport const LabelPic = styled.label``;\n\nexport const Div = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  transition: transform var(--transition);\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  min-width: 287px;\n  height: 49px;\n\n  padding: 10px 0 11px 0;\n\n  border: 1px solid black;\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--btnText);\n  background-color: var(--btnBgColor);\n  transition: background-color var(--transition);\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnBgColorHover);\n  }\n`;\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n\n  border-radius: 8px;\n\n  background-color: var(--btnText);\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--plusInBtn);\n  }\n`;\n","import { Icon } from 'components/Icon';\nimport * as Yup from 'yup';\nimport {\n  FormWrap,\n  Input,\n  Text,\n  AddBtn,\n  IconWrap,\n  ModalWrap,\n  CloseBtn,\n  ModalTitle,\n  IconsListWrap,\n  InvisibleInput,\n  BackgroundsPallet,\n  Label,\n  LabelPic,\n  Div,\n} from './BoardCreatingModal.styled';\nimport { Formik } from 'formik';\n\nconst iconsArr = [\n  'four-circles',\n  'star',\n  'loading',\n  'puzzle',\n  'container',\n  'lightning',\n  'colors',\n  'hexagon',\n];\n\nconst backgroundsArr = [\n  'noBack',\n  'miklos',\n  'eberhard',\n  'diego',\n  'vino',\n  'vickholius',\n  'romello',\n  'kace',\n  'milad',\n  'gaetan',\n  'florian',\n  'tony',\n  'nicolas',\n  'gabriella',\n  'igor',\n  'zhou',\n];\n\nconst schema = Yup.object({\n  boardTitle: Yup.string().required(),\n  icon: Yup.string().oneOf(iconsArr).required(),\n  background: Yup.string().oneOf(backgroundsArr).required(),\n});\n\nexport const BoardCreatingModal = ({ onClose, title, btnText, reqFunc }) => {\n  // тут має бути прописана логіка отримання даних щодо дошки з redux (для випадка редагування) з подальшим \n  // занесенням у initialValues (у форматі або ?? існуючі стартові двні)\n\n  const initialValues = {\n    boardTitle: '',\n    icon: 'four-circles',\n    background: 'noBack',\n  };\n\n  const onSubmit = values => {\n    reqFunc(values);\n    onClose();\n  };\n  return (\n    <ModalWrap>\n      <ModalTitle>{title}</ModalTitle>\n      <CloseBtn type=\"button\" onClick={onClose}>\n        <Icon name=\"close\" />\n      </CloseBtn>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={onSubmit}\n      >\n        <FormWrap>\n          <Input type=\"text\" placeholder=\"Title\" name=\"boardTitle\" />\n          <Text>Icons</Text>\n\n          <IconsListWrap>\n            {iconsArr.map(el => (\n              <li key={el}>\n                <Label>\n                  <Icon name={el} />\n                  <InvisibleInput type=\"radio\" name=\"icon\" value={el} />\n                </Label>\n              </li>\n            ))}\n          </IconsListWrap>\n\n          <Text>Backgrounds</Text>\n          <BackgroundsPallet>\n            {backgroundsArr.map(el => {\n              const srcSetPath = ` https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp 1x,\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_56x56.webp 2x`;\n              const srcDefault = `https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp`;\n              return (\n                <li key={el}>\n                  <LabelPic>\n                    <Div>\n                      <picture>\n                        <source srcSet={srcSetPath} />\n                        <img src={srcDefault} alt=\"background example\" />\n                      </picture>\n                    </Div>\n                    <InvisibleInput type=\"radio\" name=\"background\" value={el} />\n                  </LabelPic>\n                </li>\n              );\n            })}\n          </BackgroundsPallet>\n\n          <AddBtn type=\"submit\">\n            <IconWrap>\n              <Icon name=\"plus\" />\n            </IconWrap>{' '}\n            {btnText}\n          </AddBtn>\n        </FormWrap>\n      </Formik>\n    </ModalWrap>\n  );\n};\n","import { useState } from \"react\";\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { BoardCreationBlock, BtnCreate } from \"./BoardCreation.styled\";\nimport { BoardCreatingModal } from \"components/BoardCreatingModal\";\n\nconst customStyles = {\n  content: {\n    width: 'fit-content',\n    height: 'fit-content',\n    padding: 0,\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\n// Modal.setAppElement('#root');\n\nexport const BoardCreation = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <BoardCreationBlock>\n      <p>\n        Create a<br />\n        new board\n      </p>\n      <BtnCreate type=\"button\" onClick={openModal}>\n        <Icon name=\"plus\" width=\"20\" height=\"20\" />\n      </BtnCreate>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Creation board modal\"\n      >\n        <BoardCreatingModal onClose={closeModal} />\n      </Modal>\n    </BoardCreationBlock>\n  );\n};","import styled from 'styled-components';\n\nexport const ControlIconsContainer = styled.div`\n  margin-left: auto;\n  display: none;\n  gap: 8px;\n\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\n\nexport const BoardItemContainer = styled.li`\n  height: 61px;\n  margin: 0 -14px 0 -14px;\n  padding: 0 14px 0 14px;\n  display: flex;\n  align-items: center;\n  stroke: var(--primaryTextColor);\n  opacity: 0.5;\n  transition: var(--transition);\n\n  p {\n    margin-left: 4px;\n    font-family: 'Poppins-Medium';\n    font-size: 14px;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--secondaryBgColor);\n    opacity: 1;\n\n    > ${ControlIconsContainer} {\n      display: flex;\n      opacity: 0.5;\n    }\n  }\n`;","import { Icon } from \"components/Icon\";\nimport { BoardItemContainer, ControlIconsContainer } from \"./BoardItem.styled\";\n\nexport const BoardItem = ({ board, onDelete }) => {\n  return (\n    <BoardItemContainer>\n      <Icon name={board.icon} width=\"18\" height=\"18\" style={{ opacity: 0.5 }} />\n      <p>{board.title}</p>\n      <ControlIconsContainer>\n        <button type=\"button\">\n          <Icon name=\"pencil\" width=\"16\" height=\"16\" />\n        </button>\n        <button type=\"button\" onClick={onDelete}>\n          <Icon name=\"trash\" width=\"16\" height=\"16\" />\n        </button>\n      </ControlIconsContainer>\n    </BoardItemContainer>\n  );\n};","import styled from 'styled-components';\n\nexport const SidebarContainer = styled.div`\n  width: 225px;\n  min-height: 100vh;\n  padding: 14px;\n  color: var(--primaryTextColor);\n  letter-spacing: -0.02em;\n  text-align: left;\n  background-color: var(--primaryBgColor);\n`;\n\nexport const Logo = styled.div`\n  font-family: 'Poppins-SemiBold';\n  letter-spacing: -0.04em;\n  display: flex;\n  column-gap: 8px;\n  align-items: center;\n  margin-bottom: 70px;\n`;\n\nexport const BoardContainer = styled.div`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n\n  h3 {\n    margin-bottom: 8px;\n    font-size: 12px;\n    font-family: 'Poppins-Regular';\n    opacity: 50%;\n  }\n  `;\n\nexport const BoardList = styled.ul`\nmargin-bottom: 40px;\n`;\n\nexport const LogOut = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  background: none;\n  display: flex;\n  align-items: center;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  stroke: var(--accent);\n  transition: var(--transition);\n\n  p {\n    margin-left: 14px;\n    color: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    stroke: var(--hover);\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectBoards } from '../../redux/boards/boardsSelectors.js';\nimport { fetchBoards, deleteBoard } from '../../redux/boards/boardsOperations.js';\nimport { logOut } from '../../redux/auth/authOperation.js';\nimport { NeedHelp } from 'components/NeedHelp';\nimport { BoardCreation } from 'components/SidebarBoardCreation';\n\nimport { BoardItem } from 'components/BoardItem';\nimport { Icon } from 'components/Icon';\nimport {\n  SidebarContainer,\n  Logo,\n  BoardContainer,\n  BoardList,\n  LogOut,\n} from './SideBar.styled';\n\nexport const Sidebar = () => {\n  const dispatch = useDispatch();\n  const boards = useSelector(selectBoards);\n\n  useEffect(() => {\n    dispatch(fetchBoards());\n  }, [dispatch]);\n\n  const handleLogOut = () => {\n    dispatch(logOut());\n  };\n\n  const handleDeleteBoard = boardId => {\n    dispatch(deleteBoard(boardId));\n  };\n\n  return (\n    <SidebarContainer>\n      <Logo>\n        <Icon name=\"logo\" width=\"32\" height=\"32\" />\n        <h2>TaskPro</h2>\n      </Logo>\n      <BoardContainer>\n        <h3>My boards</h3>\n        <BoardCreation />\n        <BoardList>\n          {boards.map(board => (\n            <BoardItem key={board._id} board={board} onDelete={() => handleDeleteBoard(board._id)}/>\n          ))}\n        </BoardList>\n      </BoardContainer>\n      <NeedHelp />\n      <LogOut type=\"button\" onClick={handleLogOut}>\n        <Icon name=\"login\" width=\"32\" height=\"32\" />\n        <p>Log out</p>\n      </LogOut>\n    </SidebarContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  margin-bottom: 26px;\n\n  background: var(--secondaryBgColor);\n\n  @media (max-width: 767px) {\n    padding: 14px 0px;\n  }\n\n  @media (min-width: 768px) {\n    padding: 26px 0px;\n  }\n\n  @media (min-width: 1440px) {\n    padding: 10px 0px;\n  }\n`;\n\nexport const BoardName = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--primaryTextColor);\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const FilterBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  font-family: 'Poppins-Medium';\n\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  border: none;\n\n  color: var(--secondaryTextColor);\n  opacity: 0.8;\n  background-color: inherit;\n\n  stroke: var(--secondaryTextColor);\n  stroke-opacity: 0.8;\n  transition: opacity var(--transition);\n  > svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const FiltersTytle = styled.h2`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  margin-left: 24px;\n  color: #fff;\n`;\n\nexport const PickerName = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  margin-left: 24px;\n  width: 300px;\n  color: #fff;\n`;\n\nexport const ShowPickers = styled.button`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  text-decoration: underline;\n  /* color: rgba(255, 255, 255, 0.5); */\n`;\n\nexport const PickersList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Picker = styled.label`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: rgba(255, 255, 255, 0.5);\n`;\n","import {\n  FiltersTytle,\n  Picker,\n  PickersList,\n  PickerName,\n  ShowPickers,\n} from './FilterModal.styled';\n\nimport { Icon } from 'components/Icon';\n\nexport const FilterModal = ({ closeModal }) => {\n  return (\n    <>\n      <FiltersTytle>Filters</FiltersTytle>\n\n      <PickerName>\n        Label color\n        <ShowPickers>Show all</ShowPickers>\n      </PickerName>\n      <PickersList>\n        <Picker>\n          <input\n            type=\"radio\"\n            name=\"colorPicker\"\n            value=\"Grey\"\n            defaultChecked={true}\n          />\n          Without priority\n        </Picker>\n        <Picker>\n          <input type=\"radio\" name=\"colorPicker\" value=\"Blue\" />\n          Low\n        </Picker>\n        <Picker>\n          <input type=\"radio\" name=\"colorPicker\" value=\"Red\" />\n          Medium\n        </Picker>\n        <Picker>\n          <input type=\"radio\" name=\"colorPicker\" value=\"Green\" />\n          High\n        </Picker>\n      </PickersList>\n      <Icon name=\"icon-close\" width=\"20\" height=\"20\" onClick={closeModal} />\n    </>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { FilterBtn, BoardName, Wrap } from './HeaderDashboard.styled';\nimport { Icon } from 'components/Icon';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport { FilterModal } from 'components/FilterModal/FilterModal';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    padding: 0,\n  },\n};\n\nexport const HeaderDashboard = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  const { boardName } = useParams();\n  return (\n    <Wrap>\n      <BoardName>{boardName}</BoardName>\n      <FilterBtn type=\"button\" onClick={openModal}>\n        <Icon name=\"filter\" />\n        Filters{' '}\n      </FilterBtn>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Filters Modal\"\n      >\n        <FilterModal closeModal={closeModal} />\n      </Modal>\n    </Wrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  height: 100vh;\n  background-color: var(--secondaryBgColor);\n`;\n","import styled from 'styled-components';\n\nexport const HeadWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 335px;\n  height: 56px;\n\n  margin-bottom: 14px;\n  padding: 17px 20px;\n\n  border-radius: 8px;\n\n  background-color: var(--extraBgColor);\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const IconedBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  border: none;\n\n  opacity: 0.8;\n  background-color: inherit;\n\n  stroke: var(--secondaryTextColor);\n  stroke-opacity: 0.5;\n  transition: opacity var(--transition);\n\n  > svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`;\n\nexport const CardList = styled.ul`\n  margin-bottom: 14px;\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  width: 335px;\n  height: 56px;\n\n  padding: 10px 0 11px 0;\n\n  border: none;\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--btnText);\n  background-color: var(--btnBgColor);\n  transition: background-color var(--transition);\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnBgColorHover);\n  }\n`;\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n\n  border-radius: 8px;\n\n  background-color: var(--btnText);\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--plusInBtn);\n  }\n`;\n","import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid rgba(190, 219, 176, 0.5);\n  border-radius: 8px;\n  width: 350px;\n  height: 221px;\n  background: #151515;\n  gap: 24px;\n`;\n\nexport const StyledField = styled(Field)`\n  font: inherit;\n  cursor: pointer;\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  width: 302px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  background: #1f1f1f;\n  opacity: 0.4;\n`;\n\nexport const Label = styled.label`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: #fff;\n`;\n\nexport const Button = styled.button`\n  font: inherit;\n  cursor: pointer;\n  border-radius: 8px;\n  width: 302px;\n  height: 49px;\n  background: #bedbb0;\n  font-size: 20px;\n`;\n\nexport const ButtonText = styled.span`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: #161616;\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  color: #f5530d;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icon';\nimport {\n  Button,\n  Label,\n  StyledField,\n  StyledForm,\n  ButtonText,\n} from './EditColumnModal.styled';\n\nconst columnFormSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'Too short!').required('This field is required!'),\n});\n\nexport const EditColumnModal = ({ onClose, title, reqFunc }) => {\n  // тут має бути логіка отримання значення назви вже існуючого\n  // стовпця і подальший запис в initValues\n  const initialValues = {\n    name: '',\n  };\n\n  const onSubmit = values => {\n    reqFunc(values);\n    onClose();\n  };\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={columnFormSchema}\n        onSubmit={onSubmit}\n      >\n        <StyledForm>\n          <Label>{title}</Label>\n          <StyledField type=\"text\" name=\"name\" placeholder=\"Title\" />\n          {/* <ErrMsg name=\"name\" component=\"div\"/> */}\n\n          <Button type=\"submit\">\n            <div style={{ stroke: 'var(--plusInBtn)' }}>\n              <Icon name=\"icon-plus\" width=\"20\" height=\"20\" />\n            </div>\n            <ButtonText>Add</ButtonText>\n          </Button>\n        </StyledForm>\n      </Formik>\n      <Icon name=\"icon-close\" width=\"20\" height=\"20\" onClick={onClose} />\n    </>\n  );\n};\n","import { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport {\n  AddBtn,\n  CardList,\n  HeadWrap,\n  IconWrap,\n  IconedBtn,\n  Title,\n  Wrap,\n} from './Column.styled';\nimport { EditColumnModal } from 'components/EditColumnModal/EditColumnModal';\n\nexport const Column = () => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      transform: 'translate(-50%, -50%)',\n      padding: 0,\n    },\n  };\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <HeadWrap>\n        <Title>Column title</Title>\n        <Wrap>\n          <IconedBtn type=\"button\" onClick={openModal}>\n            <Icon name=\"pencil\" />\n          </IconedBtn>\n          <IconedBtn type=\"button\">\n            <Icon name=\"trash\" />\n          </IconedBtn>\n        </Wrap>\n      </HeadWrap>\n      <CardList></CardList>\n      <AddBtn type=\"button\">\n        <IconWrap>\n          <Icon name=\"plus\" />\n        </IconWrap>{' '}\n        Add another card\n      </AddBtn>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Column Edit Modal\"\n        ariaHideApp={false}\n      >\n        <EditColumnModal\n          title={'Edit column'}\n          onClose={closeModal}\n          reqFunc={value => console.log(value)}\n        />\n      </Modal>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  gap: 18px;\n  align-items: flex-start;\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  max-width: 335px;\n\n  padding: 14px 78px;\n\n  border: none;\n  border-radius: 8px;\n\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--secondaryTextColor);\n  background-color: var(--extraBgColor);\n\n  opacity: 1;\n  transition: color background-color var(--transition);\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: var(--btnText);\n    background-color: var(--btnBgColor);\n  }\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n`;\n\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n  border: 1px solid black;\n  border-radius: 8px;\n\n  background-color: var(--squareIconColor);\n  stroke: var(--extraBgColor);\n  transition: background-color stroke var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnText);\n    stroke: var(--plusInBtn);\n  }\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: inherit;\n  }\n`;\n","import { Column } from 'components/Column';\nimport { IconWrap, AddBtn, Wrap } from './Board.styled';\nimport { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { EditColumnModal } from 'components/EditColumnModal/EditColumnModal';\n\nexport const Board = () => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      transform: 'translate(-50%, -50%)',\n      padding: 0,\n    },\n  };\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n  return (\n    <Wrap>\n      <ul>\n        <li>\n          <Column />\n        </li>\n      </ul>\n      <AddBtn type=\"button\" onClick={openModal}>\n        <IconWrap>\n          <Icon name=\"plus\" />\n        </IconWrap>{' '}\n        Add another column\n      </AddBtn>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Column Edit Modal\"\n        ariaHideApp={false}\n      >\n        <EditColumnModal\n          title={'Add column'}\n          onClose={closeModal}\n          reqFunc={value => console.log(value)}\n        />\n      </Modal>\n    </Wrap>\n  );\n};\n","// import { StartText, BoardCreationBtn } from './MainDashboard.styled';\n// import { useParams } from 'react-router-dom';\nimport { Board } from 'components/Board';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { BoardCreatingModal } from 'components/BoardCreatingModal';\n\nexport const MainDashboard = () => {\n  // const { boardName } = useParams();\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      transform: 'translate(-50%, -50%)',\n      padding: 0,\n    },\n  };\n\n  // const openModal = () => {\n  //   setIsOpen(true);\n  // };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      {/* {boardName ? (\n        <Board />\n      ) : (\n        <StartText>\n          Before starting your project, it is essential{' '}\n          <BoardCreationBtn type=\"button\" onClick={openModal}>\n            to create a board\n          </BoardCreationBtn>{' '}\n          to visualize and track all the necessary tasks and milestones. This\n          board serves as a powerful tool to organize the workflow and ensure\n          effective collaboration among team members.\n        </StartText>\n      )} */}\n      <Board />\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Board Creation Modal\"\n        ariaHideApp={false}\n      >\n        <BoardCreatingModal\n          onClose={closeModal}\n          title={'New board'}\n          btnText={'Create'}\n          reqFunc={values => console.log(values)}\n        />\n      </Modal>\n    </>\n  );\n};\n","import { HeaderDashboard } from 'components/HeaderDashboard';\nimport { Section } from './ScreensPage.styled';\nimport { MainDashboard } from 'components/MainDashboard';\n\nexport const ScreensPage = () => {\n  return (\n    <Section>\n      <HeaderDashboard />\n      <MainDashboard />\n    </Section>\n  );\n};\n","import { Header } from 'components/Header';\nimport { Sidebar } from 'components/SideBar';\nimport { ScreensPage } from 'components/ScreensPage';\n\nexport default function HomePage() {\n  return (\n    <>\n      <Header />\n      <Sidebar />\n      <ScreensPage />\n    </>\n  );\n}\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Name","_templateObject2","Avatar","_templateObject3","Button","_templateObject4","Title","StyledForm","Form","AvatarField","Field","StyledField","_templateObject5","LastField","_templateObject6","_templateObject7","ButtonAvatar","_templateObject8","ErrMsg","ErrorMessage","_templateObject9","Label","_templateObject10","StyledLabel","_templateObject11","EditProfileSchema","Yup","shape","photo","url","name","min","max","matches","required","email","password","EditProfile","user","useAuth","dispatch","useDispatch","_jsxs","children","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","update","id","type","accept","component","Icon","stroke","placeholder","width","height","customStyles","content","top","left","right","bottom","padding","transform","boxShadow","overlay","background","Modal","UserInfo","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","src","alt","onClick","isOpen","style","contentLabel","Header","selectBoards","state","boards","sendDataEmail","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","axios","toast","t0","stop","_x","apply","arguments","ContainerForModal","TitleForModal","StyledFormInModal","StyledFieldInModal","ButtonForModal","ButtonCloseStyled","emailForSupport","textMessage","builderSchema","SendEmail","onClose","form","resetForm","rows","as","NeedHelpBlock","NeedHelpBtn","NeedHelp","closeModal","srcSet","color","onRequestClose","BoardCreationBlock","BtnCreate","ModalWrap","ModalTitle","CloseBtn","FormWrap","Input","theme","Text","IconsListWrap","InvisibleInput","BackgroundsPallet","LabelPic","Div","_templateObject12","AddBtn","_templateObject13","IconWrap","_templateObject14","iconsArr","backgroundsArr","schema","boardTitle","icon","oneOf","BoardCreatingModal","title","btnText","reqFunc","map","el","value","srcSetPath","concat","srcDefault","BoardCreation","ControlIconsContainer","BoardItemContainer","BoardItem","board","onDelete","opacity","SidebarContainer","Logo","BoardContainer","BoardList","LogOut","Sidebar","useSelector","useEffect","fetchBoards","boardId","_id","deleteBoard","logOut","Wrap","BoardName","FilterBtn","FiltersTytle","PickerName","ShowPickers","PickersList","Picker","FilterModal","_Fragment","defaultChecked","HeaderDashboard","boardName","useParams","Section","HeadWrap","IconedBtn","CardList","ButtonText","columnFormSchema","EditColumnModal","Column","modalIsOpen","setIsOpen","ariaHideApp","console","log","Board","MainDashboard","ScreensPage","HomePage"],"sourceRoot":""}