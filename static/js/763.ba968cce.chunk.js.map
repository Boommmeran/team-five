{"version":3,"file":"static/js/763.ba968cce.chunk.js","mappings":"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","sources":["components/UserInfo/UserInfo.styled.js","components/EditProfile/EditProfile.styled.js","components/UpdateAvatar/UpdateAvatar.styled.js","components/UpdateAvatar/UpdateAvatar.jsx","schemas/editProfileSchema.js","components/EditProfile/EditProfile.jsx","components/UserInfo/UserInfo.jsx","redux/boards/boardsSelectors.js","services/sendDataEmail.js","components/SendEmail/SendEmail.styled.js","components/SendEmail/SendEmail.jsx","components/NeedHelp/NeedHelp.styled.js","components/NeedHelp/NeedHelp.jsx","components/SidebarBoardCreation/BoardCreation.styled.js","components/BoardCreatingModal/BoardCreatingModal.styled.js","components/BoardCreatingModal/BoardCreatingModal.jsx","components/SidebarBoardCreation/BoardCreation.jsx","components/BoardItem/BoardItem.styled.js","components/BoardEditModal/BoardEditModal.styled.jsx","components/BoardEditModal/BoardEditModal.jsx","components/BoardItem/BoardItem.jsx","components/SideBar/SideBar.styled.js","components/SideBar/SideBar.jsx","components/ThemeSwitcher/ThemeSwitcher.styled.js","components/ThemeSwitcher/ThemeSwitcher.jsx","hooks/useClickOutside.js","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/FilterModal/FilterModal.styled.jsx","components/RadioFiltres/RadioFiltres.styled.js","components/RadioFiltres/RadioFiltres.jsx","components/FilterModal/FilterModal.jsx","components/HeaderDashboard/HeaderDashboard.jsx","components/Card/Card.styled.js","components/Calendar/Calendar.js","components/EditCardModal/EditCardModal.styled.js","components/RadioInputs/RadioInputs.styled.js","components/RadioInputs/RadioInputs.jsx","components/EditCardModal/EditCardModal.jsx","components/MoveCardDropdown/MoveCardDropdown.styled.js","components/MoveCardItem/MoveCardItem.styled.js","components/MoveCardItem/MoveCardItem.jsx","components/MoveCardDropdown/MoveCardDropdown.jsx","components/Card/Card.jsx","components/Column/Column.styled.js","components/AddCardModal/AddCardModal.styled.js","components/AddCardModal/AddCardModal.jsx","components/ColumnHead/ColumnHead.styled.js","components/EditColumnFormik/EditColumnFormik.styled.js","components/EditColumnFormik/EditColumnFormik.jsx","components/ColumnHead/ColumnHead.jsx","components/Column/Column.jsx","components/Board/Board.styled.js","components/AddColumnFormik/AddColumnFormik.styled.js","components/AddColumnFormik/AddColumnFormik.jsx","components/Board/Board.jsx","components/ScreensPage/ScreensPage.jsx","components/StartScreen/StartScreen.styled.js","components/StartScreen/StartScreen.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n\n  gap: 8px;\n`;\n\nexport const Name = styled.p`\n  margin: 5px 0;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -2;\n  color: var(--primaryTextColor);\n`;\n\nexport const Avatar = styled.img`\n  cursor: pointer;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 10px;\n  color: var(--primaryTextColor);\n  background: var(--modalBgColor);\n  border: 0;\n  cursor: pointer;\n`;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Container = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 100%;\n  height: 440px;\n  border-radius: 8px;\n  background: var(--modalBgColor);\n\n  @media only screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin: 0 0 24px 0;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledField = styled(Field)`\n  position: relative;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  width: 100%;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  opacity: 0.4;\n  border-radius: 8px;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  transition: var(--transition);\n\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n`;\n\nexport const LastField = styled(Field)`\n  margin-bottom: 24px;\n  padding: 14px 18px;\n  width: 100%;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  opacity: 0.4;\n  border-radius: 8px;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -2;\n  color: var(--primaryTextColor);\n  transition: var(--transition);\n\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  background: var(--accent);\n  border: 0;\n  border-radius: 8px;\n  padding: 14px 126px;\n  color: var(--primaryTextColor);\n  font-family: 'Poppins-Medium';\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0, 02em;\n\n  &:hover {\n    background: var(--hover);\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 4px;\n\n  color: red;\n  font-size: 12px;\n  font-style: italic;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n\nexport const StyledLabel = styled.label`\n  position: relative;\n  display: block;\n\n  svg {\n    position: absolute;\n    top: 16px;\n    right: 15px;\n    opacity: 0, 5;\n    &:active {\n      opacity: 1;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ContainerAvatar = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Avatar = styled.img`\n  margin-bottom: 25px;\n  border-radius: 8px;\n`;\n\nexport const Input = styled.input`\n  opacity: 0;\n  height: 0;\n  width: 0;\n  line-height: 0;\n  overfow: hidden;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 56px;\n  left:46%;\n\n  width: 24px;\n  height: 24px;\n  background: var(--accent);\n  border-radius: 8px;\n  border: 0;\n\n  @media only screen and (min-width: 768px) {\n    left: 47%;\n  }\n`;\n","import { useRef } from 'react';\nimport { Input, Button, ContainerAvatar, Avatar } from './UpdateAvatar.styled';\n\nimport { useAuth } from 'hooks';\nimport { useDispatch } from 'react-redux';\nimport { updateAvatar } from '../../redux/auth/authOperation';\n\nimport { Icon } from 'components/Icon';\n\nconst cloudinaryBaseURL =\n  'https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707503119/';\n\nexport const UpdateAvatar = () => {\n  const { user } = useAuth();\n  const dispatch = useDispatch();\n\n  const filePicker = useRef(null);\n\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n\n    dispatch(updateAvatar(selectedFile));\n  };\n\n  const handlePick = () => {\n    filePicker.current.click();\n  };\n  return (\n    <ContainerAvatar>\n      <Avatar\n        src={cloudinaryBaseURL + user.avatarURL}\n        width=\"68\"\n        height=\"68\"\n        alt=\"user photo\"\n      />\n\n      <Button onClick={handlePick}>\n        <Icon\n          name=\"plus\"\n          width=\"10px\"\n          height=\"10px\"\n          stroke=\"var(--primaryTextColor)\"\n        />\n      </Button>\n      <Input\n        type=\"file\"\n        ref={filePicker}\n        onChange={handleFileChange}\n        accept=\"image/*,.jpg,.png,.gif,.web,\"\n      />\n    </ContainerAvatar>\n  );\n};\n","import * as Yup from 'yup';\n\nexport const EditProfileSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, '2 chars minimum')\n    .max(32, '32 chars maximum')\n    .matches(/^[a-zA-Z0-9!@#$%^&*(),.?\":{}|<>]+$/, 'Invalin name ')\n    .required('this field is required'),\n  email: Yup.string().email('Invalid email').required('this field is required'),\n  password: Yup.string()\n    .min(8, '8 chars minimum')\n    .max(64, '64 chars maximum')\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*(),.?\":{}|<>]+$/,\n      'only latin letters, numbers and symbols'\n    )\n    .matches(/^\\S*$/, 'password must not contain spaces')\n    .required('this field is required '),\n});","import {\n  Container,\n  Title,\n  Button,\n  StyledForm,\n  StyledField,\n  LastField,\n  ErrMsg,\n  StyledLabel,\n  Label,\n} from './EditProfile.styled';\nimport { Formik } from 'formik';\n\nimport { useAuth } from 'hooks';\nimport { update } from '../../redux/auth/authOperation';\nimport { useDispatch } from 'react-redux';\nimport { UpdateAvatar } from 'components/UpdateAvatar';\nimport { Icon } from 'components/Icon';\nimport { EditProfileSchema } from 'schemas/editProfileSchema';\n\nexport const EditProfile = () => {\n  const { user } = useAuth();\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <Title>Edit profile</Title>\n     <UpdateAvatar />\n\n      <Formik\n        initialValues={{\n          name: user.name,\n          email: user.email,\n          password: '',\n          \n        }}\n        validationSchema={EditProfileSchema}\n        onSubmit={(values, actions) => {\n          dispatch(update(values));\n        }}\n      >\n        <StyledForm>\n           \n          <Label>\n            <StyledField id=\"name\" name=\"name\" />\n            <ErrMsg name=\"name\" component=\"p\" />\n          </Label>\n\n          <Label>\n            <StyledField id=\"email\" name=\"email\" type=\"email\" />\n            <ErrMsg name=\"email\" component=\"p\" />\n          </Label>\n\n          <StyledLabel>\n            <Icon name=\"eye\" stroke=\"var(--primaryTextColor)\" />\n            <LastField\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Enter or update your password\"\n            />\n            <ErrMsg name=\"password\" component=\"p\" />\n          </StyledLabel>\n\n          <Button type=\"submit\">Submit</Button>\n        </StyledForm>\n      </Formik>\n    </Container>\n  );\n};\n","import { Container, Name, Avatar, Button } from './UserInfo.styled';\nimport { EditProfile } from 'components/EditProfile';\nimport { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\n\nimport { useAuth } from 'hooks';\n\nconst cloudinaryBaseURL =\n  'https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707503119/';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    padding: '0',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const UserInfo = () => {\n  const { user } = useAuth();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <Container>\n      <Name>{user.name}</Name>\n\n      <Avatar\n        src={cloudinaryBaseURL + user.avatarURL}\n        width=\"32\"\n        height=\"32\"\n        alt=\"user photo\"\n        onClick={openModal}\n      />\n\n      <Modal isOpen={isModalOpen} style={customStyles} contentLabel=\"Modal\">\n        <EditProfile />\n        <Button onClick={closeModal}>\n          <Icon name=\"close\" stroke=\"var(--primaryTextColor)\" />\n        </Button>\n      </Modal>\n    </Container>\n  );\n};\n","export const selectBoards = state => state.boards.boards;\nexport const selectCurrentBoard = state => state.boards.currentBoard;","import axios from 'axios';\nimport toast from 'react-hot-toast';\n\nexport const sendDataEmail = async data => {\n  try {\n    await axios.post('/support', data);\n    toast.success('Successfully sent!');\n  } catch (error) {\n    toast.error('Oops. Something went wrong');\n  }\n};\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const ContainerForModal = styled.div`\n  position: relative;\n  padding: 24px 34px 50px 24px;\n  width: 320px;\n  height: 381px;\n\n  background: var(--headerBgColor);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.05);\n\n  @media only screen and (min-width: 375px) {\n    width: 345px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 400px;\n    height: 355px;\n    padding: 24px;\n  }\n`;\n\nexport const TitleForModal = styled.h3`\n  margin-bottom: 24px;\n\n  text-align: start;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\nexport const StyledFormInModal = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledFieldInModal = styled(Field)`\n  position: relative;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  width: 100%;\n\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  resize: none;\n  opacity: 0.4;\n\n  font-size: 14px;\n  line-height: 1.4;\n\n  color: var(--primaryTextColor);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n\n  transition: opacity var(--transition);\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: 19px;\n    width: 100%;\n  }\n  @media only screen and (min-width: 1440px) {\n    margin-bottom: 14px;\n  }\n`;\n\nexport const StyledTextareaInModal = styled(Field)`\n  position: relative;\n  margin-bottom: 24px;\n  padding: 14px 18px;\n  width: 100%;\n\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  resize: none;\n  opacity: 0.4;\n\n  font-size: 14px;\n  height: calc(30px * 4);\n  line-height: 1.5;\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n\n  color: var(--primaryTextColor);\n\n  transition: opacity var(--transition);\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 100%;\n  }\n`;\n\nexport const ButtonForModal = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 49px;\n  width: 100%;\n\n  background-color: var(--accent);\n  border: 0;\n  border-radius: 8px;\n\n  color: var(--primaryTextColor);\n  font-size: 14px;\n  line-height: 1.5;\n  cursor: pointer;\n\n  transition: background-color var(--transition);\n\n  &:hover,\n  :focus {\n    background-color: var(--btnBgColorHover);\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 100%;\n  }\n`;\n\nexport const ButtonClose = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  padding: 0;\n  border: none;\n  background: none;\n  cursor: pointer;\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  font-size: 12px;\n  font-style: italic;\n  color: red;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { sendDataEmail } from 'services/sendDataEmail';\nimport {\n  ButtonClose,\n  ButtonForModal,\n  ContainerForModal,\n  ErrMsg,\n  Label,\n  StyledFieldInModal,\n  StyledFormInModal,\n  StyledTextareaInModal,\n  TitleForModal,\n} from './SendEmail.styled';\nimport { Icon } from 'components/Icon';\n\nconst initialValues = {\n  emailForSupport: '',\n  textMessage: '',\n};\n\nconst builderSchema = Yup.object().shape({\n  emailForSupport: Yup.string().email().required('This field is required'),\n  textMessage: Yup.string()\n    .min(5, `It's can be up to 5 characters long`)\n    .required(`This field is required`),\n});\n\nexport const SendEmail = ({ onClose }) => {\n  const onSubmit = (data, form) => {\n    sendDataEmail(data);\n    form.resetForm();\n    onClose();\n  };\n\n  return (\n    <ContainerForModal>\n      <TitleForModal>Need help</TitleForModal>\n      <ButtonClose type=\"button\" onClick={onClose}>\n        <Icon\n          stroke=\"var(--primaryTextColor)\"\n          name=\"close\"\n          width=\"18\"\n          height=\"18\"\n        />\n      </ButtonClose>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={builderSchema}\n        onSubmit={onSubmit}\n      >\n        <StyledFormInModal>\n          <Label>\n            <StyledFieldInModal\n              type=\"email\"\n              name=\"emailForSupport\"\n              placeholder=\"Email address\"\n            />\n            <ErrMsg component=\"p\" name=\"emailForSupport\" />\n          </Label>\n\n          <Label>\n            <StyledTextareaInModal\n              rows={4}\n              component=\"textarea\"\n              type=\"text\"\n              name=\"textMessage\"\n              placeholder=\"Comment\"\n            />\n            <ErrMsg component=\"p\" name=\"textMessage\" />\n          </Label>\n\n          <ButtonForModal type=\"submit\">Send</ButtonForModal>\n        </StyledFormInModal>\n      </Formik>\n    </ContainerForModal>\n  );\n};\n","import styled from 'styled-components';\n\nexport const NeedHelpBlock = styled.div`\n  height: 238px;\n  padding: 14px;\n  margin-bottom: 24px;\n  font-size: 12px;\n  border-radius: 8px;\n  background-color: var(--secondaryBgColor);\n\n  p {\n    margin-top: 14px;\n    margin-bottom: 18px;\n    line-height: 1.33333;\n    letter-spacing: 0;\n  }\n`;\n\nexport const NeedHelpBtn = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  background: none;\n  display: flex;\n  align-items: center;\n\n  span {\n    margin-left: 8px;\n    color: var(--primaryTextColor);\n    font-family: 'Poppins-Medium';\n  }\n`;","import { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { SendEmail } from 'components/SendEmail';\nimport { NeedHelpBlock, NeedHelpBtn } from './NeedHelp.styled';\n\nconst customStyles = {\n  content: {\n    width: 'fit-content',\n    height: 'fit-content',\n    padding: 0,\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\n// Modal.setAppElement('#root');\n\nexport const NeedHelp = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <NeedHelpBlock>\n      <picture>\n        <source\n          srcSet=\"\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-1x.webp 1x,\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-2x.webp 2x\n            \"\n        />\n        <img\n          src=\"https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-1x.webp\"\n          width=\"54\"\n          height=\"78\"\n          alt=\"little cute cactus\"\n        />\n      </picture>\n      <p>\n        If you need help with{' '}\n        <span style={{ color: 'var(--accent)' }}>TaskPro</span>, check out our\n        support resources or reach out to our customer support team.\n      </p>\n      <NeedHelpBtn type=\"button\" onClick={openModal}>\n        <Icon\n          name=\"help\"\n          width=\"20\"\n          height=\"20\"\n          stroke=\"var(--primaryTextColor)\"\n        />\n        <span>Need help?</span>\n      </NeedHelpBtn>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Need help modal\"\n      >\n        <SendEmail onClose={closeModal} />\n      </Modal>\n    </NeedHelpBlock>\n  );\n};\n","import styled from 'styled-components';\n\nexport const BoardCreationBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-top: rgba(255, 255, 255, 0.1) solid 1px;\n  border-bottom: rgba(255, 255, 255, 0.1) solid 1px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  margin-bottom: 40px;\n`;\n\nexport const BtnCreate = styled.button`\n  width: 40px;\n  height: 36px;\n  background-color: var(--btnPlus);\n  border: none;\n  border-radius: 6px;\n  stroke: var(--primaryBgColor);\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnPlusHover);\n  }\n`;","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 335px;\n  height: 433px;\n\n  border-radius: 8px;\n\n  background-color: var(--modalBgColor);\n\n  stroke: var(--primaryTextColor);\n\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const ModalTitle = styled.h3`\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Medium';\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--primaryTextColor);\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const FormWrap = styled(Form)`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const Input = styled(Field)`\n  width: 287px;\n  height: 49px;\n  padding: 14px 0 14px 18px;\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Regular';\n  font-size: 14px;\n\n  border: 1px solid var(--btnPlus);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n\n  color: var(--primaryTextColor);\n  background-color: ${({ theme }) =>\n    theme === 'dark' ? ' #1f1f1f' : 'inherit'};\n  opacity: 0.4;\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 14px;\n\n  color: var(--primaryTextColor);\n`;\n\nexport const IconsListWrap = styled.ul`\n  display: flex;\n  gap: 8px;\n\n  margin-bottom: 24px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 0;\n\n  border: none;\n  background-color: inherit;\n\n  width: 18px;\n  height: 18px;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  cursor: pointer;\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:focus,\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const InvisibleInput = styled(Field)`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n\nexport const BackgroundsPallet = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  width: 252px;\n  height: 60px;\n  margin-bottom: 40px;\n`;\n\nexport const LabelPic = styled.label``;\n\nexport const Div = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  transition: transform var(--transition);\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  min-width: 287px;\n  height: 49px;\n\n  padding: 10px 0 11px 0;\n\n  border: 1px solid black;\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--btnText);\n  background-color: var(--btnBgColor);\n  transition: background-color var(--transition);\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnBgColorHover);\n  }\n`;\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n\n  border-radius: 8px;\n\n  background-color: var(--btnText);\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--plusInBtn);\n  }\n`;\n","import { Icon } from 'components/Icon';\nimport * as Yup from 'yup';\nimport {\n  FormWrap,\n  Input,\n  Text,\n  AddBtn,\n  IconWrap,\n  ModalWrap,\n  CloseBtn,\n  ModalTitle,\n  IconsListWrap,\n  InvisibleInput,\n  BackgroundsPallet,\n  Label,\n  LabelPic,\n  Div,\n} from './BoardCreatingModal.styled.js';\nimport { Formik } from 'formik';\nimport { useDispatch } from \"react-redux\";\nimport { addBoard } from '../../redux/boards/boardsOperations';\n\n\nconst iconsArr = [\n  'four-circles',\n  'star',\n  'loading',\n  'puzzle',\n  'container',\n  'lightning',\n  'colors',\n  'hexagon',\n];\n\nconst backgroundsArr = [\n  'noBack',\n  'miklos',\n  'eberhard',\n  'diego',\n  'vino',\n  'vickholius',\n  'romello',\n  'kace',\n  'milad',\n  'gaetan',\n  'florian',\n  'tony',\n  'nicolas',\n  'gabriella',\n  'igor',\n  'zhou',\n];\n\nconst schema = Yup.object({\n  title: Yup.string().required(),\n  icon: Yup.string().oneOf(iconsArr).required(),\n  background: Yup.string().oneOf(backgroundsArr).required(),\n});\n\nexport const BoardCreatingModal = ({ onClose }) => {\n  const dispatch = useDispatch()\n\n  const initialValues = {\n    title: '',\n    icon: 'four-circles',\n    background: 'noBack',\n  };\n\n  const onSubmit = (values) => {\n    dispatch(addBoard(values));\n    onClose();\n  };\n  return (\n    <ModalWrap>\n      <ModalTitle>New board</ModalTitle>\n      <CloseBtn type=\"button\" onClick={onClose}>\n        <Icon name=\"close\" />\n      </CloseBtn>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={onSubmit}\n      >\n        <FormWrap>\n          <Input type=\"text\" placeholder=\"Title\" name=\"title\" />\n          <Text>Icons</Text>\n\n          <IconsListWrap>\n            {iconsArr.map(el => (\n              <li key={el}>\n                <Label>\n                  <Icon name={el} />\n                  <InvisibleInput type=\"radio\" name=\"icon\" value={el} />\n                </Label>\n              </li>\n            ))}\n          </IconsListWrap>\n\n          <Text>Backgrounds</Text>\n          <BackgroundsPallet>\n            {backgroundsArr.map(el => {\n              const srcSetPath = ` https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp 1x,\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_56x56.webp 2x`;\n              const srcDefault = `https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp`;\n              return (\n                <li key={el}>\n                  <LabelPic>\n                    <Div>\n                      <picture>\n                        <source srcSet={srcSetPath} />\n                        <img src={srcDefault} alt=\"background example\" />\n                      </picture>\n                    </Div>\n                    <InvisibleInput type=\"radio\" name=\"background\" value={el} />\n                  </LabelPic>\n                </li>\n              );\n            })}\n          </BackgroundsPallet>\n\n          <AddBtn type=\"submit\">\n            <IconWrap>\n              <Icon name=\"plus\" />\n            </IconWrap>{' '}\n            Create\n          </AddBtn>\n        </FormWrap>\n      </Formik>\n    </ModalWrap>\n  );\n};\n","import { useState } from \"react\";\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { BoardCreationBlock, BtnCreate } from \"./BoardCreation.styled\";\nimport { BoardCreatingModal } from \"components/BoardCreatingModal\";\n\nconst customStyles = {\n  content: {\n    width: 'fit-content',\n    height: 'fit-content',\n    padding: 0,\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const BoardCreation = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <BoardCreationBlock>\n      <p>\n        Create a<br />\n        new board\n      </p>\n      <BtnCreate type=\"button\" onClick={openModal}>\n        <Icon name=\"plus\" width=\"20\" height=\"20\" />\n      </BtnCreate>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Creation board modal\"\n      >\n        <BoardCreatingModal\n          onClose={closeModal}\n          title=\"New board\"\n          btnText=\"Create\"\n        />\n      </Modal>\n    </BoardCreationBlock>\n  );\n};","import styled from 'styled-components';\n\nexport const ControlIconsContainer = styled.div`\n  margin-left: auto;\n  display: none;\n  gap: 8px;\n\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\n\nexport const BoardItemContainer = styled.li`\n  height: 61px;\n  margin: 0 -14px 0 -14px;\n  padding: 0 14px 0 14px;\n  display: flex;\n  align-items: center;\n  stroke: var(--primaryTextColor);\n  opacity: 0.5;\n  transition: var(--transition);\n\n  p {\n    margin-left: 4px;\n    font-family: 'Poppins-Medium';\n    font-size: 14px;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--secondaryBgColor);\n    opacity: 1;\n\n    > ${ControlIconsContainer} {\n      display: flex;\n      opacity: 0.5;\n    }\n  }\n`;","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 335px;\n  height: 433px;\n\n  border-radius: 8px;\n\n  background-color: var(--modalBgColor);\n\n  stroke: var(--primaryTextColor);\n\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const ModalTitle = styled.h3`\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Medium';\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--primaryTextColor);\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const FormWrap = styled(Form)`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const Input = styled(Field)`\n  width: 287px;\n  height: 49px;\n  padding: 14px 0 14px 18px;\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Regular';\n  font-size: 14px;\n\n  border: 1px solid var(--btnPlus);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n\n  color: var(--primaryTextColor);\n  background-color: ${({ theme }) =>\n    theme === 'dark' ? ' #1f1f1f' : 'inherit'};\n  opacity: 0.4;\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 14px;\n\n  color: var(--primaryTextColor);\n`;\n\nexport const IconsListWrap = styled.ul`\n  display: flex;\n  gap: 8px;\n\n  margin-bottom: 24px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 0;\n\n  border: none;\n  background-color: inherit;\n\n  width: 18px;\n  height: 18px;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  cursor: pointer;\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:focus,\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const InvisibleInput = styled(Field)`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n\nexport const BackgroundsPallet = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  width: 252px;\n  height: 60px;\n  margin-bottom: 40px;\n`;\n\nexport const LabelPic = styled.label``;\n\nexport const Div = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  transition: transform var(--transition);\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  min-width: 287px;\n  height: 49px;\n\n  padding: 10px 0 11px 0;\n\n  border: 1px solid black;\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--btnText);\n  background-color: var(--btnBgColor);\n  transition: background-color var(--transition);\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnBgColorHover);\n  }\n`;\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n\n  border-radius: 8px;\n\n  background-color: var(--btnText);\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--plusInBtn);\n  }\n`;\n","import { Icon } from 'components/Icon';\nimport * as Yup from 'yup';\nimport {\n  FormWrap,\n  Input,\n  Text,\n  AddBtn,\n  IconWrap,\n  ModalWrap,\n  CloseBtn,\n  ModalTitle,\n  IconsListWrap,\n  InvisibleInput,\n  BackgroundsPallet,\n  Label,\n  LabelPic,\n  Div,\n} from './BoardEditModal.styled';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { editBoard } from '../../redux/boards/boardsOperations';\n\nconst iconsArr = [\n  'four-circles',\n  'star',\n  'loading',\n  'puzzle',\n  'container',\n  'lightning',\n  'colors',\n  'hexagon',\n];\n\nconst backgroundsArr = [\n  'noBack',\n  'miklos',\n  'eberhard',\n  'diego',\n  'vino',\n  'vickholius',\n  'romello',\n  'kace',\n  'milad',\n  'gaetan',\n  'florian',\n  'tony',\n  'nicolas',\n  'gabriella',\n  'igor',\n  'zhou',\n];\n\nconst schema = Yup.object({\n  title: Yup.string().required(),\n  icon: Yup.string().oneOf(iconsArr).required(),\n  background: Yup.string().oneOf(backgroundsArr).required(),\n});\n\nexport const BoardEditModal = ({ onClose, board }) => {\n  const dispatch = useDispatch();\n\n  const { _id: boardId, title, icon, background } = board;\n\n  const initialValues = {\n    title,\n    icon,\n    background,\n  };\n\n  const onSubmit = board => {\n    dispatch(editBoard({ boardId, board }));\n    onClose();\n  };\n  return (\n    <ModalWrap>\n      <ModalTitle>Edit board</ModalTitle>\n      <CloseBtn type=\"button\" onClick={onClose}>\n        <Icon name=\"close\" />\n      </CloseBtn>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={onSubmit}\n      >\n        <FormWrap>\n          <Input type=\"text\" placeholder=\"Title\" name=\"title\" />\n          <Text>Icons</Text>\n\n          <IconsListWrap>\n            {iconsArr.map(el => (\n              <li key={el}>\n                <Label>\n                  <Icon name={el} />\n                  <InvisibleInput type=\"radio\" name=\"icon\" value={el} />\n                </Label>\n              </li>\n            ))}\n          </IconsListWrap>\n\n          <Text>Backgrounds</Text>\n          <BackgroundsPallet>\n            {backgroundsArr.map(el => {\n              const srcSetPath = ` https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp 1x,\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_56x56.webp 2x`;\n              const srcDefault = `https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp`;\n              return (\n                <li key={el}>\n                  <LabelPic>\n                    <Div>\n                      <picture>\n                        <source srcSet={srcSetPath} />\n                        <img src={srcDefault} alt=\"background example\" />\n                      </picture>\n                    </Div>\n                    <InvisibleInput type=\"radio\" name=\"background\" value={el} />\n                  </LabelPic>\n                </li>\n              );\n            })}\n          </BackgroundsPallet>\n\n          <AddBtn type=\"submit\">\n            <IconWrap>\n              <Icon name=\"plus\" />\n            </IconWrap>{' '}\n            Edit\n          </AddBtn>\n        </FormWrap>\n      </Formik>\n    </ModalWrap>\n  );\n};\n","import { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { BoardItemContainer, ControlIconsContainer } from './BoardItem.styled';\nimport { BoardEditModal } from 'components/BoardEditModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteBoard } from '../../redux/boards/boardsOperations';\nimport { selectCurrentBoard } from '../../redux/boards/boardsSelectors';\nimport { useNavigate } from 'react-router-dom';\n\n\nconst customStyles = {\n  content: {\n    width: 'fit-content',\n    height: 'fit-content',\n    padding: 0,\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const BoardItem = ({ board }) => {\n  const dispatch = useDispatch();\n  const currentBoard = useSelector(selectCurrentBoard);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const navigate = useNavigate();\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleSelectBoard = (event, boardId) => {\n    if (event.target.tagName !== 'BUTTON') {\n      localStorage.setItem('lastBoard', boardId);\n      navigate(`/${boardId}`)\n    }\n  };\n\n  const handleDelete = (boardId) => {\n    dispatch(deleteBoard(boardId));\n  }\n\n  return (\n    <BoardItemContainer\n      onClick={event => handleSelectBoard(event, board._id)}\n      selected={currentBoard && currentBoard._id === board._id}\n    >\n      <Icon name={board.icon} width=\"18\" height=\"18\" style={{ opacity: 0.5 }} />\n      <p>{board.title}</p>\n      <ControlIconsContainer>\n        <button type=\"button\" onClick={openModal}>\n          <Icon name=\"pencil\" width=\"16\" height=\"16\" />\n        </button>\n        <button type=\"button\" onClick={() => handleDelete(board._id)}>\n          <Icon name=\"trash\" width=\"16\" height=\"16\" />\n        </button>\n      </ControlIconsContainer>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Edition board modal\"\n      >\n        <BoardEditModal\n          onClose={closeModal}\n          board={board}\n        />\n      </Modal>\n    </BoardItemContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Logo = styled.div`\n  font-family: 'Poppins-SemiBold';\n  letter-spacing: -0.04em;\n  display: flex;\n  column-gap: 8px;\n  align-items: center;\n  margin-bottom: 70px;\n`;\n\nexport const BoardContainer = styled.div`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n\n  h3 {\n    margin-bottom: 8px;\n    font-size: 12px;\n    font-family: 'Poppins-Regular';\n    opacity: 50%;\n  }\n`;\n\nexport const BoardList = styled.ul`\n  margin-bottom: 40px;\n`;\n\nexport const LogOut = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  background: none;\n  display: flex;\n  align-items: center;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  stroke: var(--accent);\n  transition: var(--transition);\n\n  p {\n    margin-left: 14px;\n    color: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    stroke: var(--hover);\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectBoards } from '../../redux/boards/boardsSelectors.js';\nimport { fetchBoards } from '../../redux/boards/boardsOperations.js';\nimport { logOut } from '../../redux/auth/authOperation.js';\nimport { NeedHelp } from 'components/NeedHelp';\nimport { BoardCreation } from 'components/SidebarBoardCreation';\n\nimport { BoardItem } from 'components/BoardItem';\nimport { Icon } from 'components/Icon';\nimport { Logo, BoardContainer, BoardList, LogOut } from './SideBar.styled';\n\nexport const Sidebar = () => {\n  const dispatch = useDispatch();\n  const boards = useSelector(selectBoards);\n\n  useEffect(() => {\n    dispatch(fetchBoards());\n  }, [dispatch]);\n\n  const handleLogOut = () => {\n    dispatch(logOut());\n  };\n\n  return (\n    <>\n      <div>\n        <Logo>\n          <Icon name=\"logo\" width=\"32\" height=\"32\" />\n          <h2>TaskPro</h2>\n        </Logo>\n        <BoardContainer>\n          <h3>My boards</h3>\n          <BoardCreation />\n          <BoardList>\n            {boards.map(board => (\n              <BoardItem key={board._id} board={board} />\n            ))}\n          </BoardList>\n        </BoardContainer>\n      </div>\n      <div>\n        <NeedHelp />\n        <LogOut type=\"button\" onClick={handleLogOut}>\n          <Icon name=\"login\" width=\"32\" height=\"32\" />\n          <p>Log out</p>\n        </LogOut>\n      </div>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const DrpdwnBtn = styled.button`\n  position: relative;\n  display: flex;\n  gap: 4px;\n  background: none;\n  border: none;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  opacity: var(--secondaryOpacity);\n`;\n\nexport const ThemesList = styled.ul`\n  position: absolute;\n  top: 65%;\n  right: 52%;\n  padding: 18px 44px 18px 18px;\n  border: 1px solid var(--borderInThemeModal);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(17, 17, 17, 0.1);\n  background-color: var(--modalBgColor);\n  visibility: ${({ visibility }) => visibility};\n  opacity: ${({ opacity }) => opacity};\n  transform: ${({ transform }) => transform};\n  transition: 0.3s;\n`;\n\nexport const ThemeItem = styled.li`\n  font-family: 'Poppins-Regular';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  opacity: var(--opacityInThemeModal);\n  cursor: pointer;\n  &:hover,\n  :focus {\n    color: var(--accent);\n  }\n  &:not(:last-child) {\n    margin-bottom: 4px;\n  }\n`;\n","import { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeTheme } from '../../redux/auth/authOperation';\n\nimport { useClickOutside } from 'hooks/useClickOutside';\nimport { Icon } from 'components/Icon';\nimport { DrpdwnBtn, ThemesList, ThemeItem } from './ThemeSwitcher.styled';\n\nexport const ThemeSwitcher = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const menuRef = useRef(null);\n  const dispatch = useDispatch();\n\n  const visibility = isOpen ? 'visible' : 'hidden';\n  const opacity = isOpen ? '1' : '0';\n  const transform = isOpen ? 'translateY(10px)' : 'translateY(0)';\n\n  useClickOutside(menuRef, () => {\n    if (isOpen) {\n      setTimeout(() => setIsOpen(false), 50);\n    }\n  });\n\n  return (\n    <div ref={menuRef}>\n      <DrpdwnBtn type=\"button\" onClick={() => setIsOpen(!isOpen)}>\n        Theme\n        <Icon\n          name=\"chevron-down\"\n          width=\"16\"\n          heigth=\"16\"\n          stroke=\"var(--secondaryTextColor)\"\n        />\n      </DrpdwnBtn>\n      <ThemesList\n        visibility={visibility}\n        opacity={opacity}\n        transform={transform}\n      >\n        <ThemeItem onClick={() => dispatch(changeTheme({ theme: 'light' }))}>\n          Light\n        </ThemeItem>\n        <ThemeItem onClick={() => dispatch(changeTheme({ theme: 'dark' }))}>\n          Dark\n        </ThemeItem>\n        <ThemeItem onClick={() => dispatch(changeTheme({ theme: 'violet' }))}>\n          Violet\n        </ThemeItem>\n      </ThemesList>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\n\nexport const useClickOutside = (ref, callback) => {\n  const handleClick = evnt => {\n    if (ref.current && !ref.current.contains(evnt.target)) {\n      callback();\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClick);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    };\n  });\n};\n","import styled from 'styled-components';\n\nexport const HeaderStyled = styled.header`\n  position: relative;\n\n  max-width: 375px;\n  display: flex;\n  justify-content: space-between;\n\n  background-color: var(--headerBgColor);\n\n  padding: 14px 20px;\n\n  @media (min-width: 768px) {\n    max-width: 768px;\n    padding: 18px 32px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 1180px;\n    justify-content: flex-end;\n    padding: 18px 24px;\n  }\n`;\n\nexport const MenuBtn = styled.button`\n  border: none;\n  background-color: inherit;\n\n  svg {\n    width: 24px;\n    height: 24px;\n\n    @media (min-width: 768px) {\n      width: 32px;\n      height: 32px;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const HeaderWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: baseline;\n  gap: 14px;\n`;\n\nexport const customStylesForModal = {\n  content: {\n    inset: 0,\n    width: 'fit-content',\n    height: 'fit-content',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n","import { UserInfo } from 'components/UserInfo';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { Sidebar } from 'components/SideBar';\nimport { ThemeSwitcher } from 'components/ThemeSwitcher';\nimport { Icon } from 'components/Icon';\nimport {\n  HeaderStyled,\n  HeaderWrapper,\n  MenuBtn,\n  customStylesForModal,\n} from './Header.styled';\n\nexport const Header = () => {\n  const [isMenuOpen, setIsOpenMenu] = useState(false);\n\n  const openMenu = () => {\n    setIsOpenMenu(true);\n  };\n\n  const closeMenu = () => {\n    setIsOpenMenu(false);\n  };\n\n  return (\n    <HeaderStyled>\n      <MenuBtn type=\"button\" onClick={openMenu}>\n        <Icon name=\"menu\" stroke=\"var(--secondaryTextColor)\" />\n      </MenuBtn>\n\n      <HeaderWrapper>\n        <ThemeSwitcher />\n        <UserInfo />\n      </HeaderWrapper>\n      <Modal\n        isOpen={isMenuOpen}\n        onRequestClose={closeMenu}\n        style={customStylesForModal}\n        contentLabel=\"Sidebar\"\n      >\n        <Sidebar />\n      </Modal>\n    </HeaderStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  margin-bottom: 26px;\n\n  @media (max-width: 767px) {\n    padding: 14px 0px;\n  }\n\n  @media (min-width: 768px) {\n    padding: 26px 0px;\n  }\n\n  @media (min-width: 1440px) {\n    padding: 10px 0px;\n  }\n`;\n\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const BoardName = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--primaryTextColor);\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const FilterBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  font-family: 'Poppins-Medium';\n\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  border: none;\n\n  color: var(--secondaryTextColor);\n  background-color: inherit;\n  filter: drop-shadow(0 0 3px var(--primaryBgColor));\n\n  stroke: var(--secondaryTextColor);\n  transition: opacity var(--transition);\n  > svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: var(--accent);\n    stroke: var(--accent);\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 300px;\n  height: 234px;\n\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.05);\n  background: var(--modalBgColor);\n`;\n\nexport const FiltersTytle = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  margin-bottom: 14px;\n  /* margin-left: 24px; */\n  color: var(--primaryTextColor);\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  /* opacity: 0.5; */\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const HorizontalLine = styled.hr`\n  margin-bottom: 14px;\n  stroke-width: 1px;\n  stroke: rgba(22, 22, 22, 0.1);\n`;\n\nexport const LabelName = styled.p`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  margin-bottom: 14px;\n  display: flex;\njustify-content: space-between;\nalign-items: center;\n  /* margin-left: 24px; */\n  color: var(--primaryTextColor);\n`;\n\nexport const ShowPickers = styled.button`\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 400; */\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  text-decoration: underline;\n  /* color: rgba(255, 255, 255, 0.5); */\n`;\n\nexport const PickersList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Picker = styled.label`\n  display: flex;\n  align-items: center;\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 400; */\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  opacity: 0.5;\n  color: var(--secondaryTextColor);\n\n   &:hover,\n  &:focus,\n  &:active {\n    color: var(--secondaryTextColor)\n  }\n`;\n\nexport const PickerName = styled.span`\n  margin-left: 8px;\n`\n","import styled from 'styled-components';\n\nexport const StyledRadioGroup = styled.div`\n  height: 18px;\n  display: flex;\n  gap: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const RadioButton = styled.input`\n  display: none;\n`;\n\nexport const RadioLabel = styled.label`\n  border-radius: 50%;\n  width: 14px;\n  height: 14px;\n  background-color: var(--priority-${({ $priority }) => $priority});\n  transition: var(--transition);\n  cursor: pointer;\n  box-sizing: border-box;\n  position: relative;\n\n  &.checked {\n    &::after {\n      content: '';\n      position: absolute;\n      width: 12px;\n      height: 12px;\n      top: 1px;\n      left: 1px;\n      border-radius: 50%;\n      border: 2px solid var(--primaryBgColor);\n    }\n  }\n`;\n","import { nanoid } from '@reduxjs/toolkit';\nimport { useSearchParams } from 'react-router-dom';\nimport {\n  RadioButton,\n  RadioLabel,\n  StyledRadioGroup,\n} from './RadioFiltres.styled';\n\nexport const RadioFilters = () => {\n  const list = ['low', 'medium', 'high', 'without'];\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currValue = searchParams.get('priority') || 'without';\n\n  const handleFilter = ({ target: { value } }) => {\n    setSearchParams({ priority: value });\n  };\n\n  return (\n    <>\n      <h3>Label Colors</h3>\n      <StyledRadioGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n        {list.map(item => (\n          <RadioLabel\n            key={nanoid()}\n            $priority={item}\n            // className={currValue === item ? 'checked' : ''}\n          >\n            <RadioButton\n              type=\"radio\"\n              name=\"priority\"\n              value={item}\n              checked={currValue === item}\n              onChange={handleFilter}\n            />\n          </RadioLabel>\n        ))}\n      </StyledRadioGroup>\n    </>\n  );\n};\n","import {\n  FiltersTytle,\n  Picker,\n  PickersList,\n  PickerName,\n  ShowPickers,\n  ModalWrap,\n  HorizontalLine,\n  LabelName,\n  CloseBtn,\n} from './FilterModal.styled';\n\nimport { Icon } from 'components/Icon';\nimport { RadioFilters } from 'components/RadioFiltres';\n\nexport const FilterModal = ({ closeModal }) => {\n  return (\n    <ModalWrap>\n      <FiltersTytle>Filters</FiltersTytle>\n      <CloseBtn type=\"button\" onClick={closeModal}>\n        <Icon name=\"close\" />\n      </CloseBtn>\n      <HorizontalLine />\n      <LabelName>\n        Label color\n        <ShowPickers type=\"button\">Show all</ShowPickers>\n      </LabelName>\n      <PickersList>\n        <Picker>\n          <input\n            width=\"14\"\n            height=\"14\"\n            type=\"radio\"\n            name=\"colorPicker\"\n            value=\"Grey\"\n            defaultChecked={true}\n            style={{ opacity: 0.5 }}\n          />\n          <PickerName>Without priority</PickerName>\n        </Picker>\n        <Picker>\n          <input\n            type=\"radio\"\n            name=\"colorPicker\"\n            value=\"Blue\"\n            style={{ opacity: 0.5 }}\n          />\n          <PickerName>Low</PickerName>\n        </Picker>\n        <Picker>\n          <input\n            type=\"radio\"\n            name=\"colorPicker\"\n            value=\"Red\"\n            style={{ opacity: 0.5 }}\n          />\n          <PickerName>Medium</PickerName>\n        </Picker>\n        <Picker>\n          <input\n            type=\"radio\"\n            name=\"colorPicker\"\n            value=\"Green\"\n            style={{ opacity: 0.5 }}\n          />\n          <PickerName>High</PickerName>\n        </Picker>\n      </PickersList>\n      <RadioFilters/>\n    </ModalWrap>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport {\n  FilterBtn,\n  BoardName,\n  Wrap,\n  customStyles,\n} from './HeaderDashboard.styled';\nimport { Icon } from 'components/Icon';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport { FilterModal } from 'components/FilterModal/FilterModal';\n\n\n\nexport const HeaderDashboard = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  const { boardName } = useParams();\n  return (\n    <Wrap>\n      <BoardName>{boardName}</BoardName>\n      <FilterBtn type=\"button\" onClick={openModal}>\n        <Icon name=\"filter\" />\n        Filters{' '}\n      </FilterBtn>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Filters Modal\"\n      >\n        <FilterModal closeModal={closeModal} />\n      </Modal>\n    </Wrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const CardBody = styled.li`\n  border-radius: 8px;\n  width: 335px; // змінити на /* width: 100%; */ коли стане у колонкуи\n  height: 154px;\n  background: var(--primaryBgColor);\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  position: relative;\n  padding: 14px 20px 14px 24px;\n`;\nexport const CardColor = styled.div`\n  position: absolute;\n  border-radius: 4px 0 0 4px;\n  width: 4px;\n  height: 154px;\n  top: 0px;\n  left: 0px;\n  background-color: var(--priority-${({ $priority }) => $priority});\n`;\nexport const CardTitle = styled.h4`\n  text-align: left;\n  font-family: 'Poppins-SemiBold';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin-bottom: 8px;\n`;\nexport const CardDescription = styled.p`\n  text-align: left;\n  font-size: 12px;\n  line-height: 1.33333;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  width: 290px;\n  height: 38px;\n  overflow: hidden; /* скрывает текст, который не помещается в контейнер */\n  text-overflow: ellipsis; /* отображает многоточие для обрезанного текста */\n  margin-bottom: 14px;\n`;\n\nexport const CardSolid = styled.div`\n  border: 1px solid var(--cards-line);\n  margin-bottom: 14px;\n`;\n\nexport const CardDetals = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const CardInformation = styled.div`\n  display: flex;\n`;\n\nexport const Priority = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 14px;\n`;\n\nexport const PriorityDetals = styled.div`\n  display: flex;\n`;\n\nexport const PriorityTitle = styled.p`\n  text-align: left;\n  font-size: 8px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\nexport const PriorityColor = styled.div`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  margin-right: 4px;\n  background-color: var(--priority-${({ $priority }) => $priority});\n`;\n\nexport const PriorityTipe = styled.p`\n  font-size: 10px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const Deadline = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 14px;\n`;\n\nexport const DeadlineTitle = styled.p`\n  text-align: left;\n  font-size: 8px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\n\nexport const DeadlineDate = styled.p`\n  text-align: left;\n  font-size: 10px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\nexport const CardButtons = styled.div`\n  display: flex;\n  gap: 8px;\n  stroke: var(--secondaryTextColor); //не змінюється в темах\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\nexport const Bell = styled.button`\n  stroke: var(--accent); //не змінюється в темах\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  transition: var(--transition);\n  stroke: var(--secondaryTextColor);\n  &:is(:hover, :focus) {\n    stroke: var(--accent);\n  }\n`;\n","import DatePicker from 'react-datepicker';\nimport { enGB } from 'date-fns/locale';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'components/Calendar/Calendar.css';\n\nexport function Calendar({ selectedDate, onDateChange }) {\n  const handleDateChange = date => {\n    onDateChange(date);\n  };\n\n  return (\n    <>\n      <span className=\"today\"> Today,</span>\n      <DatePicker\n        selected={selectedDate}\n        onChange={handleDateChange}\n        dateFormat=\"MMMM d\"\n        minDate={new Date()}\n        locale={enGB}\n        weekStartsOn={1}\n      />\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Container = styled.div`\n  border-radius: 8px;\n  height: 522px;\n  position: relative;\n  padding: 24px;\n  width: 100%;\n  background: var(--primaryBgColor);\n\n  @media only screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const ModalBody = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const TitleModal = styled.h2`\n  margin-bottom: 24px;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  line-height: 1.5;\n  color: var(--primaryTextColor);\n`;\n\nexport const CloseModal = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 4px;\n\n  color: red;\n  font-size: 12px;\n`;\n\nexport const TitleCard = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 14px;\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n\nexport const StyledDescription = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  padding-top: 14px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 154px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 24px;\n  transition: var(--transition);\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const LabelColorStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\n\nexport const StyleRadioButton = styled.div`\n  height: 18px;\n  display: flex;\n  gap: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const DeadlineStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\n\nexport const AddButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  background: var(--btnPlus);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnBgColorHover);\n  }\n  cursor: pointer;\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: var(--btnText);\n  margin-right: 8px;\n  stroke: var(--plusInBtn);\n`;\n\nexport const AddCardButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 335px;\n  height: 56px;\n  background: var(--btnPlus);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const StyledRadioGroup = styled.div`\n  height: 18px;\n  display: flex;\n  gap: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const RadioButton = styled(Field)`\n  display: none;\n`;\n\nexport const RadioLabel = styled.label`\n  border-radius: 50%;\n  width: 14px;\n  height: 14px;\n  background-color: var(--priority-${({ $priority }) => $priority});\n  transition: var(--transition);\n  cursor: pointer;\n  box-sizing: border-box;\n  position: relative;\n\n  &.checked {\n    &::after {\n      content: '';\n      position: absolute;\n      width: 12px;\n      height: 12px;\n      top: 1px;\n      left: 1px;\n      border-radius: 50%;\n      border: 2px solid var(--primaryBgColor);\n    }\n  }\n`;\n","import { nanoid } from '@reduxjs/toolkit';\nimport {\n  RadioButton,\n  RadioLabel,\n  StyledRadioGroup,\n} from './RadioInputs.styled';\nimport { useState } from 'react';\n\nexport const RadioInputs = ({ defaultChecked, onPriorityChange }) => {\n  const list = ['low', 'medium', 'high', 'without'];\n  const [currValue, setCurrValue] = useState(defaultChecked);\n\n  const handleInput = ({ target: { value } }) => {\n    onPriorityChange(value);\n    setCurrValue(value);\n  };\n\n  return (\n    <StyledRadioGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n      {list.map(item => (\n        <RadioLabel\n          key={nanoid()}\n          $priority={item}\n          className={currValue === item ? 'checked' : ''}\n        >\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value={item}\n            checked={currValue === item}\n            onChange={handleInput}\n          />\n        </RadioLabel>\n      ))}\n    </StyledRadioGroup>\n  );\n};\n","import { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Calendar } from 'components/Calendar';\nimport { Icon } from 'components/Icon';\n\nimport {\n  ModalBody,\n  Container,\n  TitleModal,\n  StyledDescription,\n  CloseModal,\n  TitleCard,\n  LabelColorStyle,\n  DeadlineStyle,\n  AddButton,\n  StylePlus,\n  StyledForm,\n  ErrMsg,\n  Label,\n} from './EditCardModal.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { editCard } from '../../redux/cards/cardsOperations.js';\nimport { RadioInputs } from 'components/RadioInputs/RadioInputs.jsx';\n\nconst priority = ['without', 'low', 'medium', 'high'];\n\nconst formCardSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(3, `It's can be up to 3 characters long`)\n    .max(100, 'Too Long!')\n    .required(`This field is required.`),\n  text: Yup.string()\n    .min(10, `It's can be up to 10 characters long`)\n    .max(500, 'Too Long!')\n    .required(`This field is required.`),\n  priority: Yup.string().oneOf(priority),\n  deadline: Yup.date(),\n});\n\nexport default function EditCardModal({ card, onClose }) {\n  const { _id: cardId, title, text, deadline, priority } = card;\n  const [selectedDate, setSelectedDate] = useState(deadline);\n  const dispatch = useDispatch();\n\n  const onSubmit = values => {\n    dispatch(editCard({ values, cardId }));\n    onClose();\n  };\n\n  return (\n    <Container>\n      <ModalBody>\n        <TitleModal>Edit card</TitleModal>\n        <CloseModal>\n          <button type=\"button\" onClick={onClose}>\n            <Icon\n              name=\"close\"\n              width=\"18\"\n              height=\"18\"\n              stroke=\"var(--primaryTextColor)\"\n            />\n          </button>\n        </CloseModal>\n        <Formik\n          initialValues={{\n            title,\n            text,\n            priority,\n            deadline: selectedDate,\n          }}\n          validationSchema={formCardSchema}\n          onSubmit={onSubmit}\n        >\n          {({ handleSubmit, setFieldValue }) => (\n            <StyledForm onSubmit={handleSubmit}>\n              <TitleCard type=\"text\" name=\"title\" placeholder=\"Title\" />\n              <ErrMsg component=\"p\" name=\"title\" />\n              <Label>\n                <StyledDescription\n                  rows={4}\n                  component=\"textarea\"\n                  name=\"text\"\n                  placeholder=\"Description\"\n                />\n                <ErrMsg component=\"p\" name=\"text\" />\n              </Label>\n              <LabelColorStyle id=\"colorCard-radio-group\">\n                Label color\n              </LabelColorStyle>\n              <RadioInputs\n                defaultChecked={priority}\n                onPriorityChange={priority => {\n                  setFieldValue('priority', priority);\n                }}\n              />\n              <DeadlineStyle>Deadline</DeadlineStyle>\n              <Calendar\n                selectedDate={selectedDate}\n                onDateChange={date => {\n                  setSelectedDate(date);\n                  setFieldValue('deadline', date);\n                }}\n              />\n              <AddButton type=\"submit\">\n                <StylePlus>\n                  <Icon name=\"plus\" width=\"14\" height=\"14\" />\n                </StylePlus>\n                <p>Edit</p>\n              </AddButton>\n            </StyledForm>\n          )}\n        </Formik>\n      </ModalBody>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const MoveList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border-radius: 8px;\n  background-color: var(--secondaryBgColor);\n  padding: 10px;\n`;\n","import styled from 'styled-components';\n\nexport const MoveCardItemStyled = styled.li`\n  &.current {\n    color: var(--accent);\n\n    &button {\n      pointer-events: none;\n    }\n  }\n`;\n\nexport const MoveCardItemButtonStyled = styled.button`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  cursor: pointer;\n`;","import { useDispatch } from 'react-redux';\nimport {\n  MoveCardItemButtonStyled,\n  MoveCardItemStyled,\n} from './MoveCardItem.styled';\nimport { chengeColumnsCard } from '../../redux/cards/cardsOperations';\n\nexport const MoveCardItem = ({ column, cardId, currentId }) => {\n  const dispatch = useDispatch();\n  const { _id, title } = column;\n  const current = _id === currentId ? 'current' : '';\n\n  const handleMoveCard = () => {\n    dispatch(chengeColumnsCard({ cardId, toColumnId: _id }));\n  };\n  return (\n    <MoveCardItemStyled className={current}>\n      <MoveCardItemButtonStyled onClick={handleMoveCard}>\n        {title}\n      </MoveCardItemButtonStyled>\n    </MoveCardItemStyled>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { MoveList } from './MoveCardDropdown.styled';\nimport { MoveCardItem } from 'components/MoveCardItem/MoveCardItem';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport const MoveCardDropdown = ({ currColumnId, cardId }) => {\n  const { columns } = useSelector(state => state.columns);\n  \n\n  return (\n    <MoveList>\n      {columns.map(item => {\n        return (\n          <MoveCardItem\n            currentId={currColumnId}\n            key={nanoid()}\n            column={item}\n            cardId={cardId}\n          />\n        );\n      })}\n    </MoveList>\n  );\n};\n","import { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\n\nimport {\n  CardBody,\n  CardDetals,\n  Priority,\n  PriorityDetals,\n  CardColor,\n  CardTitle,\n  CardDescription,\n  CardSolid,\n  PriorityTitle,\n  PriorityTipe,\n  PriorityColor,\n  Deadline,\n  DeadlineTitle,\n  DeadlineDate,\n  CardButtons,\n  CardInformation,\n  Bell,\n  Button,\n} from './Card.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteCard } from '../../redux/cards/cardsOperations';\nimport EditCardModal from 'components/EditCardModal/EditCardModal';\nimport { MoveCardDropdown } from 'components/MoveCardDropdown/MoveCardDropdown';\n\nexport default function Card({ card }) {\n  const [modalCardIsOpen, setmodalCardIsOpen] = useState(false);\n  const [isOpenMoveCardModal, setIsOpenMoveCardModal] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    _id: cardId,\n    title,\n    text,\n    deadline,\n    priority,\n    column: { _id: columnId },\n  } = card;\n  const dateDeadline = new Date(deadline);\n  const formatedDate = `${dateDeadline.getDate()}/${\n    dateDeadline.getMonth() + 1\n  }/${dateDeadline.getFullYear()}`;\n  const cardTextDescription = text.substring(0, 90) + '...';\n\n  const openCardModal = () => {\n    setmodalCardIsOpen(true);\n  };\n\n  const closeCardModal = () => {\n    setmodalCardIsOpen(false);\n  };\n\n  const handleDeleteCard = () => {\n    dispatch(deleteCard({ cardId }));\n  };\n\n  const hendleMoveCardModalOpen = () => {\n    setIsOpenMoveCardModal(true);\n  };\n\n  const hendleMoveCardModalClose = () => {\n    setIsOpenMoveCardModal(false);\n  };\n\n  return (\n    <CardBody>\n      <CardColor $priority={priority}></CardColor>\n      <CardTitle>{title}</CardTitle>\n      <CardDescription>{cardTextDescription}</CardDescription>\n      <CardSolid></CardSolid>\n      <CardDetals>\n        <CardInformation>\n          <Priority>\n            <PriorityTitle>Priority</PriorityTitle>\n            <PriorityDetals>\n              <PriorityColor $priority={priority}></PriorityColor>\n              <PriorityTipe>{priority}</PriorityTipe>\n            </PriorityDetals>\n          </Priority>\n          <Deadline>\n            <DeadlineTitle>Deadline</DeadlineTitle>\n            <DeadlineDate>{formatedDate}</DeadlineDate>\n          </Deadline>\n        </CardInformation>\n        <CardButtons>\n          <Bell type=\"button\">\n            <Icon name=\"bell\" width=\"16\" height=\"16\" />\n          </Bell>\n          <Button type=\"button\" onClick={hendleMoveCardModalOpen}>\n            <Icon name=\"arrow-in-circle\" width=\"16\" height=\"16\" />\n          </Button>\n          <Button type=\"button\" onClick={openCardModal}>\n            <Icon name=\"pencil\" width=\"16\" height=\"16\" />\n          </Button>\n          <Button type=\"button\" onClick={handleDeleteCard}>\n            <Icon name=\"trash\" width=\"16\" height=\"16\" />\n          </Button>\n        </CardButtons>\n      </CardDetals>\n      <Modal\n        isOpen={modalCardIsOpen}\n        onRequestClose={closeCardModal}\n        className={'modal-content'}\n        overlayClassName={'modal-overlay'}\n      >\n        <EditCardModal card={card} onClose={closeCardModal} />\n      </Modal>\n      <Modal\n        isOpen={isOpenMoveCardModal}\n        onRequestClose={hendleMoveCardModalClose}\n        className={'modal-content'}\n        overlayClassName={'modal-overlay'}\n      >\n        <MoveCardDropdown currColumnId={columnId} cardId={cardId} />\n      </Modal>\n    </CardBody>\n  );\n}\n","import styled from 'styled-components';\n\nexport const HeadWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 335px;\n  height: 56px;\n\n  padding: 17px 20px;\n\n  border-radius: 8px;\n\n  background-color: var(--extraBgColor);\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const CardList = styled.ul`\n  > li:not(:last-of-type) {\n    margin-bottom: 10px;\n  }\n  border-radius: 12px;\n\n  @media (min-width: 768px) {\n  }\n\n  @media (min-width: 1440px) {\n  }\n\n  overflow: auto;\n  padding: 0;\n\n  &::-webkit-scrollbar {\n    width: 8px; /* ширина скролбару */\n  }\n\n  &::-webkit-scrollbar-track {\n    background: var(--scroll-col); /* колір фону всієї доріжки скролбару */\n    border-radius: 12px; // заокруглення доріжки скролу\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: var(--scroll-col-bg); // колір самого скролу\n    border-radius: 12px; /* заокруглення самого скролу */\n\n    &:hover {\n      background-color: var(\n        --scroll-col-bg-hover\n      ); // колір самого скролу при наведенні\n    }\n  }\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const IconedBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  border: none;\n  background-color: inherit;\n\n  stroke: var(--secondaryTextColor);\n  transition: opacity var(--transition);\n\n  > svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    stroke: var(--accent);\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  width: 335px;\n  height: 56px;\n\n  padding: 10px 0 11px 0;\n\n  border: none;\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--btnText);\n  background-color: var(--btnBgColor);\n  transition: background-color var(--transition);\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnBgColorHover);\n  }\n`;\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n\n  border-radius: 8px;\n\n  background-color: var(--btnText);\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--plusInBtn);\n  }\n`;\n\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Container = styled.div`\n  border-radius: 8px;\n  height: 522px;\n  position: relative;\n  padding: 24px;\n  width: 100%;\n  background: var(--primaryBgColor);\n\n  display: flex;\n  flex-direction: column;\n\n  @media only screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const ModalBody = styled.div`\n  \n`;\n\nexport const TitleModal = styled.h2`\n  margin-bottom: 24px;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  line-height: 1.5;\n  color: var(--primaryTextColor);\n`;\n\nexport const CloseModal = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 4px;\n\n  color: red;\n  font-size: 12px;\n`;\n\nexport const TitleCard = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 14px;\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n\nexport const StyledDescription = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  padding-top: 14px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 154px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 24px;\n  transition: var(--transition);\n  resize: none;\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const LabelColorStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\n\nexport const StyleRadioButton = styled.div`\n  height: 18px;\n  display: flex;\n  gap: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const RadioButton = styled(Field)`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n`;\nexport const RadioButtonBlu = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: #8fa1d0;\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid #8fa1d0;\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const RadioButtonRed = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: #e09cb5;\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid #e09cb5;\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const RadioButtonGreen = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: #bedbb0;\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid #bedbb0;\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const RadioButtonGrey = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: rgba(22, 22, 22, 0.3);\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid rgba(22, 22, 22, 0.3);\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const DeadlineStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\n\nexport const AddButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  background: var(--btnPlus);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnBgColorHover);\n  }\n  cursor: pointer;\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: var(--btnText);\n  margin-right: 8px;\n  stroke: var(--plusInBtn);\n`;\n\nexport const AddCardButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 335px;\n  height: 56px;\n  background: var(--btnPlus);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Calendar } from 'components/Calendar';\nimport { Icon } from 'components/Icon';\n\nimport {\n  Container,\n  TitleModal,\n  StyledDescription,\n  CloseModal,\n  TitleCard,\n  LabelColorStyle,\n  DeadlineStyle,\n  AddButton,\n  StylePlus,\n  StyledForm,\n  ErrMsg,\n  Label,\n} from './AddCardModal.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { addCard } from '../../redux/cards/cardsOperations.js';\nimport { RadioInputs } from 'components/RadioInputs/RadioInputs.jsx';\n\nconst priority = ['without', 'low', 'medium', 'high'];\n\nconst formCardSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(3, `It's can be up to 3 characters long`)\n    .max(100, 'Too Long!')\n    .required(`This field is required.`),\n  text: Yup.string()\n    .min(10, `It's can be up to 10 characters long`)\n    .max(500, 'Too Long!')\n    .required(`This field is required.`),\n  priority: Yup.string().oneOf(priority),\n  deadline: Yup.date(),\n});\n\nexport default function AddCardModal({ title, btnText, onClose, columnId }) {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const dispatch = useDispatch();\n\n  const onSubmit = values => {\n    dispatch(addCard({ values, columnId }));\n    onClose();\n  };\n\n  return (\n    <Container>\n      <TitleModal>{title}</TitleModal>\n      <CloseModal>\n        <button type=\"button\" onClick={onClose}>\n          <Icon\n            name=\"close\"\n            width=\"18\"\n            height=\"18\"\n            stroke=\"var(--primaryTextColor)\"\n          />\n        </button>\n      </CloseModal>\n      <Formik\n        initialValues={{\n          title: '',\n          text: '',\n          priority: 'without',\n          deadline: selectedDate,\n        }}\n        validationSchema={formCardSchema}\n        onSubmit={onSubmit}\n      >\n        {({ handleSubmit, setFieldValue }) => (\n          <StyledForm onSubmit={handleSubmit}>\n            <TitleCard type=\"text\" name=\"title\" placeholder=\"Title\" />\n            <ErrMsg component=\"p\" name=\"title\" />\n            <Label>\n              <StyledDescription\n                rows={4}\n                component=\"textarea\"\n                name=\"text\"\n                placeholder=\"Description\"\n              />\n              <ErrMsg component=\"p\" name=\"text\" />\n            </Label>\n            <LabelColorStyle id=\"colorCard-radio-group\">\n              Label color\n            </LabelColorStyle>\n            <RadioInputs\n              defaultChecked=\"without\"\n              onPriorityChange={priority => {\n                setFieldValue('priority', priority);\n              }}\n            />\n            <DeadlineStyle>Deadline</DeadlineStyle>\n            <Calendar\n              selectedDate={selectedDate}\n              onDateChange={date => {\n                setSelectedDate(date);\n                setFieldValue('deadline', date);\n              }}\n            />\n            <AddButton type=\"submit\">\n              <StylePlus>\n                <Icon name=\"plus\" width=\"14\" height=\"14\" />\n              </StylePlus>\n              <p>{btnText}</p>\n            </AddButton>\n          </StyledForm>\n        )}\n      </Formik>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const HeadWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 335px;\n  height: 56px;\n\n  margin-bottom: 14px;\n  padding: 17px 20px;\n\n  border-radius: 8px;\n\n  background-color: var(--extraBgColor);\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const IconedBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  border: none;\n  background-color: inherit;\n\n  stroke: var(--secondaryTextColor);\n  transition: opacity var(--transition);\n\n  > svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    stroke: var(--accent);\n  }\n`;\n\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n","import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const customModalStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    // backgroundColor: '#151515',\n    backgroundColor: 'var(--modalBgColor)',\n  },\n//   overlay: {\n//     backgroundColor: 'rgba(0,0,0,0.5)',\n//   },\n};\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid rgba(190, 219, 176, 0.5);\n  border-radius: 8px;\n  width: 350px;\n  height: 221px;\n  /* background: #151515; */\n  background: var(--modalBgColor);\n  gap: 24px;\n`;\n\nexport const StyledField = styled(Field)`\n  font: inherit;\n  cursor: pointer;\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 400; */\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  /* border: 1px solid #bedbb0; */\n  border: 1px solid var(--btnPlus);\n  border-radius: 8px;\n  width: 302px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  /* background: #1f1f1f; */\n  background: var(--secondaryBgColor);\n  opacity: 0.4;\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  /* opacity: 0.5; */\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const Label = styled.label`\n  font-family: 'Poppins-Medium';\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 500; */\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  /* color: #fff; */\n  color: var(--primaryTextColor);\n`;\n\nexport const Button = styled.button`\n  font: inherit;\n  cursor: pointer;\n  border-radius: 8px;\n  width: 302px;\n  height: 49px;\n  /* background: #bedbb0; */\n  background: var(--btnPlus);\n  font-size: 20px;\n`;\n\nexport const ButtonText = styled.span`\n  font-family: 'Poppins-Medium';\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 500; */\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  /* color: #161616; */\n  color: var(--headerBgColor);\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  color: #f5530d;\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: black;\n  margin-right: 8px;\n  stroke: white;\n\n`;","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icon';\nimport {\n  Button,\n  ButtonText,\n  CloseBtn,\n  Label,\n  StylePlus,\n  StyledField,\n  StyledForm,\n} from './EditColumnFormik.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { editColumn } from '../../redux/columns/columnsOperations.js';\n\nconst addColumnFormSchema = Yup.object().shape({\n  title: Yup.string().min(2, 'Too short!').required('This field is required!'),\n});\n\nexport const EditColumnFormik = ({ title, columnId, onClose }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = body => {\n    dispatch(editColumn({ body, columnId }));\n  };\n\n  return (\n    <>\n      <Label>Edit column</Label>\n      <CloseBtn\n        type=\"button\"\n        onClick={onClose}\n        style={{ stroke: 'var(--primaryTextColor)' }}\n      >\n        <Icon name=\"close\" width=\"18\" height=\"18\" />\n      </CloseBtn>\n      <Formik\n        initialValues={{\n          title,\n        }}\n        validationSchema={addColumnFormSchema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <StyledField type=\"text\" name=\"title\" placeholder=\"Title\" />\n          <Button type=\"submit\">\n            <StylePlus>\n              <Icon name=\"plus\" width=\"14\" height=\"14\" />\n            </StylePlus>\n            <ButtonText>Edit</ButtonText>\n          </Button>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n","import { Icon } from 'components/Icon';\nimport {\n  HeadWrap,\n  IconedBtn,\n  Title,\n  Wrap,\n  customStyles,\n} from './ColumnHead.styled';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport { EditColumnFormik } from 'components/EditColumnFormik';\nimport { useDispatch } from 'react-redux';\nimport { deleteColumn } from '../../redux/columns/columnsOperations';\n\nexport const ColumnHead = ({ title, columnId }) => {\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleModalOpen = () => {\n    setIsOpenModal(true);\n  };\n\n  const handleModalClose = () => {\n    setIsOpenModal(false);\n  };\n\n  const handleDeleteColumn = () => {\n    dispatch(deleteColumn({ columnId }));\n  };\n\n  return (\n    <>\n      <HeadWrap>\n        <Title>{title}</Title>\n        <Wrap>\n          <IconedBtn type=\"button\" onClick={handleModalOpen}>\n            <Icon name=\"pencil\" />\n          </IconedBtn>\n          <IconedBtn type=\"button\" onClick={handleDeleteColumn}>\n            <Icon name=\"trash\" />\n          </IconedBtn>\n        </Wrap>\n      </HeadWrap>\n      <Modal\n        isOpen={isOpenModal}\n        onRequestClose={handleModalClose}\n        style={customStyles}\n        contentLabel=\"Column Edit Modal\"\n        ariaHideApp={false}\n      >\n        <EditColumnFormik\n          title={title}\n          columnId={columnId}\n          onClose={handleModalClose}\n        />\n      </Modal>\n    </>\n  );\n};\n","import { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport Card from 'components/Card/Card';\nimport { AddBtn, CardList, IconWrap, customStyles } from './Column.styled';\nimport AddCardModal from 'components/AddCardModal/AddCardModal';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { ColumnHead } from 'components/ColumnHead';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const Column = ({ columnId, title }) => {\n  const [modalCardIsOpen, setmodalCardIsOpen] = useState(false);\n  const { cards } = useSelector(state => state.cards);\n  const [searchParams] = useSearchParams();\n  const priority = searchParams.get('priority');\n\n  let filtredCards = cards?.filter(({ column: { _id } }) => _id === columnId);\n\n  if (priority) {\n    filtredCards = filtredCards?.filter(card => card.priority === priority)\n  };\n\n  const openCardModal = () => {\n    setmodalCardIsOpen(true);\n  };\n\n  const closeCardModal = () => {\n    setmodalCardIsOpen(false);\n  };\n\n  return (\n    <>\n      <ColumnHead title={title} columnId={columnId} />\n      <CardList>\n        {filtredCards.map(card => (\n          <Card key={nanoid()} card={card} />\n        ))}\n      </CardList>\n      <AddBtn type=\"button\" onClick={openCardModal}>\n        <IconWrap>\n          <Icon name=\"plus\" />\n        </IconWrap>{' '}\n        Add another card\n      </AddBtn>\n      <Modal\n        isOpen={modalCardIsOpen}\n        onRequestClose={closeCardModal}\n        style={customStyles}\n        contentLabel=\"Card Add Modal\"\n        ariaHideApp={false}\n      >\n        <AddCardModal\n          columnId={columnId}\n          title={'Add card'}\n          btnText={'Add'}\n          onClose={closeCardModal}\n        />\n      </Modal>\n    </>\n  );\n};\n","import styled from 'styled-components';\n// import 'react-perfect-scrollbar/dist/css/styles.css';\n\nexport const Container = styled.div`\n  max-width: 347px;\n\n  @media (min-width: 768px) {\n    max-width: 718px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 1128px;\n  }\n\n  &.scrollbar-container {\n    height: auto;\n  }\n  overflow: auto;\n  padding: 0 0 8px;\n\n  &::-webkit-scrollbar {\n    width: 12px; /* ширина скролбару */\n    height: 12px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: var(--scroll); /* колір фону всієї доріжки скролбару */\n    border-radius: 12px; // заокруглення доріжки скролу\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: var(--scrollBg); // колір самого скролу\n    border-radius: 12px; /* заокруглення самого скролу */\n\n    &:hover {\n      background-color: var(\n        --scroll-bg-hover\n      ); // колір самого скролу при наведенні\n    }\n  }\n`;\n\nexport const customStyles = { \n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const ColumnList = styled.ul`\n  display: flex;\n  gap: 18px;\n`;\n\nexport const ColumnItem = styled.li`\n  display: grid;\n  grid-template-rows: 56px minmax(0, 1fr) 56px;\n  gap: 14px;\n  width: 347px;\n  height: calc(90vh - 80px);\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  gap: 18px;\n  align-items: flex-start;\n  padding: 0 0 8px;\n`;\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  min-width: 334px;\n  width: 334px;\n\n  padding: 14px 78px;\n\n  border: none;\n  border-radius: 8px;\n\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--secondaryTextColor);\n  background-color: var(--extraBgColor);\n\n  opacity: 1;\n  transition: color background-color var(--transition);\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: var(--btnText);\n    background-color: var(--btnBgColor);\n  }\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n`;\n\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n  border: 1px solid black;\n  border-radius: 8px;\n  stroke: var(--extraBgColor);\n\n  background-color: var(--squareIconColor);\n  transition: background-color stroke var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnText);\n    stroke: var(--plusInBtn);\n  }\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--extraBgColor);\n  }\n`;\n","import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid rgba(190, 219, 176, 0.5);\n  border-radius: 8px;\n  width: 350px;\n  height: 221px;\n  /* background: #151515; */\n  background: var(--modalBgColor);\n  gap: 24px;\n`;\n\nexport const StyledField = styled(Field)`\n  font: inherit;\n  cursor: pointer;\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 400; */\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  /* border: 1px solid #bedbb0; */\n  border: 1px solid var(--btnPlus);\n  border-radius: 8px;\n  width: 302px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  /* background: #1f1f1f; */\n  background: var(--secondaryBgColor);\n  opacity: 0.4;\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  /* opacity: 0.5; */\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const Label = styled.label`\n  font-family: 'Poppins-Medium';\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 500; */\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  /* color: #fff; */\n  color: var(--primaryTextColor);\n`;\n\nexport const Button = styled.button`\n  font: inherit;\n  cursor: pointer;\n  border-radius: 8px;\n  width: 302px;\n  height: 49px;\n  /* background: #bedbb0; */\n  background: var(--btnPlus);\n  font-size: 20px;\n`;\n\nexport const ButtonText = styled.span`\n  font-family: 'Poppins-Medium';\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 500; */\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  /* color: #161616; */\n  color: var(--headerBgColor);\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  color: #f5530d;\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: black;\n  margin-right: 8px;\n  stroke: white;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icon';\nimport {\n  Button,\n  ButtonText,\n  CloseBtn,\n  Label,\n  StylePlus,\n  StyledField,\n  StyledForm,\n} from './AddColumnFormik.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { addColumn } from '../../redux/columns/columnsOperations.js';\n\nconst addColumnFormSchema = Yup.object().shape({\n  title: Yup.string().min(2, 'Too short!').required('This field is required!'),\n});\n\nexport const AddColumnFormik = ({ boardId, onClose }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = body => {\n    dispatch(addColumn({ body, boardId }));\n  };\n\n  return (\n    <>\n      <Label>Add column</Label>\n      <CloseBtn\n        type=\"button\"\n        onClick={onClose}\n        style={{ stroke: 'var(--primaryTextColor)' }}\n      >\n        <Icon name=\"close\" width=\"18\" height=\"18\" />\n      </CloseBtn>\n      <Formik\n        initialValues={{\n          title: '',\n        }}\n        validationSchema={addColumnFormSchema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <StyledField type=\"text\" name=\"title\" placeholder=\"Title\" />\n          <Button type=\"submit\">\n            <StylePlus>\n              <Icon name=\"plus\" width=\"14\" height=\"14\" />\n            </StylePlus>\n            <ButtonText>Add</ButtonText>\n          </Button>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n","import { Column } from 'components/Column';\nimport {\n  IconWrap,\n  AddBtn,\n  Wrap,\n  ColumnItem,\n  Container,\n  ColumnList,\n  customStyles,\n} from './Board.styled';\nimport { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { AddColumnFormik } from 'components/AddColumnFormik/AddColumnFormik';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useParams } from 'react-router-dom';\n\nexport const Board = () => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const { columns } = useSelector(state => state.columns);\n  const { boardId } = useParams();\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n  return (\n    <>\n      <Container>\n        <Wrap>\n          <ColumnList>\n            {columns.map(({ _id, title }) => {\n              return (\n                <ColumnItem key={nanoid()}>\n                  <Column title={title} columnId={_id} />\n                </ColumnItem>\n              );\n            })}\n          </ColumnList>\n          <AddBtn type=\"button\" onClick={openModal}>\n            <IconWrap>\n              <Icon name=\"plus\" />\n            </IconWrap>{' '}\n            Add another column\n          </AddBtn>\n        </Wrap>\n      </Container>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Column Edit Modal\"\n        ariaHideApp={false}\n      >\n        <AddColumnFormik onClose={closeModal} boardId={boardId} />\n      </Modal>\n    </>\n  );\n};\n","import { HeaderDashboard } from 'components/HeaderDashboard';\nimport { Board } from 'components/Board';\n\nexport const ScreensPage = () => {\n  return (\n    <>\n      <HeaderDashboard />\n      <Board />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StartContainer = styled.div`\n  height: 80vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const StartText = styled.p`\n  min-width: 280px;\n\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  line-height: 1.33;\n\n  color: var(--secondaryTextColor);\n\n  @media (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media (min-width: 768px) {\n    line-height: 1.29;\n    width: 486px;\n    margin: auto;\n  }\n`;\n\n\n\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const BoardCreationBtn = styled.button`\n  margin: 0;\n  padding: 0;\n\n  border: none;\n  outline: none;\n\n  background-color: inherit;\n  color: var(--btnPlus);\n  cursor: pointer;\n  transition: color var(--transition);\n  &:hover,\n  &:focus {\n    color: var(--btnPlusHover);\n  }\n`;\n","import {\n  StartText,\n  BoardCreationBtn,\n  customStyles,\n  StartContainer,\n} from './StartScreen.styled';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { BoardCreatingModal } from 'components/BoardCreatingModal';\n\nexport const StartScreen = () => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <StartContainer>\n      <StartText>\n        Before starting your project, it is essential{' '}\n        <BoardCreationBtn type=\"button\" onClick={openModal}>\n          to create a board\n        </BoardCreationBtn>{' '}\n        to visualize and track all the necessary tasks and milestones. This\n        board serves as a powerful tool to organize the workflow and ensure\n        effective collaboration among team members.\n      </StartText>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Board Creation Modal\"\n        ariaHideApp={false}\n      >\n        <BoardCreatingModal onClose={closeModal} />\n      </Modal>\n    </StartContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SidebarWrapper = styled.aside`\n  @media screen and (max-width: 1179px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 1180px) {\n    padding: 14px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    grid-column: 1 / 2;\n    grid-row-start: 1;\n    grid-row-end: 3;\n  }\n`;\n\nexport const Main = styled.main`\n  grid-column: 1 / 2;\n  grid-row: 2 / 3;\n  padding: 10px 24px;\n  height: 100vh;\n  background-color: var(--secondaryBgColor);\n  background-image: url(${props => props.$backgroundImg}_375x812.webp);\n  background-repeat: no-repeat;\n  max-width: 375px;\n  height: auto;\n  background-position: center;\n  background-size: cover;\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${props => props.$backgroundImg}_750x1624.webp);\n  }\n  @media (min-width: 768px) {\n    background-image: url(${props => props.$backgroundImg}_768x956.webp);\n    max-width: 768px;\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${props => props.$backgroundImg}_1536x1912.webp);\n    }\n  }\n\n  @media (min-width: 1180px) {\n    background-image: url(${props => props.$backgroundImg}_1180x770.webp);\n    max-width: 1180px;\n    grid-column: 2 / 3;\n    grid-row: 2 / 3;\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${props => props.$backgroundImg}_2360x1540.webp);\n    }\n  }\n`;\n","import { useEffect } from 'react';\nimport { Header } from 'components/Header';\nimport { Sidebar } from 'components/SideBar';\nimport { ScreensPage } from 'components/ScreensPage';\nimport { StartScreen } from 'components/StartScreen';\nimport { Main, SidebarWrapper } from './HomePage.styled';\nimport { useSelector } from 'react-redux';\nimport { Outlet, useNavigate, useParams } from 'react-router-dom';\nimport { fetchBoardById } from '../../redux/boards/boardsOperations';\nimport { fetchColumnsByBoardId } from '../../redux/columns/columnsOperations';\nimport { fetchCards } from '../../redux/cards/cardsOperations';\nimport { useDispatch } from 'react-redux';\nimport { useAuth } from 'hooks';\n\nexport default function HomePage() {\n  const { boardId } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const boardFromLS = localStorage.getItem('lastBoard');\n  const { isLoggedIn } = useAuth();\n\n  useEffect(() => {\n    const setLastBoard = () => {\n      if (boardFromLS) {\n        navigate(`/${boardFromLS}`);\n      }\n    };\n    setLastBoard();\n    return () => {\n      setLastBoard();\n    };\n  }, [boardFromLS, navigate]);\n\n  useEffect(() => {\n    if (boardId && isLoggedIn) {\n      dispatch(fetchBoardById(boardId));\n      dispatch(fetchColumnsByBoardId(boardId));\n      dispatch(fetchCards(boardId));\n    }\n    return () => {};\n  }, [boardId, dispatch, isLoggedIn]);\n\n  const { background = 'diego' } = useSelector(\n    state => state?.boards?.currentBoard\n  );\n  const baseUrl =\n    'https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/';\n  const backgroundImgUrl = baseUrl + background;\n  return (\n    <>\n      <Header />\n      <SidebarWrapper>\n        <Sidebar />\n      </SidebarWrapper>\n      {boardId ? (\n        <Main $backgroundImg={backgroundImgUrl}>\n          <ScreensPage />\n          <Outlet />\n        </Main>\n      ) : (\n        <StartScreen />\n      )}\n    </>\n  );\n}\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Name","_templateObject2","Avatar","_templateObject3","Button","_templateObject4","Title","StyledForm","Form","StyledField","Field","LastField","_templateObject5","_templateObject6","ErrMsg","ErrorMessage","_templateObject7","Label","_templateObject8","StyledLabel","_templateObject9","ContainerAvatar","Input","UpdateAvatar","user","useAuth","dispatch","useDispatch","filePicker","useRef","_jsxs","children","_jsx","src","avatarURL","width","height","alt","onClick","current","click","Icon","name","stroke","type","ref","onChange","event","selectedFile","target","files","updateAvatar","accept","EditProfileSchema","Yup","shape","min","max","matches","required","email","password","EditProfile","Formik","initialValues","validationSchema","onSubmit","values","actions","update","id","component","placeholder","customStyles","content","top","left","right","bottom","padding","transform","boxShadow","overlay","background","UserInfo","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","Modal","isOpen","style","contentLabel","selectBoards","state","boards","selectCurrentBoard","currentBoard","sendDataEmail","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","axios","toast","t0","stop","_x","apply","arguments","ContainerForModal","TitleForModal","StyledFormInModal","StyledFieldInModal","StyledTextareaInModal","ButtonForModal","ButtonClose","emailForSupport","textMessage","builderSchema","SendEmail","onClose","form","resetForm","rows","NeedHelpBlock","NeedHelpBtn","NeedHelp","closeModal","srcSet","color","onRequestClose","BoardCreationBlock","BtnCreate","ModalWrap","ModalTitle","CloseBtn","FormWrap","theme","Text","IconsListWrap","InvisibleInput","BackgroundsPallet","_templateObject10","LabelPic","_templateObject11","Div","_templateObject12","AddBtn","_templateObject13","IconWrap","_templateObject14","iconsArr","backgroundsArr","schema","title","icon","oneOf","BoardCreatingModal","addBoard","map","el","value","srcSetPath","concat","srcDefault","BoardCreation","btnText","ControlIconsContainer","BoardItemContainer","BoardEditModal","board","boardId","_id","editBoard","BoardItem","useSelector","navigate","useNavigate","tagName","localStorage","setItem","handleSelectBoard","selected","opacity","deleteBoard","Logo","BoardContainer","BoardList","LogOut","Sidebar","useEffect","fetchBoards","_Fragment","logOut","DrpdwnBtn","ThemesList","visibility","_ref2","_ref3","ThemeItem","ThemeSwitcher","setIsOpen","menuRef","callback","handleClick","evnt","contains","document","addEventListener","removeEventListener","useClickOutside","setTimeout","heigth","changeTheme","HeaderStyled","MenuBtn","HeaderWrapper","customStylesForModal","inset","Header","isMenuOpen","setIsOpenMenu","Wrap","BoardName","FilterBtn","FiltersTytle","HorizontalLine","LabelName","ShowPickers","PickersList","Picker","PickerName","StyledRadioGroup","RadioButton","RadioLabel","$priority","RadioFilters","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","currValue","get","handleFilter","priority","role","item","checked","nanoid","FilterModal","defaultChecked","HeaderDashboard","boardName","useParams","CardBody","CardColor","CardTitle","CardDescription","CardSolid","CardDetals","CardInformation","Priority","PriorityDetals","PriorityTitle","PriorityColor","PriorityTipe","Deadline","DeadlineTitle","DeadlineDate","_templateObject15","CardButtons","_templateObject16","Bell","_templateObject17","_templateObject18","Calendar","selectedDate","onDateChange","className","DatePicker","date","dateFormat","minDate","Date","locale","enGB","weekStartsOn","ModalBody","TitleModal","CloseModal","TitleCard","StyledDescription","LabelColorStyle","DeadlineStyle","AddButton","StylePlus","RadioInputs","onPriorityChange","setCurrValue","handleInput","formCardSchema","text","deadline","EditCardModal","card","cardId","setSelectedDate","editCard","handleSubmit","setFieldValue","MoveList","MoveCardItemStyled","MoveCardItemButtonStyled","MoveCardItem","column","currentId","chengeColumnsCard","toColumnId","MoveCardDropdown","currColumnId","columns","Card","modalCardIsOpen","setmodalCardIsOpen","_useState3","_useState4","isOpenMoveCardModal","setIsOpenMoveCardModal","columnId","dateDeadline","formatedDate","getDate","getMonth","getFullYear","cardTextDescription","substring","closeCardModal","deleteCard","overlayClassName","CardList","_templateObject19","_templateObject20","AddCardModal","addCard","HeadWrap","IconedBtn","ButtonText","addColumnFormSchema","EditColumnFormik","body","editColumn","ColumnHead","isOpenModal","setIsOpenModal","handleModalClose","deleteColumn","ariaHideApp","Column","_filtredCards","cards","filtredCards","filter","ColumnList","ColumnItem","AddColumnFormik","addColumn","Board","modalIsOpen","ScreensPage","StartContainer","StartText","BoardCreationBtn","StartScreen","SidebarWrapper","Main","props","$backgroundImg","HomePage","boardFromLS","getItem","isLoggedIn","setLastBoard","fetchBoardById","fetchColumnsByBoardId","fetchCards","_useSelector$backgrou","_state$boards","backgroundImgUrl","Outlet"],"sourceRoot":""}