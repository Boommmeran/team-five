{"version":3,"file":"static/js/569.f86063ac.chunk.js","mappings":"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","sources":["components/LoginForm/loginForm.jsx","components/RegisterForm/registerForm.jsx","pages/AuthPage/AuthPage.jsx"],"sourcesContent":["import { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { logInUser } from '../../redux/auth/authOperation';\n\nexport default function LoginForm() {\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors, isValid },\n  } = useForm({ mode: 'onBlur' });\n  const onSubmit = data => {\n    dispatch(logInUser(data));\n    reset();\n  };\n\n  return (\n    <div>\n      {' '}\n      <div>\n        <NavLink to=\"/auth/register\">Registration</NavLink>\n        <NavLink to=\"/auth/login\">Login</NavLink>\n      </div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <label>\n          Email\n          <input\n            name=\"email\"\n            type=\"email\"\n            {...register('email', {\n              required: 'Required field',\n              pattern: /^\\S+@\\S+$/i,\n            })}\n          ></input>\n        </label>\n        <div>{errors?.email && <p>{errors?.email?.message || 'Error'}</p>}</div>\n        <label>\n          Password\n          <input\n            name=\"password\"\n            type=\"password\"\n            {...register('password', {\n              required: 'Required field',\n              minLength: {\n                value: 7,\n                message: 'Password is too short',\n              },\n            })}\n          ></input>\n        </label>\n        <div>\n          {errors?.password && <p>{errors?.password?.message || 'Error'}</p>}\n        </div>\n        <input type=\"submit\" disabled={!isValid} />\n      </form>\n    </div>\n  );\n}\n","import { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { registerUser } from '../../redux/auth/authOperation';\n\nimport { useState } from 'react';\nimport { Icon } from 'components/Icon';\n\nexport default function RegisterForm() {\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    // reset,\n    watch,\n    formState: { errors, isValid },\n  } = useForm({ mode: 'onBlur' });\n  const onSubmit = data => {\n    dispatch(\n      registerUser({\n        name: data.name,\n        email: data.email,\n        password: data.password,\n      })\n    );\n  };\n\n  return (\n    <div>\n      <div>\n        <NavLink to=\"/auth/register\">Registration</NavLink>\n        <NavLink to=\"/auth/login\">Login</NavLink>\n      </div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <label>\n          Name\n          <input\n            {...register('name', {\n              required: 'Required field',\n              minLength: {\n                value: 2,\n                message: 'Name is too short',\n              },\n            })}\n          ></input>\n        </label>\n        <div>{errors?.name && <p>{errors?.name?.message || 'Error'}</p>}</div>\n        <label>\n          Email\n          <input\n            name=\"email\"\n            type=\"email\"\n            {...register('email', {\n              required: 'Required field',\n              pattern: /^\\S+@\\S+$/i,\n            })}\n          ></input>\n        </label>\n        <div>{errors?.email && <p>{errors?.email?.message || 'Error'}</p>}</div>\n        <label style={{ stroke: 'red' }}>\n          Password\n          <input\n            name=\"password\"\n            type={passwordShown ? 'text' : 'password'}\n            {...register('password', {\n              required: 'Required field',\n              minLength: {\n                value: 7,\n                message: 'Password is too short',\n              },\n            })}\n          ></input>\n          <Icon\n            onClick={() => {\n              setPasswordShown(!passwordShown);\n            }}\n            name=\"eye\"\n          />{' '}\n        </label>\n        <div>\n          {errors?.password && <p>{errors?.password?.message || 'Error'}</p>}\n        </div>\n        <input\n          name=\"confirmPassword\"\n          type=\"password\"\n          {...register('confirm_password', {\n            required: true,\n            validate: val => {\n              if (watch('password') !== val) {\n                return 'Your passwords do no match';\n              }\n            },\n          })}\n        />\n        <input type=\"submit\" disabled={!isValid} />\n      </form>\n    </div>\n  );\n}\n","import LoginForm from 'components/LoginForm';\nimport RegisterForm from 'components/RegisterForm';\nimport { useParams } from 'react-router-dom';\n\nexport default function AuthPage() {\n  let { id } = useParams();\n  return <div>{id === 'login' ? <LoginForm /> : <RegisterForm />}</div>;\n}\n"],"names":["LoginForm","_errors$email","_errors$password","dispatch","useDispatch","_useForm","useForm","mode","register","handleSubmit","reset","_useForm$formState","formState","errors","isValid","_jsxs","children","_jsx","NavLink","to","onSubmit","data","logInUser","_objectSpread","name","type","required","pattern","email","message","minLength","value","password","disabled","RegisterForm","_errors$name","_useState","useState","_useState2","_slicedToArray","passwordShown","setPasswordShown","watch","registerUser","style","stroke","Icon","onClick","validate","val","AuthPage","id","useParams"],"sourceRoot":""}