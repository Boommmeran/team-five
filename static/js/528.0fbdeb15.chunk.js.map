{"version":3,"file":"static/js/528.0fbdeb15.chunk.js","mappings":"0fAEaA,GAAYC,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,yCAKtBC,GAAOH,GAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,mKASfG,GAASL,GAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,GAAAA,GAAA,qDAKnBK,GAASP,GAAAA,GAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,GAAAA,GAAA,wKAUtBO,GAAYT,GAAAA,GAAAA,OAAaU,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,4I,WC5BzBH,GAAYC,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,kSAiBtBS,GAAQX,GAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,2KASjBU,IAAaZ,EAAAA,GAAAA,IAAOa,GAAAA,GAAPb,CAAYM,IAAAA,GAAAJ,EAAAA,GAAAA,GAAA,8EAMzBY,IAAcd,EAAAA,GAAAA,IAAOe,GAAAA,GAAPf,CAAaQ,IAAAA,GAAAN,EAAAA,GAAAA,GAAA,ybAsB3Bc,IAAYhB,EAAAA,GAAAA,IAAOe,GAAAA,GAAPf,CAAaU,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,ibAsBzBK,GAASP,GAAAA,GAAAA,OAAaiB,IAAAA,GAAAf,EAAAA,GAAAA,GAAA,uWAkBtBgB,IAASlB,EAAAA,GAAAA,IAAOmB,GAAAA,GAAPnB,CAAoBoB,IAAAA,GAAAlB,EAAAA,GAAAA,GAAA,yHAU7BmB,GAAQrB,GAAAA,GAAAA,MAAYsB,IAAAA,GAAApB,EAAAA,GAAAA,GAAA,oDAKpBqB,GAAcvB,GAAAA,GAAAA,MAAYwB,IAAAA,GAAAtB,EAAAA,GAAAA,GAAA,+L,iCC9G1BuB,GAAkBzB,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,uGAO5BG,GAASL,GAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,iCAInBwB,GAAQ1B,GAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,GAAAA,GAAA,wHAUpBK,GAASP,GAAAA,GAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,GAAAA,GAAA,2V,qBCXtByB,GAAe,WAC1B,IAAQC,GAASC,EAAAA,GAAAA,KAATD,KACAE,GAAcD,EAAAA,GAAAA,KAAdC,UAEFC,GAAWC,EAAAA,GAAAA,MAEXC,GAAaC,EAAAA,GAAAA,QAAO,MAY1B,OACEC,EAAAA,GAAAA,MAACV,GAAe,CAAAW,SAAA,CACbN,GACCO,EAAAA,GAAAA,KAAChC,GAAM,CACLiC,IAxBR,iEAwBiCV,EAAKW,UAC9BC,MAAM,KACNC,OAAO,KACPC,IAAI,gBAGNL,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CACHC,KAAK,OACLC,KAAK,0BACLC,OAAO,4BACPN,MAAM,KACNC,OAAO,QAIXJ,EAAAA,GAAAA,KAAC9B,GAAM,CAACwC,QAvBO,WACjBd,EAAWe,QAAQC,OACrB,EAqBgCb,UAC1BC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,OAAOJ,MAAM,OAAOC,OAAO,OAAOK,OAAO,eAEtDT,EAAAA,GAAAA,KAACX,GAAK,CACJwB,KAAK,OACLC,IAAKlB,EACLmB,SAnCmB,SAAAC,GACvB,IAAMC,EAAeD,EAAME,OAAOC,MAAM,GAExCzB,GAAS0B,EAAAA,GAAAA,IAAaH,GACxB,EAgCMI,OAAO,mCAIf,E,WC1DaC,GAAoBC,GAAAA,KAAaC,MAAM,CAClDjB,KAAMgB,GAAAA,KACHE,IAAI,EAAG,mBACPC,IAAI,GAAI,oBACRC,QAAQ,qCAAsC,iBAC9CC,SAAS,0BACZC,MAAON,GAAAA,KAAaM,MAAM,iBAAiBD,SAAS,0BACpDE,SAAUP,GAAAA,KACPE,IAAI,EAAG,mBACPC,IAAI,GAAI,oBACRC,QACC,qCACA,2CAEDA,QAAQ,QAAS,oCACjBC,SAAS,6BCGDG,GAAc,SAAHC,GAAwB,IAAlBC,EAAUD,EAAVC,WACpB1C,GAASC,EAAAA,GAAAA,KAATD,KACFG,GAAWC,EAAAA,GAAAA,MAEjB,OACEG,EAAAA,GAAAA,MAACpC,GAAS,CAAAqC,SAAA,EACRC,EAAAA,GAAAA,KAAC1B,GAAK,CAAAyB,SAAC,kBACPC,EAAAA,GAAAA,KAACV,GAAY,KAEbU,EAAAA,GAAAA,KAACkC,GAAAA,GAAM,CACLC,cAAe,CACb5B,KAAMhB,EAAKgB,KACXsB,MAAOtC,EAAKsC,MACZC,SAAU,IAEZM,iBAAkBd,GAClBe,SAAU,SAACC,EAAQC,GACjB7C,GAAS8C,EAAAA,GAAAA,IAAOF,IAChBL,GACF,EAAElC,UAEFD,EAAAA,GAAAA,MAACvB,GAAU,CAAAwB,SAAA,EACTD,EAAAA,GAAAA,MAACd,GAAK,CAAAe,SAAA,EACJC,EAAAA,GAAAA,KAACvB,GAAW,CAACgE,GAAG,OAAOlC,KAAK,UAC5BP,EAAAA,GAAAA,KAACnB,GAAM,CAAC0B,KAAK,OAAOmC,UAAU,UAGhC5C,EAAAA,GAAAA,MAACd,GAAK,CAAAe,SAAA,EACJC,EAAAA,GAAAA,KAACvB,GAAW,CAACgE,GAAG,QAAQlC,KAAK,QAAQM,KAAK,WAC1Cb,EAAAA,GAAAA,KAACnB,GAAM,CAAC0B,KAAK,QAAQmC,UAAU,UAGjC5C,EAAAA,GAAAA,MAACZ,GAAW,CAAAa,SAAA,EACVC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,MAAME,OAAO,+BACxBT,EAAAA,GAAAA,KAACrB,GAAS,CACR8D,GAAG,WACHlC,KAAK,WACLoC,YAAY,mCAEd3C,EAAAA,GAAAA,KAACnB,GAAM,CAAC0B,KAAK,WAAWmC,UAAU,UAGpC1C,EAAAA,GAAAA,KAAC9B,GAAM,CAAC2C,KAAK,SAAQd,SAAC,kBAKhC,E,sBCxDM6C,GAAe,CACnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,QAAS,IACTC,UAAW,wBACXC,UAAW,uCACXC,aAAc,MACdC,OAAQ,KAEVC,QAAS,CACPC,WAAY,oBAIHC,GAAW,WACtB,IAAQlE,GAASC,EAAAA,GAAAA,KAATD,KACAE,GAAcD,EAAAA,GAAAA,KAAdC,UAERiE,GAAsCC,EAAAA,GAAAA,WAAS,GAAMC,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAA9CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAE5BI,EAAY,WAChBD,GAAe,EACjB,EAEM9B,EAAa,WACjB8B,GAAe,EACjB,EAEA,OACEjE,EAAAA,GAAAA,MAACpC,GAAS,CAAAqC,SAAA,EACRC,EAAAA,GAAAA,KAAClC,GAAI,CAAAiC,SAAER,EAAKgB,QACVP,EAAAA,GAAAA,KAAC5B,GAAS,CAACsC,QAASsD,EAAUjE,SAC3BN,GACCO,EAAAA,GAAAA,KAAChC,GAAM,CACLiC,IAvCZ,iEAuCqCV,EAAKW,UAC9BC,MAAM,KACNC,OAAO,KACPC,IAAI,aACJK,QAASsD,KAGXhE,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CACHC,KAAK,OACLC,KAAK,wBACLC,OAAO,4BACPN,MAAM,OACNC,OAAO,YAKfN,EAAAA,GAAAA,MAACmE,KAAK,CACJC,OAAQJ,EACRK,MAAOvB,GACPwB,aAAa,QACbC,eAAgBpC,EAAWlC,SAAA,EAE3BC,EAAAA,GAAAA,KAAC+B,GAAW,CAACE,WAAYA,KACzBjC,EAAAA,GAAAA,KAAC9B,GAAM,CAACwC,QAASuB,EAAWlC,UAC1BC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,QAAQE,OAAO,qCAKpC,EC9Ea6D,GAAe,SAAAC,GAAK,IAAAC,EAAA,OAAgB,QAAhBA,EAAID,EAAME,cAAM,IAAAD,OAAA,EAAZA,EAAcC,MAAO,EAC7CC,GAAqB,SAAAH,GAAK,IAAAI,EAAA,OAAgB,QAAhBA,EAAIJ,EAAME,cAAM,IAAAE,OAAA,EAAZA,EAAcC,YAAa,E,kECEzDC,GAAa,eAAA7C,GAAA8C,EAAAA,GAAAA,GAAAC,KAAAA,MAAG,SAAAC,EAAMC,GAAI,OAAAF,KAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE7BC,GAAAA,EAAAA,KAAW,WAAYJ,GAAM,KAAD,EAClCK,GAAAA,GAAAA,QAAc,sBAAsBJ,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEpCI,GAAAA,GAAAA,MAAY,+BAA+B,wBAAAJ,EAAAM,OAAA,GAAAR,EAAA,kBAE9C,gBAPyBS,GAAA,OAAAzD,EAAA0D,MAAA,KAAAC,UAAA,KCAbC,GAAoBjI,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,sZAqB9BgI,GAAgBlI,GAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,gLASzBiI,IAAoBnI,EAAAA,GAAAA,IAAOa,GAAAA,GAAPb,CAAYM,IAAAA,GAAAJ,EAAAA,GAAAA,GAAA,uDAKhCkI,IAAqBpI,EAAAA,GAAAA,IAAOe,GAAAA,GAAPf,CAAaQ,IAAAA,GAAAN,EAAAA,GAAAA,GAAA,0sBAwClCmI,IAAwBrI,EAAAA,GAAAA,IAAOe,GAAAA,GAAPf,CAAaU,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,0nBAoCrCoI,GAAiBtI,GAAAA,GAAAA,OAAaiB,IAAAA,GAAAf,EAAAA,GAAAA,GAAA,yiBAgC9BqI,GAAcvI,GAAAA,GAAAA,OAAaoB,IAAAA,GAAAlB,EAAAA,GAAAA,GAAA,oNAgB3BgB,IAASlB,EAAAA,GAAAA,IAAOmB,GAAAA,GAAPnB,CAAoBsB,IAAAA,GAAApB,EAAAA,GAAAA,GAAA,yHAU7BmB,GAAQrB,GAAAA,GAAAA,MAAYwB,IAAAA,GAAAtB,EAAAA,GAAAA,GAAA,oDC5J3BsE,GAAgB,CACpBgE,gBAAiB,GACjBC,YAAa,IAGTC,GAAgB9E,GAAAA,KAAaC,MAAM,CACvC2E,gBAAiB5E,GAAAA,KAAaM,QAAQD,SAAS,0BAC/CwE,YAAa7E,GAAAA,KACVE,IAAI,EAAE,uCACNG,SAAS,4BAGD0E,GAAY,SAAHtE,GAAqB,IAAfuE,EAAOvE,EAAPuE,QAO1B,OACEzG,EAAAA,GAAAA,MAAC8F,GAAiB,CAAA7F,SAAA,EAChBC,EAAAA,GAAAA,KAAC6F,GAAa,CAAA9F,SAAC,eACfC,EAAAA,GAAAA,KAACkG,GAAW,CAACrF,KAAK,SAASH,QAAS6F,EAAQxG,UAC1CC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CACHG,OAAO,2BACPF,KAAK,QACLJ,MAAM,KACNC,OAAO,UAGXJ,EAAAA,GAAAA,KAACkC,GAAAA,GAAM,CACLC,cAAeA,GACfC,iBAAkBiE,GAClBhE,SApBW,SAAC4C,EAAMuB,GACtB3B,GAAcI,GACduB,EAAKC,YACLF,GACF,EAgByBxG,UAEnBD,EAAAA,GAAAA,MAACgG,GAAiB,CAAA/F,SAAA,EAChBD,EAAAA,GAAAA,MAACd,GAAK,CAAAe,SAAA,EACJC,EAAAA,GAAAA,KAAC+F,GAAkB,CACjBlF,KAAK,QACLN,KAAK,kBACLoC,YAAY,mBAEd3C,EAAAA,GAAAA,KAACnB,GAAM,CAAC6D,UAAU,IAAInC,KAAK,wBAG7BT,EAAAA,GAAAA,MAACd,GAAK,CAAAe,SAAA,EACJC,EAAAA,GAAAA,KAACgG,GAAqB,CACpBU,KAAM,EACNhE,UAAU,WACV7B,KAAK,OACLN,KAAK,cACLoC,YAAY,aAEd3C,EAAAA,GAAAA,KAACnB,GAAM,CAAC6D,UAAU,IAAInC,KAAK,oBAG7BP,EAAAA,GAAAA,KAACiG,GAAc,CAACpF,KAAK,SAAQd,SAAC,gBAKxC,EC3Ea4G,GAAgBhJ,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,2WAsB1B+I,GAAcjJ,GAAAA,GAAAA,OAAaI,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,4PClB3BgJ,GAAW,WACtB,IAAAnD,GAAsCC,EAAAA,GAAAA,WAAS,GAAMC,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAA9CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAM5B3B,EAAa,WACjB8B,GAAe,EACjB,EAEA,OACEjE,EAAAA,GAAAA,MAAC6G,GAAa,CAAA5G,SAAA,EACZD,EAAAA,GAAAA,MAAA,WAAAC,SAAA,EACEC,EAAAA,GAAAA,KAAA,UACE8G,OAAO,wKAKT9G,EAAAA,GAAAA,KAAA,OACEC,IAAI,+EACJE,MAAM,KACNC,OAAO,KACPC,IAAI,2BAGRP,EAAAA,GAAAA,MAAA,KAAAC,SAAA,CAAG,wBACqB,KACtBC,EAAAA,GAAAA,KAAA,QAAMmE,MAAO,CAAE4C,MAAO,iBAAkBhH,SAAC,YAAe,mFAG1DD,EAAAA,GAAAA,MAAC8G,GAAW,CAAC/F,KAAK,SAASH,QA7Bb,WAChBqD,GAAe,EACjB,EA2BkDhE,SAAA,EAC5CC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CACHC,KAAK,OACLJ,MAAM,KACNC,OAAO,KACPK,OAAO,6BAETT,EAAAA,GAAAA,KAAA,QAAAD,SAAM,mBAERC,EAAAA,GAAAA,KAACiE,KAAK,CACJC,OAAQJ,EACRO,eAAgBpC,EAChBmC,aAAa,kBACb4C,UAAU,gBACVC,iBAAiB,gBAAelH,UAEhCC,EAAAA,GAAAA,KAACsG,GAAS,CAACC,QAAStE,QAI5B,ECxDaiF,GAAqBvJ,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,iRAW/BsJ,GAAYxJ,GAAAA,GAAAA,OAAaI,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,kS,WCVzBuJ,GAAYzJ,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,0PAiBtBwJ,GAAa1J,GAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,sMAYtByJ,GAAW3J,GAAAA,GAAAA,OAAaM,IAAAA,GAAAJ,EAAAA,GAAAA,GAAA,+TAwBxB0J,IAAW5J,EAAAA,GAAAA,IAAOa,GAAAA,GAAPb,CAAYQ,IAAAA,GAAAN,EAAAA,GAAAA,GAAA,iHAOvBwB,IAAQ1B,EAAAA,GAAAA,IAAOe,GAAAA,GAAPf,CAAaU,IAAAA,GAAAR,EAAAA,GAAAA,GAAA,8gBA6BrB2J,GAAO7J,GAAAA,GAAAA,EAAQiB,IAAAA,GAAAf,EAAAA,GAAAA,GAAA,wEAMf4J,GAAgB9J,GAAAA,GAAAA,GAASoB,IAAAA,GAAAlB,EAAAA,GAAAA,GAAA,mEAOzBmB,GAAQrB,GAAAA,GAAAA,MAAYsB,IAAAA,GAAApB,EAAAA,GAAAA,GAAA,+WA2BpB6J,IAAiB/J,EAAAA,GAAAA,IAAOe,GAAAA,GAAPf,CAAawB,IAAAA,GAAAtB,EAAAA,GAAAA,GAAA,6MAa9B8J,GAAoBhK,GAAAA,GAAAA,GAASiK,IAAAA,GAAA/J,EAAAA,GAAAA,GAAA,uHAS7BgK,GAAWlK,GAAAA,GAAAA,MAAYmK,IAAAA,GAAAjK,EAAAA,GAAAA,GAAA,QAEvBkK,GAAMpK,GAAAA,GAAAA,IAAUqK,IAAAA,GAAAnK,EAAAA,GAAAA,GAAA,4LAYhBoK,GAAStK,GAAAA,GAAAA,OAAauK,IAAAA,GAAArK,EAAAA,GAAAA,GAAA,ylBAkCtBsK,GAAWxK,GAAAA,GAAAA,IAAUyK,IAAAA,GAAAvK,EAAAA,GAAAA,GAAA,yQClL5BwK,GAAW,CACf,eACA,OACA,UACA,SACA,YACA,YACA,SACA,WAGIC,GAAiB,CACrB,SACA,SACA,WACA,QACA,OACA,aACA,UACA,OACA,QACA,SACA,UACA,OACA,UACA,YACA,OACA,QAGIC,GAAShH,GAAAA,GAAW,CACxBiH,MAAOjH,GAAAA,KAAaK,WACpB6G,KAAMlH,GAAAA,KAAamH,MAAML,IAAUzG,WACnC4B,WAAYjC,GAAAA,KAAamH,MAAMJ,IAAgB1G,aAGpC+G,GAAqB,SAAH3G,GAAqB,IAAfuE,EAAOvE,EAAPuE,QAC7B7G,GAAWC,EAAAA,GAAAA,MACXiJ,GAAWC,EAAAA,GAAAA,MAQXxG,EAAQ,eAAAyG,GAAAhE,EAAAA,GAAAA,GAAAC,KAAAA,MAAG,SAAAC,EAAM1C,GAAM,IAAAyG,EAAAC,EAAA,OAAAjE,KAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACQ1F,GAASuJ,EAAAA,GAAAA,IAAS3G,IAAS,KAAD,EAAAyG,EAAA7D,EAAAgE,KAA1CF,EAAGD,EAAdI,QAAWH,IAEnBI,aAAaC,QAAQ,YAAaL,GAClCJ,EAAS,IAADU,OAAKN,IACbzC,IAAU,wBAAArB,EAAAM,OAAA,GAAAR,EAAA,KACX,gBANaS,GAAA,OAAAqD,EAAApD,MAAA,KAAAC,UAAA,KAQd,OACE7F,EAAAA,GAAAA,MAACsH,GAAS,CAAArH,SAAA,EACRC,EAAAA,GAAAA,KAACqH,GAAU,CAAAtH,SAAC,eACZC,EAAAA,GAAAA,KAACsH,GAAQ,CAACzG,KAAK,SAASH,QAAS6F,EAAQxG,UACvCC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,aAEbP,EAAAA,GAAAA,KAACkC,GAAAA,GAAM,CACLC,cArBgB,CACpBqG,MAAO,GACPC,KAAM,eACNjF,WAAY,UAmBRpB,iBAAkBmG,GAClBlG,SAAUA,EAAStC,UAEnBD,EAAAA,GAAAA,MAACyH,GAAQ,CAAAxH,SAAA,EACPC,EAAAA,GAAAA,KAACX,GAAK,CAACwB,KAAK,OAAO8B,YAAY,QAAQpC,KAAK,WAC5CP,EAAAA,GAAAA,KAACwH,GAAI,CAAAzH,SAAC,WAENC,EAAAA,GAAAA,KAACyH,GAAa,CAAA1H,SACXsI,GAASkB,KAAI,SAAAC,GAAE,OACdxJ,EAAAA,GAAAA,KAAA,MAAAD,UACED,EAAAA,GAAAA,MAACd,GAAK,CAAAe,SAAA,EACJC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAMiJ,KACZxJ,EAAAA,GAAAA,KAAC0H,GAAc,CAAC7G,KAAK,QAAQN,KAAK,OAAOkJ,MAAOD,QAH3CA,EAKJ,OAITxJ,EAAAA,GAAAA,KAACwH,GAAI,CAAAzH,SAAC,iBACNC,EAAAA,GAAAA,KAAC2H,GAAiB,CAAA5H,SACfuI,GAAeiB,KAAI,SAAAC,GAClB,IAAME,EAAU,2EAAAJ,OAA8EE,EAAE,0GAAAF,OACvBE,EAAE,kBACrEG,EAAU,0EAAAL,OAA6EE,EAAE,eAC/F,OACExJ,EAAAA,GAAAA,KAAA,MAAAD,UACED,EAAAA,GAAAA,MAAC+H,GAAQ,CAAA9H,SAAA,EACPC,EAAAA,GAAAA,KAAC+H,GAAG,CAAAhI,UACFD,EAAAA,GAAAA,MAAA,WAAAC,SAAA,EACEC,EAAAA,GAAAA,KAAA,UAAQ8G,OAAQ4C,KAChB1J,EAAAA,GAAAA,KAAA,OAAKC,IAAK0J,EAAYtJ,IAAI,6BAG9BL,EAAAA,GAAAA,KAAC0H,GAAc,CAAC7G,KAAK,QAAQN,KAAK,aAAakJ,MAAOD,QARjDA,EAYb,OAGF1J,EAAAA,GAAAA,MAACmI,GAAM,CAACpH,KAAK,SAAQd,SAAA,EACnBC,EAAAA,GAAAA,KAACmI,GAAQ,CAAApI,UACPC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,WACD,IAAI,mBAO5B,ECjIaqJ,GAAgB,WAC3B,IAAAlG,GAAsCC,EAAAA,GAAAA,WAAS,GAAMC,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAA9CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAM5B3B,EAAa,WACjB8B,GAAe,EACjB,EAEA,OACEjE,EAAAA,GAAAA,MAACoH,GAAkB,CAAAnH,SAAA,EACjBD,EAAAA,GAAAA,MAAA,KAAAC,SAAA,CAAG,YACOC,EAAAA,GAAAA,KAAA,SAAM,gBAGhBA,EAAAA,GAAAA,KAACmH,GAAS,CAACtG,KAAK,SAASH,QAdX,WAChBqD,GAAe,EACjB,EAYgDhE,UAC1CC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,OAAOJ,MAAM,KAAKC,OAAO,UAEtCJ,EAAAA,GAAAA,KAACiE,KAAK,CACJC,OAAQJ,EACRO,eAAgBpC,EAChB+E,UAAU,gBACVC,iBAAiB,gBACjB7C,aAAa,uBAAsBrE,UAEnCC,EAAAA,GAAAA,KAAC2I,GAAkB,CACjBpC,QAAStE,EACTuG,MAAM,YACNqB,QAAQ,eAKlB,E,WCxCaC,GAAwBnM,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,mLAclCkM,GAAqBpM,GAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,ssBAkBvC,SAAAmM,GAAK,OACLA,EAAMC,UAAQ,uPAajB,GAQOH,ICrDK1C,GAAYzJ,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,0PAiBtBwJ,GAAa1J,GAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,sMAYtByJ,GAAW3J,GAAAA,GAAAA,OAAaM,IAAAA,GAAAJ,EAAAA,GAAAA,GAAA,+TAwBxB0J,IAAW5J,EAAAA,GAAAA,IAAOa,GAAAA,GAAPb,CAAYQ,IAAAA,GAAAN,EAAAA,GAAAA,GAAA,iHAOvBwB,IAAQ1B,EAAAA,GAAAA,IAAOe,GAAAA,GAAPf,CAAaU,KAAAA,IAAAR,EAAAA,GAAAA,GAAA,ghBA8BrB2J,GAAO7J,GAAAA,GAAAA,EAAQiB,KAAAA,IAAAf,EAAAA,GAAAA,GAAA,wEAMf4J,GAAgB9J,GAAAA,GAAAA,GAASoB,KAAAA,IAAAlB,EAAAA,GAAAA,GAAA,mEAOzBmB,GAAQrB,GAAAA,GAAAA,MAAYsB,KAAAA,IAAApB,EAAAA,GAAAA,GAAA,+WA2BpB6J,IAAiB/J,EAAAA,GAAAA,IAAOe,GAAAA,GAAPf,CAAawB,KAAAA,IAAAtB,EAAAA,GAAAA,GAAA,6MAa9B8J,GAAoBhK,GAAAA,GAAAA,GAASiK,KAAAA,IAAA/J,EAAAA,GAAAA,GAAA,uHAS7BgK,GAAWlK,GAAAA,GAAAA,MAAYmK,KAAAA,IAAAjK,EAAAA,GAAAA,GAAA,QAEvBkK,GAAMpK,GAAAA,GAAAA,IAAUqK,KAAAA,IAAAnK,EAAAA,GAAAA,GAAA,4LAYhBoK,GAAStK,GAAAA,GAAAA,OAAauK,KAAAA,IAAArK,EAAAA,GAAAA,GAAA,2lBAmCtBsK,GAAWxK,GAAAA,GAAAA,IAAUyK,KAAAA,IAAAvK,EAAAA,GAAAA,GAAA,yQCtL5BwK,GAAW,CACf,eACA,OACA,UACA,SACA,YACA,YACA,SACA,WAGIC,GAAiB,CACrB,SACA,SACA,WACA,QACA,OACA,aACA,UACA,OACA,QACA,SACA,UACA,OACA,UACA,YACA,OACA,QAGIC,GAAShH,GAAAA,GAAW,CACxBiH,MAAOjH,GAAAA,KAAaK,WACpB6G,KAAMlH,GAAAA,KAAamH,MAAML,IAAUzG,WACnC4B,WAAYjC,GAAAA,KAAamH,MAAMJ,IAAgB1G,aAGpCsI,GAAiB,SAAHlI,GAA4B,IAAtBuE,EAAOvE,EAAPuE,QAAS4D,EAAKnI,EAALmI,MAClCzK,GAAWC,EAAAA,GAAAA,MAEJyK,EAAqCD,EAA1CnB,IAEF7G,EAAgB,CACpBqG,MAHgD2B,EAA5B3B,MAIpBC,KAJgD0B,EAArB1B,KAK3BjF,WALgD2G,EAAf3G,YAYnC,OACE1D,EAAAA,GAAAA,MAACsH,GAAS,CAAArH,SAAA,EACRC,EAAAA,GAAAA,KAACqH,GAAU,CAAAtH,SAAC,gBACZC,EAAAA,GAAAA,KAACsH,GAAQ,CAACzG,KAAK,SAASH,QAAS6F,EAAQxG,UACvCC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,aAEbP,EAAAA,GAAAA,KAACkC,GAAAA,GAAM,CACLC,cAAeA,EACfC,iBAAkBmG,GAClBlG,SAbW,SAAA8H,GACfzK,GAAS2K,EAAAA,GAAAA,IAAU,CAAED,QAAAA,EAASD,MAAAA,KAC9B5D,GACF,EAUyBxG,UAEnBD,EAAAA,GAAAA,MAACyH,GAAQ,CAAAxH,SAAA,EACPC,EAAAA,GAAAA,KAACX,GAAK,CAACwB,KAAK,OAAO8B,YAAY,QAAQpC,KAAK,WAC5CP,EAAAA,GAAAA,KAACwH,GAAI,CAAAzH,SAAC,WAENC,EAAAA,GAAAA,KAACyH,GAAa,CAAA1H,SACXsI,GAASkB,KAAI,SAAAC,GAAE,OACdxJ,EAAAA,GAAAA,KAAA,MAAAD,UACED,EAAAA,GAAAA,MAACd,GAAK,CAAAe,SAAA,EACJC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAMiJ,KACZxJ,EAAAA,GAAAA,KAAC0H,GAAc,CAAC7G,KAAK,QAAQN,KAAK,OAAOkJ,MAAOD,QAH3CA,EAKJ,OAITxJ,EAAAA,GAAAA,KAACwH,GAAI,CAAAzH,SAAC,iBACNC,EAAAA,GAAAA,KAAC2H,GAAiB,CAAA5H,SACfuI,GAAeiB,KAAI,SAAAC,GAClB,IAAME,EAAU,2EAAAJ,OAA8EE,EAAE,0GAAAF,OACvBE,EAAE,kBACrEG,EAAU,0EAAAL,OAA6EE,EAAE,eAC/F,OACExJ,EAAAA,GAAAA,KAAA,MAAAD,UACED,EAAAA,GAAAA,MAAC+H,GAAQ,CAAA9H,SAAA,EACPC,EAAAA,GAAAA,KAAC+H,GAAG,CAAAhI,UACFD,EAAAA,GAAAA,MAAA,WAAAC,SAAA,EACEC,EAAAA,GAAAA,KAAA,UAAQ8G,OAAQ4C,KAChB1J,EAAAA,GAAAA,KAAA,OAAKC,IAAK0J,EAAYtJ,IAAI,6BAG9BL,EAAAA,GAAAA,KAAC0H,GAAc,CAAC7G,KAAK,QAAQN,KAAK,aAAakJ,MAAOD,QARjDA,EAYb,OAGF1J,EAAAA,GAAAA,MAACmI,GAAM,CAACpH,KAAK,SAAQd,SAAA,EACnBC,EAAAA,GAAAA,KAACmI,GAAQ,CAAApI,UACPC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,WACD,IAAI,iBAO5B,ECzHa+J,GAAY,SAAHtI,GAA6B,IAAvBmI,EAAKnI,EAALmI,MAAOI,EAAQvI,EAARuI,SAC3B7K,GAAWC,EAAAA,GAAAA,MACXiF,GAAe4F,EAAAA,GAAAA,IAAY9F,IACjChB,GAAsCC,EAAAA,GAAAA,WAAS,GAAMC,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAA9CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAC5BgF,GAAWC,EAAAA,GAAAA,MACXpE,GAAS+F,EAAAA,GAAAA,IAAYlG,IAMrBrC,EAAa,WACjB8B,GAAe,EACjB,EA0BA,OACEjE,EAAAA,GAAAA,MAACiK,GAAkB,CACjB/C,UAAWuD,EAAW,SAAW,GACjC7J,QAAS,SAAAM,GAAK,OA3BQ,SAACA,EAAOoJ,GACH,WAAzBpJ,EAAME,OAAOuJ,SAAwBzJ,EAAME,OAAOwJ,QAAQ,YAI9D9B,EAAS,IAADU,OAAKc,IACbhB,aAAaC,QAAQ,YAAae,GACpC,CAoBsBO,CAAkB3J,EAAOmJ,EAAMnB,IAAI,EACrDiB,SAAUrF,GAAgBA,EAAaoE,MAAQmB,EAAMnB,IAAIjJ,SAAA,EAEzDC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAM4J,EAAM1B,KAAMtI,MAAM,KAAKC,OAAO,KAAK+D,MAAO,CAAEyG,QAAS,OACjE5K,EAAAA,GAAAA,KAAA,KAAAD,SAAIoK,EAAM3B,SACV1I,EAAAA,GAAAA,MAACgK,GAAqB,CAAA/J,SAAA,EACpBC,EAAAA,GAAAA,KAAA,UAAQa,KAAK,SAASsD,MAAO,CAAE0G,OAAQ,WAAanK,QAzCxC,WAChBqD,GAAe,EACjB,EAuC6EhE,UACrEC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,SAASJ,MAAM,KAAKC,OAAO,UAExCJ,EAAAA,GAAAA,KAAA,UACEa,KAAK,SACLsD,MAAO,CAAE0G,OAAQ,WACjBnK,QAAS,kBA9BI,SAAA0J,GACnB1K,GAASoL,EAAAA,GAAAA,IAAYV,IACrB,IAAMW,EAAiBtG,EAAOuG,QAAO,SAAAb,GAAK,OAAIA,EAAMnB,MAAQoB,CAAO,IAGnE,GAFAhB,aAAa6B,WAAW,aAEM,IAA1BF,EAAeG,OAAnB,CAKA,IAAMC,EAAeJ,EAAeA,EAAeG,OAAS,GAE5DtC,EAAS,IAADU,OAAK6B,EAAanC,KAJ1B,MAFEJ,EAAS,IAOb,CAiBuBwC,CAAajB,EAAMnB,IAAI,EAACjJ,UAEvCC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,QAAQJ,MAAM,KAAKC,OAAO,aAGzCJ,EAAAA,GAAAA,KAACiE,KAAK,CACJC,OAAQJ,EACRO,eAAgBpC,EAChB+E,UAAU,gBACVC,iBAAiB,gBACjB7C,aAAa,sBAAqBrE,UAElCC,EAAAA,GAAAA,KAACkK,GAAc,CAAC3D,QAAStE,EAAYkI,MAAOA,QAIpD,EC9EakB,GAAuB1N,GAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,8TAkBjCyN,GAAO3N,GAAAA,GAAAA,IAAUI,KAAAA,IAAAF,EAAAA,GAAAA,GAAA,oQAcjB0N,GAAiB5N,GAAAA,GAAAA,IAAUM,KAAAA,IAAAJ,EAAAA,GAAAA,GAAA,sLAY3BS,GAAQX,GAAAA,GAAAA,GAASQ,KAAAA,IAAAN,EAAAA,GAAAA,GAAA,sEAMjB2N,GAAY7N,GAAAA,GAAAA,GAASU,KAAAA,IAAAR,EAAAA,GAAAA,GAAA,oEAKrB4N,GAAS9N,GAAAA,GAAAA,OAAaiB,KAAAA,IAAAf,EAAAA,GAAAA,GAAA,yeC5CtB6N,GAAU,WACrB,IAAMhM,GAAWC,EAAAA,GAAAA,MACX8E,GAAS+F,EAAAA,GAAAA,IAAYlG,IACpB8F,GAAWuB,EAAAA,GAAAA,MAAXvB,SAEPwB,EAAAA,GAAAA,YAAU,WACRlM,GAASmM,EAAAA,GAAAA,MACX,GAAG,CAACnM,IAQJ,OACEI,EAAAA,GAAAA,MAACuL,GAAoB,CAAAtL,SAAA,EACnBD,EAAAA,GAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,GAAAA,MAACwL,GAAI,CAAAvL,SAAA,EACHC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,OAAOJ,MAAM,KAAKC,OAAO,QACpCJ,EAAAA,GAAAA,KAAA,MAAAD,SAAI,gBAEND,EAAAA,GAAAA,MAACyL,GAAc,CAAAxL,SAAA,EACbC,EAAAA,GAAAA,KAAC1B,GAAK,CAAAyB,SAAC,eACPC,EAAAA,GAAAA,KAAC4J,GAAa,KACd5J,EAAAA,GAAAA,KAACwL,GAAS,CAAAzL,SACP0E,EAAO8E,KAAI,SAAAY,GAAK,OACfnK,EAAAA,GAAAA,KAACsK,GAAS,CAERH,MAAOA,EACPI,SAAUH,IAAYD,EAAMnB,KAFvBmB,EAAMnB,IAGX,aAKVlJ,EAAAA,GAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,GAAAA,KAAC6G,GAAQ,KACT/G,EAAAA,GAAAA,MAAC2L,GAAM,CAAC5K,KAAK,SAASH,QA7BP,WACnBhB,GAASoM,EAAAA,GAAAA,OACT1C,aAAa6B,WAAW,aACxBvL,GAASqM,EAAAA,GAAAA,KACX,EAyBkDhM,SAAA,EAC1CC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,QAAQJ,MAAM,KAAKC,OAAO,QACrCJ,EAAAA,GAAAA,KAAA,KAAAD,SAAG,oBAKb,ECxDaiM,GAAYrO,GAAAA,GAAAA,OAAaC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,kQAazBoO,GAAatO,GAAAA,GAAAA,GAASI,KAAAA,IAAAF,EAAAA,GAAAA,GAAA,+UASnB,SAAAmE,GAAa,OAAAA,EAAVkK,UAA2B,IACjC,SAAApD,GAAU,OAAAA,EAAP8B,OAAqB,IACtB,SAAAuB,GAAY,OAAAA,EAAThJ,SAAyB,IAI9BiJ,GAAYzO,GAAAA,GAAAA,GAASM,KAAAA,IAAAJ,EAAAA,GAAAA,GAAA,4SCtBrBwO,GAAgB,WAC3B,IAAA3I,GAA4BC,EAAAA,GAAAA,WAAS,GAAMC,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAApCQ,EAAMN,EAAA,GAAE0I,EAAS1I,EAAA,GAClB2I,GAAU1M,EAAAA,GAAAA,QAAO,MACjBH,GAAWC,EAAAA,GAAAA,MAEXuM,EAAahI,EAAS,UAAY,SAClC0G,EAAU1G,EAAS,IAAM,IACzBf,EAAYe,EAAS,mBAAqB,gBAQhD,OCrB6B,SAACpD,EAAK0L,GACnC,IAAMC,EAAc,SAAAC,GACd5L,EAAIH,UAAYG,EAAIH,QAAQgM,SAASD,EAAKxL,SAC5CsL,GAEJ,GACAZ,EAAAA,GAAAA,YAAU,WAER,OADAgB,SAASC,iBAAiB,YAAaJ,GAChC,WACLG,SAASE,oBAAoB,YAAaL,EAC5C,CACF,GACF,CDGEM,CAAgBR,GAAS,WACnBrI,GACF8I,YAAW,kBAAMV,GAAU,EAAM,GAAE,GAEvC,KAGExM,EAAAA,GAAAA,MAAA,OAAKgB,IAAKyL,EAAQxM,SAAA,EAChBD,EAAAA,GAAAA,MAACkM,GAAS,CAACnL,KAAK,SAASH,QAAS,kBAAM4L,GAAWpI,EAAO,EAACnE,SAAA,CAAC,SAE1DC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CACHC,KAAK,eACLJ,MAAM,KACN8M,OAAO,KACPxM,OAAO,kCAGXX,EAAAA,GAAAA,MAACmM,GAAU,CACTC,WAAYA,EACZtB,QAASA,EACTzH,UAAWA,EAAUpD,SAAA,EAErBC,EAAAA,GAAAA,KAACoM,GAAS,CAAC1L,QAAS,kBAAMhB,GAASwN,EAAAA,GAAAA,IAAY,CAAEC,MAAO,UAAW,EAACpN,SAAC,WAGrEC,EAAAA,GAAAA,KAACoM,GAAS,CAAC1L,QAAS,kBAAMhB,GAASwN,EAAAA,GAAAA,IAAY,CAAEC,MAAO,SAAU,EAACpN,SAAC,UAGpEC,EAAAA,GAAAA,KAACoM,GAAS,CAAC1L,QAAS,kBAAMhB,GAASwN,EAAAA,GAAAA,IAAY,CAAEC,MAAO,WAAY,EAACpN,SAAC,gBAM9E,EEjDaqN,GAAezP,GAAAA,GAAAA,OAAaC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,iYAuB5BwP,GAAU1P,GAAAA,GAAAA,OAAaI,KAAAA,IAAAF,EAAAA,GAAAA,GAAA,4PAmBvByP,GAAgB3P,GAAAA,GAAAA,IAAUM,KAAAA,IAAAJ,EAAAA,GAAAA,GAAA,2FAO1B0P,GAAuB,CAClC1K,QAAS,CACP2K,SAAU,WACV1K,IAAK,IACLC,KAAM,IACNC,MAAO,OACPC,OAAQ,OACRC,QAAS,IACTI,OAAQ,OACRE,WAAY,yBAEdD,QAAS,CACPiK,SAAU,QACV1K,IAAK,IACLC,KAAM,IACN5C,MAAO,OACPC,OAAQ,QACRoD,WAAY,oBCvDHiK,GAAS,WACpB,IAAA/J,GAAoCC,EAAAA,GAAAA,WAAS,GAAMC,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAA5CgK,EAAU9J,EAAA,GAAE+J,EAAa/J,EAAA,GAUhC,OACE9D,EAAAA,GAAAA,MAACsN,GAAY,CAAArN,SAAA,EACXC,EAAAA,GAAAA,KAACqN,GAAO,CAACxM,KAAK,SAASH,QAVV,WACfiN,GAAc,EAChB,EAQ6C5N,UACvCC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,OAAOE,OAAO,iCAG3BX,EAAAA,GAAAA,MAACwN,GAAa,CAAAvN,SAAA,EACZC,EAAAA,GAAAA,KAACqM,GAAa,KACdrM,EAAAA,GAAAA,KAACyD,GAAQ,QAEXzD,EAAAA,GAAAA,KAACiE,KAAK,CACJC,OAAQwJ,EACRrJ,eAhBY,WAChBsJ,GAAc,EAChB,EAeMxJ,MAAOoJ,GACPnJ,aAAa,UAASrE,UAEtBC,EAAAA,GAAAA,KAAC0L,GAAO,QAIhB,EC1CatE,GAAYzJ,GAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,uMAWtB+P,GAAejQ,GAAAA,GAAAA,GAASI,KAAAA,IAAAF,EAAAA,GAAAA,GAAA,uJAQxByJ,GAAW3J,GAAAA,GAAAA,OAAaM,KAAAA,IAAAJ,EAAAA,GAAAA,GAAA,6S,IAuBZF,GAAAA,GAAAA,EAAQQ,KAAAA,IAAAN,EAAAA,GAAAA,GAAA,4P,oBC1CpBgQ,GAAclQ,GAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,wQAiBxBiQ,GAAcnQ,GAAAA,GAAAA,EAAQI,KAAAA,IAAAF,EAAAA,GAAAA,GAAA,iIAOtBkQ,GAAapQ,GAAAA,GAAAA,OAAaM,KAAAA,IAAAJ,EAAAA,GAAAA,GAAA,kNAW1BmQ,GAAmBrQ,GAAAA,GAAAA,IAAUQ,KAAAA,IAAAN,EAAAA,GAAAA,GAAA,4FAO7BoQ,GAAatQ,GAAAA,GAAAA,MAAYU,KAAAA,IAAAR,EAAAA,GAAAA,GAAA,oeAKD,SAAAmE,GAAY,OAAAA,EAATkM,SAAyB,IAuBpDC,GAAcxQ,GAAAA,GAAAA,KAAWiB,KAAAA,IAAAf,EAAAA,GAAAA,GAAA,sIC5DzBuQ,GAAe,WAC1B,IACAC,GAAwCC,EAAAA,GAAAA,MAAiBC,GAAA1K,EAAAA,GAAAA,GAAAwK,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAYF,EAAaG,IAAI,YAE7BC,EAAe,SAAH5M,GAA+B,IAAfyH,EAAKzH,EAAfd,OAAUuI,MAChCgF,EAAgB,CAAEI,SAAUpF,GAC9B,EAMA,OACE3J,EAAAA,GAAAA,MAAAgP,GAAAA,SAAA,CAAA/O,SAAA,EACED,EAAAA,GAAAA,MAAC+N,GAAW,CAAA9N,SAAA,EACVC,EAAAA,GAAAA,KAAC8N,GAAW,CAAA/N,SAAC,iBACbC,EAAAA,GAAAA,KAAC+N,GAAU,CAAClN,KAAK,SAASH,QARV,WACpB+N,EAAgB,CAAC,EACnB,EAMuD1O,SAAC,iBAIpDC,EAAAA,GAAAA,KAACgO,GAAgB,CAACe,KAAK,QAAQ,kBAAgB,iBAAgBhP,SApBhD,CAAC,UAAW,MAAO,SAAU,QAqB9BwJ,KAAI,SAAAyF,GACd,IAAMC,ECnCW,SAAAC,GACzB,IAAMD,EAAe,YAARC,EAAiB,GAAA5F,OAAM4F,EAAG,aAAcA,EACrD,OAAOD,EAAKE,OAAO,GAAGC,cAAgBH,EAAKI,MAAM,EACnD,CDgCuBC,CAAYN,GACzB,OACElP,EAAAA,GAAAA,MAACmO,GAAU,CAETC,UAAWc,EACXhI,UAAW0H,IAAcM,EAAO,UAAY,GAAGjP,SAAA,EAE/CC,EAAAA,GAAAA,KAAA,SACEa,KAAK,QACLN,KAAK,WACLkJ,MAAOuF,EACPO,QAASb,IAAcM,EACvBjO,SAAU6N,KAEZ5O,EAAAA,GAAAA,KAACmO,GAAW,CAAApO,SAAEkP,OAXTO,EAAAA,GAAAA,MAcX,QAIR,EE/CaC,GAAc,SAAHzN,GAAwB,IAAlBC,EAAUD,EAAVC,WAC5B,OACEnC,EAAAA,GAAAA,MAACsH,GAAS,CAAArH,SAAA,EACRC,EAAAA,GAAAA,KAAC4N,GAAY,CAAA7N,SAAC,aACdC,EAAAA,GAAAA,KAACsH,GAAQ,CAACzG,KAAK,SAASH,QAASuB,EAAWlC,UAC1CC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,aAEbP,EAAAA,GAAAA,KAACoO,GAAY,MAGnB,ECjBasB,GAAO/R,GAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,kQAgBjB+E,GAAe,CAC1BC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRE,UAAW,wBACXC,UAAW,sCACXF,QAAS,EACTI,OAAQ,QAEVC,QAAS,CACPC,WAAY,oBAIHmM,GAAahS,GAAAA,GAAAA,GAASI,KAAAA,IAAAF,EAAAA,GAAAA,GAAA,kNAatB+R,GAAYjS,GAAAA,GAAAA,OAAaM,KAAAA,IAAAJ,EAAAA,GAAAA,GAAA,6iBCpCzBgS,GAAkB,SAAH7N,GAAwB,IAAlB8N,EAAU9N,EAAV8N,WAChCpM,GAAsCC,EAAAA,GAAAA,WAAS,GAAMC,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAA9CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAK5B3B,EAAa,WACjB8B,GAAe,EACjB,EAEA,OACEjE,EAAAA,GAAAA,MAAC4P,GAAI,CAAA3P,SAAA,CACF+P,IAAc9P,EAAAA,GAAAA,KAAC2P,GAAU,CAAA5P,SAAE+P,KAC5BhQ,EAAAA,GAAAA,MAAC8P,GAAS,CAAC/O,KAAK,SAASH,QAXX,WAChBqD,GAAe,EACjB,EASgDhE,SAAA,EAC1CC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,WAAW,UACd,QAEVP,EAAAA,GAAAA,KAACiE,KAAK,CACJC,OAAQJ,EACRO,eAAgBpC,EAChBkC,MAAOvB,GACPwB,aAAa,gBAAerE,UAE5BC,EAAAA,GAAAA,KAACyP,GAAW,CAACxN,WAAYA,QAIjC,ECpCa8N,GAAWpS,GAAAA,GAAAA,GAASC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,ibAWpBmS,GAAYrS,GAAAA,GAAAA,IAAUI,KAAAA,IAAAF,EAAAA,GAAAA,GAAA,sKAOE,SAAAmE,GAAY,OAAAA,EAATkM,SAAyB,IAEpD+B,GAAYtS,GAAAA,GAAAA,GAASM,KAAAA,IAAAJ,EAAAA,GAAAA,GAAA,8KAQrBqS,GAAkBvS,GAAAA,GAAAA,EAAQQ,KAAAA,IAAAN,EAAAA,GAAAA,GAAA,6vBAa1BsS,GAAYxS,GAAAA,GAAAA,IAAUU,KAAAA,IAAAR,EAAAA,GAAAA,GAAA,0EAKtBuS,GAAazS,GAAAA,GAAAA,IAAUiB,KAAAA,IAAAf,EAAAA,GAAAA,GAAA,uFAMvBwS,GAAkB1S,GAAAA,GAAAA,IAAUoB,KAAAA,IAAAlB,EAAAA,GAAAA,GAAA,4BAI5ByS,GAAW3S,GAAAA,GAAAA,IAAUsB,KAAAA,IAAApB,EAAAA,GAAAA,GAAA,8EAMrB0S,GAAiB5S,GAAAA,GAAAA,IAAUwB,KAAAA,IAAAtB,EAAAA,GAAAA,GAAA,4BAI3B2S,GAAgB7S,GAAAA,GAAAA,EAAQiK,KAAAA,IAAA/J,EAAAA,GAAAA,GAAA,0IAOxB4S,GAAgB9S,GAAAA,GAAAA,IAAUmK,KAAAA,IAAAjK,EAAAA,GAAAA,GAAA,mIAKF,SAAAiL,GAAY,OAAAA,EAAToF,SAAyB,IAGpDwC,GAAe/S,GAAAA,GAAAA,EAAQqK,KAAAA,IAAAnK,EAAAA,GAAAA,GAAA,qJASvB8S,GAAWhT,GAAAA,GAAAA,IAAUuK,KAAAA,IAAArK,EAAAA,GAAAA,GAAA,8EAMrB+S,GAAgBjT,GAAAA,GAAAA,EAAQyK,KAAAA,IAAAvK,EAAAA,GAAAA,GAAA,0IAQxBgT,GAAelT,GAAAA,GAAAA,EAAQmT,KAAAA,IAAAjT,EAAAA,GAAAA,GAAA,mHAMvBkT,GAAcpT,GAAAA,GAAAA,IAAUqT,KAAAA,IAAAnT,EAAAA,GAAAA,GAAA,6RAWxBoT,GAAOtT,GAAAA,GAAAA,OAAauT,KAAAA,IAAArT,EAAAA,GAAAA,GAAA,sJAIpBK,GAASP,GAAAA,GAAAA,OAAawT,KAAAA,IAAAtT,EAAAA,GAAAA,GAAA,iK,oDC1H5B,SAASuT,GAAQpP,GAAkC,IAA/BqP,EAAYrP,EAAZqP,aAAcC,EAAYtP,EAAZsP,aAKvC,OACEtR,EAAAA,GAAAA,KAACuR,KAAU,CACTtH,SAAUoH,EACVtQ,SAPqB,SAAAyQ,GACvBF,EAAaE,EACf,EAMIC,WAAW,SACXC,QAAS,IAAIC,KACbC,OAAQC,GAAAA,EACRC,aAAc,GAGpB,CCjBO,I,YAAMvT,IAAaZ,EAAAA,GAAAA,IAAOa,GAAAA,GAAPb,CAAYC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,8EAMzBH,GAAYC,GAAAA,GAAAA,IAAUI,KAAAA,IAAAF,EAAAA,GAAAA,GAAA,kSAiBtBkU,GAAapU,GAAAA,GAAAA,GAASM,KAAAA,IAAAJ,EAAAA,GAAAA,GAAA,iJAQtBmU,GAAarU,GAAAA,GAAAA,IAAUQ,KAAAA,IAAAN,EAAAA,GAAAA,GAAA,iLAcvBgB,IAASlB,EAAAA,GAAAA,IAAOmB,GAAAA,GAAPnB,CAAoBU,KAAAA,IAAAR,EAAAA,GAAAA,GAAA,kGAS7BoU,IAAYtU,EAAAA,GAAAA,IAAOe,GAAAA,GAAPf,CAAaiB,KAAAA,IAAAf,EAAAA,GAAAA,GAAA,yoBAmCzBmB,GAAQrB,GAAAA,GAAAA,MAAYoB,KAAAA,IAAAlB,EAAAA,GAAAA,GAAA,oDAKpBqU,IAAoBvU,EAAAA,GAAAA,IAAOe,GAAAA,GAAPf,CAAasB,KAAAA,IAAApB,EAAAA,GAAAA,GAAA,6qBAsCjCsU,GAAkBxU,GAAAA,GAAAA,EAAQwB,KAAAA,IAAAtB,EAAAA,GAAAA,GAAA,gHAc1BuU,IAPmBzU,GAAAA,GAAAA,IAAUiK,KAAAA,IAAA/J,EAAAA,GAAAA,GAAA,kFAObF,GAAAA,GAAAA,EAAQmK,KAAAA,IAAAjK,EAAAA,GAAAA,GAAA,uHAOxBwU,GAAY1U,GAAAA,GAAAA,OAAaqK,KAAAA,IAAAnK,EAAAA,GAAAA,GAAA,4gBA6BzByU,GAAY3U,GAAAA,GAAAA,IAAUuK,KAAAA,IAAArK,EAAAA,GAAAA,GAAA,2OA2BtB0U,IAdgB5U,GAAAA,GAAAA,OAAayK,KAAAA,IAAAvK,EAAAA,GAAAA,GAAA,2OActBF,GAAAA,GAAAA,KAAWmT,KAAAA,IAAAjT,EAAAA,GAAAA,GAAA,sHCjNlBmQ,GAAmBrQ,GAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,kFAO7B2U,IAAc7U,EAAAA,GAAAA,IAAOe,GAAAA,GAAPf,CAAaI,KAAAA,IAAAF,EAAAA,GAAAA,GAAA,4BAI3BoQ,GAAatQ,GAAAA,GAAAA,MAAYM,KAAAA,IAAAJ,EAAAA,GAAAA,GAAA,qcAID,SAAAmE,GAAY,OAAAA,EAATkM,SAAyB,ICVpDuE,GAAc,SAAHzQ,GAA8C,IAAxC0Q,EAAc1Q,EAAd0Q,eAAgBC,EAAgB3Q,EAAhB2Q,iBAE5CjP,GAAkCC,EAAAA,GAAAA,UAAS+O,GAAe9O,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAAnDgL,EAAS9K,EAAA,GAAEgP,EAAYhP,EAAA,GAExBiP,EAAc,SAAH/J,GAA+B,IAAfW,EAAKX,EAAf5H,OAAUuI,MAC/BkJ,EAAiBlJ,GACjBmJ,EAAanJ,EACf,EAEA,OACEzJ,EAAAA,GAAAA,KAACgO,GAAgB,CAACe,KAAK,QAAQ,kBAAgB,iBAAgBhP,SATpD,CAAC,MAAO,SAAU,OAAQ,WAU7BwJ,KAAI,SAAAyF,GAAI,OACZhP,EAAAA,GAAAA,KAACiO,GAAU,CAETC,UAAWc,EACXhI,UAAW0H,IAAcM,EAAO,UAAY,GAAGjP,UAE/CC,EAAAA,GAAAA,KAACwS,GAAW,CACV3R,KAAK,QACLN,KAAK,WACLkJ,MAAOuF,EACPO,QAASb,IAAcM,EACvBjO,SAAU8R,MATPrD,EAAAA,GAAAA,MAWM,KAIrB,ECTMsD,GAAiBvR,GAAAA,KAAaC,MAAM,CACxCgH,MAAOjH,GAAAA,KACJE,IAAI,EAAE,uCACNC,IAAI,IAAK,aACTE,SAAS,2BACZqN,KAAM1N,GAAAA,KACHE,IAAI,GAAG,wCACPC,IAAI,IAAK,aACTE,SAAS,2BACZiN,SAAUtN,GAAAA,KAAamH,MAXR,CAAC,UAAW,MAAO,SAAU,SAY5CqK,SAAUxR,GAAAA,OAGG,SAASyR,GAAahR,GAAqB,IAAlBiR,EAAIjR,EAAJiR,KAAM1M,EAAOvE,EAAPuE,QAC/B2M,EAA4CD,EAAjDjK,IAAaR,EAAoCyK,EAApCzK,MAAOyG,EAA6BgE,EAA7BhE,KAAM8D,EAAuBE,EAAvBF,SAAUlE,EAAaoE,EAAbpE,SAC5CnL,GAAwCC,EAAAA,GAAAA,UAASoP,GAASnP,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAAnD2N,EAAYzN,EAAA,GAAEuP,EAAevP,EAAA,GAC9BlE,GAAWC,EAAAA,GAAAA,MAOjB,OACEG,EAAAA,GAAAA,MAACpC,GAAS,CAAAqC,SAAA,EACRC,EAAAA,GAAAA,KAAC+R,GAAU,CAAAhS,SAAC,eACZC,EAAAA,GAAAA,KAACgS,GAAU,CAAAjS,UACTC,EAAAA,GAAAA,KAAA,UAAQa,KAAK,SAASH,QAAS6F,EAAQxG,UACrCC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CACHC,KAAK,QACLJ,MAAM,KACNC,OAAO,KACPK,OAAO,iCAIbT,EAAAA,GAAAA,KAACkC,GAAAA,GAAM,CACLC,cAAe,CACbqG,MAAAA,EACAyG,KAAAA,EACAJ,SAAAA,EACAkE,SAAU1B,GAEZjP,iBAAkB0Q,GAClBzQ,SA1BW,SAAAC,GACf5C,GAAS0T,EAAAA,GAAAA,IAAS,CAAE9Q,OAAAA,EAAQ4Q,OAAAA,KAC5B3M,GACF,EAuByBxG,SAElB,SAAA+I,GAAA,IAAGuK,EAAYvK,EAAZuK,aAAcC,EAAaxK,EAAbwK,cAAa,OAC7BxT,EAAAA,GAAAA,MAACvB,GAAU,CAAC8D,SAAUgR,EAAatT,SAAA,EACjCC,EAAAA,GAAAA,KAACiS,GAAS,CAACpR,KAAK,OAAON,KAAK,QAAQoC,YAAY,WAChD3C,EAAAA,GAAAA,KAACnB,GAAM,CAAC6D,UAAU,IAAInC,KAAK,WAC3BT,EAAAA,GAAAA,MAACd,GAAK,CAAAe,SAAA,EACJC,EAAAA,GAAAA,KAACkS,GAAiB,CAChBxL,KAAM,EACNhE,UAAU,WACVnC,KAAK,OACLoC,YAAY,iBAEd3C,EAAAA,GAAAA,KAACnB,GAAM,CAAC6D,UAAU,IAAInC,KAAK,aAE7BP,EAAAA,GAAAA,KAACmS,GAAe,CAAC1P,GAAG,wBAAuB1C,SAAC,iBAG5CC,EAAAA,GAAAA,KAACyS,GAAW,CACVC,eAAgB7D,EAChB8D,iBAAkB,SAAA9D,GAChByE,EAAc,WAAYzE,EAC5B,KAEF7O,EAAAA,GAAAA,KAACoS,GAAa,CAAArS,SAAC,cACfD,EAAAA,GAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,GAAAA,KAACuS,GAAI,CAAAxS,SAAC,aACNC,EAAAA,GAAAA,KAACoR,GAAQ,CACPC,aAAcA,EACdC,aAAc,SAAAE,GACZ2B,EAAgB3B,GAChB8B,EAAc,WAAY9B,EAC5B,QAGJ1R,EAAAA,GAAAA,MAACuS,GAAS,CAACxR,KAAK,SAAQd,SAAA,EACtBC,EAAAA,GAAAA,KAACsS,GAAS,CAAAvS,UACRC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,OAAOJ,MAAM,KAAKC,OAAO,UAEtCJ,EAAAA,GAAAA,KAAA,KAAAD,SAAG,cAEM,MAKvB,CCnHO,I,2BAAMwT,GAAW5V,GAAAA,GAAAA,GAASC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,0KCApB2V,GAAqB7V,GAAAA,GAAAA,GAASC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,qTAsB9B4V,GAA2B9V,GAAAA,GAAAA,OAAaI,KAAAA,IAAAF,EAAAA,GAAAA,GAAA,kMChBxC6V,GAAe,SAAH1R,GAAuC,IAAjC2R,EAAM3R,EAAN2R,OAAQT,EAAMlR,EAANkR,OAAQU,EAAS5R,EAAT4R,UACvClU,GAAWC,EAAAA,GAAAA,MACTqJ,EAAe2K,EAAf3K,IAAKR,EAAUmL,EAAVnL,MACP7H,EAAUqI,IAAQ4K,EAAY,UAAY,GAKhD,OACE9T,EAAAA,GAAAA,MAAC0T,GAAkB,CAACxM,UAAWrG,EAAQZ,SAAA,EACrCC,EAAAA,GAAAA,KAACyT,GAAwB,CAAC/S,QALP,WACrBhB,GAASmU,EAAAA,GAAAA,IAAkB,CAAEX,OAAAA,EAAQY,WAAY9K,IACnD,EAGsDjJ,SAC/CyI,KAEHxI,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CACHC,KAAK,kBACLJ,MAAM,OACNC,OAAO,OACPK,OAAO,gCAIf,ECxBasT,GAAmB,SAAH/R,GAAkC,IAA5BgS,EAAYhS,EAAZgS,aAAcd,EAAMlR,EAANkR,OACvCe,GAAYzJ,EAAAA,GAAAA,KAAY,SAAAjG,GAAK,OAAIA,EAAM0P,OAAO,IAA9CA,QAGR,OACEjU,EAAAA,GAAAA,KAACuT,GAAQ,CAAAxT,SACNkU,EAAQ1K,KAAI,SAAAyF,GACX,OACEhP,EAAAA,GAAAA,KAAC0T,GAAY,CACXE,UAAWI,EAEXL,OAAQ3E,EACRkE,OAAQA,IAFH1D,EAAAA,GAAAA,MAKX,KAGN,ECMe,SAAS0E,GAAIlS,GAAY,IAATiR,EAAIjR,EAAJiR,KAC7BvP,GAA8CC,EAAAA,GAAAA,WAAS,GAAMC,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAAtDyQ,EAAevQ,EAAA,GAAEwQ,EAAkBxQ,EAAA,GAC1CyQ,GAAsD1Q,EAAAA,GAAAA,WAAS,GAAM2Q,GAAAzQ,EAAAA,GAAAA,GAAAwQ,EAAA,GAA9DE,EAAmBD,EAAA,GAAEE,EAAsBF,EAAA,GAC5C5U,GAAWC,EAAAA,GAAAA,MAEVuT,EAMHD,EANFjK,IACAR,EAKEyK,EALFzK,MACAyG,EAIEgE,EAJFhE,KACA8D,EAGEE,EAHFF,SACAlE,EAEEoE,EAFFpE,SACe4F,EACbxB,EADFU,OAAU3K,IAEN0L,EAAe,IAAI/C,KAAKoB,GACxB4B,EAAY,GAAArL,OAAMoL,EAAaE,aAAY,KAAAtL,QAC/CoL,EAAaG,cAAgB,GAE5BC,WACAC,SAAS,EAAG,KAAI,KAAAzL,OAAIoL,EAAaM,eAC9BC,EAAsBhG,EAAKiG,UAAU,EAAG,IAAM,MAM9CC,EAAiB,WACrBf,GAAmB,EACrB,EAcA,OACEtU,EAAAA,GAAAA,MAACiQ,GAAQ,CAAAhQ,SAAA,EACPC,EAAAA,GAAAA,KAACgQ,GAAS,CAAC9B,UAAWW,KACtB7O,EAAAA,GAAAA,KAACiQ,GAAS,CAAAlQ,SAAEyI,KACZxI,EAAAA,GAAAA,KAACkQ,GAAe,CAAAnQ,SAAEkV,KAClBjV,EAAAA,GAAAA,KAACmQ,GAAS,KACVrQ,EAAAA,GAAAA,MAACsQ,GAAU,CAAArQ,SAAA,EACTD,EAAAA,GAAAA,MAACuQ,GAAe,CAAAtQ,SAAA,EACdD,EAAAA,GAAAA,MAACwQ,GAAQ,CAAAvQ,SAAA,EACPC,EAAAA,GAAAA,KAACwQ,GAAa,CAAAzQ,SAAC,cACfD,EAAAA,GAAAA,MAACyQ,GAAc,CAAAxQ,SAAA,EACbC,EAAAA,GAAAA,KAACyQ,GAAa,CAACvC,UAAWW,KAC1B7O,EAAAA,GAAAA,KAAC0Q,GAAY,CAAA3Q,SAAE8O,WAGnB/O,EAAAA,GAAAA,MAAC6Q,GAAQ,CAAA5Q,SAAA,EACPC,EAAAA,GAAAA,KAAC4Q,GAAa,CAAA7Q,SAAC,cACfC,EAAAA,GAAAA,KAAC6Q,GAAY,CAAA9Q,SAAE4U,WAGnB7U,EAAAA,GAAAA,MAACiR,GAAW,CAAAhR,SAAA,EACVC,EAAAA,GAAAA,KAACiR,GAAI,CAACpQ,KAAK,SAAQd,UACjBC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,OAAOJ,MAAM,KAAKC,OAAO,UAEtCJ,EAAAA,GAAAA,KAAC9B,GAAM,CAAC2C,KAAK,SAASH,QAhCE,WAC9B8T,GAAuB,EACzB,EA8B+DzU,UACrDC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,kBAAkBJ,MAAM,KAAKC,OAAO,UAEjDJ,EAAAA,GAAAA,KAAC9B,GAAM,CAAC2C,KAAK,SAASH,QA/CR,WACpB0T,GAAmB,EACrB,EA6CqDrU,UAC3CC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,SAASJ,MAAM,KAAKC,OAAO,UAExCJ,EAAAA,GAAAA,KAAC9B,GAAM,CAAC2C,KAAK,SAASH,QA1CL,WACvBhB,GAAS0V,EAAAA,GAAAA,IAAW,CAAElC,OAAAA,IACxB,EAwCwDnT,UAC9CC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,QAAQJ,MAAM,KAAKC,OAAO,gBAI3CJ,EAAAA,GAAAA,KAACiE,KAAK,CACJC,OAAQiQ,EACR9P,eAAgB8Q,EAChBnO,UAAW,gBACXC,iBAAkB,gBAAgBlH,UAElCC,EAAAA,GAAAA,KAACgT,GAAa,CAACC,KAAMA,EAAM1M,QAAS4O,OAEtCnV,EAAAA,GAAAA,KAACiE,KAAK,CACJC,OAAQqQ,EACRlQ,eAjD2B,WAC/BmQ,GAAuB,EACzB,EAgDMxN,UAAW,gBACXC,iBAAkB,gBAAgBlH,UAElCC,EAAAA,GAAAA,KAAC+T,GAAgB,CAACC,aAAcS,EAAUvB,OAAQA,QAI1D,CCxHwBvV,GAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,kRAmBbF,GAAAA,GAAAA,GAASI,KAAAA,IAAAF,EAAAA,GAAAA,GAAA,iHAnBvB,I,wEA0BMwX,GAAW1X,GAAAA,GAAAA,GAASM,KAAAA,IAAAJ,EAAAA,GAAAA,GAAA,26CAiEpBoK,IA7BOtK,GAAAA,GAAAA,IAAUQ,KAAAA,IAAAN,EAAAA,GAAAA,GAAA,iEAMLF,GAAAA,GAAAA,OAAaU,KAAAA,IAAAR,EAAAA,GAAAA,GAAA,uWAuBhBF,GAAAA,GAAAA,OAAaiB,KAAAA,IAAAf,EAAAA,GAAAA,GAAA,0jBAkCtBsK,GAAWxK,GAAAA,GAAAA,IAAUoB,KAAAA,IAAAlB,EAAAA,GAAAA,GAAA,yQC5HrBU,IAAaZ,EAAAA,GAAAA,IAAOa,GAAAA,GAAPb,CAAYC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,8EAMzBH,GAAYC,GAAAA,GAAAA,IAAUI,KAAAA,IAAAF,EAAAA,GAAAA,GAAA,iVAoBtBkU,GAAapU,GAAAA,GAAAA,GAASM,KAAAA,IAAAJ,EAAAA,GAAAA,GAAA,iJAQtBmU,GAAarU,GAAAA,GAAAA,IAAUQ,KAAAA,IAAAN,EAAAA,GAAAA,GAAA,iLAcvBgB,IAASlB,EAAAA,GAAAA,IAAOmB,GAAAA,GAAPnB,CAAoBU,KAAAA,IAAAR,EAAAA,GAAAA,GAAA,kGAS7BoU,IAAYtU,EAAAA,GAAAA,IAAOe,GAAAA,GAAPf,CAAaiB,KAAAA,IAAAf,EAAAA,GAAAA,GAAA,qoBAiCzBmB,GAAQrB,GAAAA,GAAAA,MAAYoB,KAAAA,IAAAlB,EAAAA,GAAAA,GAAA,oDAKpBqU,IAAoBvU,EAAAA,GAAAA,IAAOe,GAAAA,GAAPf,CAAasB,KAAAA,IAAApB,EAAAA,GAAAA,GAAA,6qBAsCjCsU,GAAkBxU,GAAAA,GAAAA,EAAQwB,KAAAA,IAAAtB,EAAAA,GAAAA,GAAA,gHAmF1BuU,IA5EmBzU,GAAAA,GAAAA,IAAUiK,KAAAA,IAAA/J,EAAAA,GAAAA,GAAA,mFAOfF,EAAAA,GAAAA,IAAOe,GAAAA,GAAPf,CAAamK,KAAAA,IAAAjK,EAAAA,GAAAA,GAAA,gEAKVF,GAAAA,GAAAA,MAAYqK,KAAAA,IAAAnK,EAAAA,GAAAA,GAAA,uQAgBZF,GAAAA,GAAAA,MAAYuK,KAAAA,IAAArK,EAAAA,GAAAA,GAAA,uQAgBVF,GAAAA,GAAAA,MAAYyK,KAAAA,IAAAvK,EAAAA,GAAAA,GAAA,uQAgBbF,GAAAA,GAAAA,MAAYmT,KAAAA,IAAAjT,EAAAA,GAAAA,GAAA,mSAgBdF,GAAAA,GAAAA,EAAQqT,KAAAA,IAAAnT,EAAAA,GAAAA,GAAA,uHAOxBwU,GAAY1U,GAAAA,GAAAA,OAAauT,KAAAA,IAAArT,EAAAA,GAAAA,GAAA,khBA6BzByU,GAAY3U,GAAAA,GAAAA,IAAUwT,KAAAA,IAAAtT,EAAAA,GAAAA,GAAA,2OA2BtB0U,IAdgB5U,GAAAA,GAAAA,OAAa2X,KAAAA,IAAAzX,EAAAA,GAAAA,GAAA,2OActBF,GAAAA,GAAAA,KAAW4X,KAAAA,IAAA1X,EAAAA,GAAAA,GAAA,sHC/PzBiV,GAAiBvR,GAAAA,KAAaC,MAAM,CACxCgH,MAAOjH,GAAAA,KACJE,IAAI,EAAE,uCACNC,IAAI,IAAK,aACTE,SAAS,2BACZqN,KAAM1N,GAAAA,KACHE,IAAI,GAAG,wCACPC,IAAI,IAAK,aACTE,SAAS,2BACZiN,SAAUtN,GAAAA,KAAamH,MAXR,CAAC,UAAW,MAAO,SAAU,SAY5CqK,SAAUxR,GAAAA,OAGG,SAASiU,GAAYxT,GAAyC,IAAtCwG,EAAKxG,EAALwG,MAAOqB,EAAO7H,EAAP6H,QAAStD,EAAOvE,EAAPuE,QAASkO,EAAQzS,EAARyS,SAC9D/Q,GAAwCC,EAAAA,GAAAA,UAAS,IAAIgO,MAAO/N,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAArD2N,EAAYzN,EAAA,GAAEuP,EAAevP,EAAA,GAC9BlE,GAAWC,EAAAA,GAAAA,MAOjB,OACEG,EAAAA,GAAAA,MAACpC,GAAS,CAAAqC,SAAA,EACRC,EAAAA,GAAAA,KAAC+R,GAAU,CAAAhS,SAAEyI,KACbxI,EAAAA,GAAAA,KAACgS,GAAU,CAAAjS,UACTC,EAAAA,GAAAA,KAAA,UAAQa,KAAK,SAASH,QAAS6F,EAAQxG,UACrCC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CACHC,KAAK,QACLJ,MAAM,KACNC,OAAO,KACPK,OAAO,kCAIbT,EAAAA,GAAAA,KAACkC,GAAAA,GAAM,CACLC,cAAe,CACbqG,MAAO,GACPyG,KAAM,GACNJ,SAAU,UACVkE,SAAU1B,GAEZjP,iBAAkB0Q,GAClBzQ,SA1BW,SAAAC,GACf5C,GAAS+V,EAAAA,GAAAA,IAAQ,CAAEnT,OAAAA,EAAQmS,SAAAA,KAC3BlO,GACF,EAuByBxG,SAElB,SAAA+I,GAAA,IAAGuK,EAAYvK,EAAZuK,aAAcC,EAAaxK,EAAbwK,cAAa,OAC7BxT,EAAAA,GAAAA,MAACvB,GAAU,CAAC8D,SAAUgR,EAAatT,SAAA,EACjCC,EAAAA,GAAAA,KAACiS,GAAS,CAACpR,KAAK,OAAON,KAAK,QAAQoC,YAAY,WAChD3C,EAAAA,GAAAA,KAACnB,GAAM,CAAC6D,UAAU,IAAInC,KAAK,WAC3BT,EAAAA,GAAAA,MAACd,GAAK,CAAAe,SAAA,EACJC,EAAAA,GAAAA,KAACkS,GAAiB,CAChBxL,KAAM,EACNhE,UAAU,WACVnC,KAAK,OACLoC,YAAY,iBAEd3C,EAAAA,GAAAA,KAACnB,GAAM,CAAC6D,UAAU,IAAInC,KAAK,aAE7BP,EAAAA,GAAAA,KAACmS,GAAe,CAAC1P,GAAG,wBAAuB1C,SAAC,iBAG5CC,EAAAA,GAAAA,KAACyS,GAAW,CACVC,eAAe,UACfC,iBAAkB,SAAA9D,GAChByE,EAAc,WAAYzE,EAC5B,KAEF7O,EAAAA,GAAAA,KAACoS,GAAa,CAAArS,SAAC,cACfD,EAAAA,GAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,GAAAA,KAACuS,GAAI,CAAAxS,SAAC,aACNC,EAAAA,GAAAA,KAACoR,GAAQ,CACPC,aAAcA,EACdC,aAAc,SAAAE,GACZ2B,EAAgB3B,GAChB8B,EAAc,WAAY9B,EAC5B,QAGJ1R,EAAAA,GAAAA,MAACuS,GAAS,CAACxR,KAAK,SAAQd,SAAA,EACtBC,EAAAA,GAAAA,KAACsS,GAAS,CAAAvS,UACRC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,OAAOJ,MAAM,KAAKC,OAAO,UAEtCJ,EAAAA,GAAAA,KAAA,KAAAD,SAAI8J,SAEK,MAKvB,CClHO,I,uFAAM6L,GAAW/X,GAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,0SAoBrBS,GAAQX,GAAAA,GAAAA,GAASI,KAAAA,IAAAF,EAAAA,GAAAA,GAAA,sJAQjB6R,GAAO/R,GAAAA,GAAAA,IAAUM,KAAAA,IAAAJ,EAAAA,GAAAA,GAAA,iEAMjB8X,GAAYhY,GAAAA,GAAAA,OAAaQ,KAAAA,IAAAN,EAAAA,GAAAA,GAAA,uWAuBzB+E,GAAe,CAC1BC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRE,UAAW,wBACXC,UAAW,6BACXF,QAAS,GAEXK,QAAS,CACPC,WAAY,oBCnEH9F,GAAYC,GAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,yYAoBtBU,IAAaZ,EAAAA,GAAAA,IAAOa,GAAAA,GAAPb,CAAYI,KAAAA,IAAAF,EAAAA,GAAAA,GAAA,+LASzBY,IAAcd,EAAAA,GAAAA,IAAOe,GAAAA,GAAPf,CAAaM,KAAAA,IAAAJ,EAAAA,GAAAA,GAAA,2nBAiC3ByJ,GAAW3J,GAAAA,GAAAA,OAAaQ,KAAAA,IAAAN,EAAAA,GAAAA,GAAA,wRAoBxBmB,GAAQrB,GAAAA,GAAAA,GAASU,KAAAA,IAAAR,EAAAA,GAAAA,GAAA,yQAYjBK,GAASP,GAAAA,GAAAA,OAAaiB,KAAAA,IAAAf,EAAAA,GAAAA,GAAA,ibAyBtB+X,GAAajY,GAAAA,GAAAA,KAAWoB,KAAAA,IAAAlB,EAAAA,GAAAA,GAAA,uNAmBxByU,KATS3U,EAAAA,GAAAA,IAAOmB,GAAAA,GAAPnB,CAAoBsB,KAAAA,IAAApB,EAAAA,GAAAA,GAAA,kGASjBF,GAAAA,GAAAA,IAAUwB,KAAAA,IAAAtB,EAAAA,GAAAA,GAAA,wN,WC7H7BgY,GAAsBtU,GAAAA,KAAaC,MAAM,CAC7CgH,MAAOjH,GAAAA,KAAaE,IAAI,EAAG,cAAcG,SAAS,6BAGvCkU,GAAmB,SAAH9T,GAAsC,IAAhCwG,EAAKxG,EAALwG,MAAOiM,EAAQzS,EAARyS,SAAUlO,EAAOvE,EAAPuE,QAC5C7G,GAAWC,EAAAA,GAAAA,MAMjB,OACEG,EAAAA,GAAAA,MAACpC,GAAS,CAAAqC,SAAA,EACRC,EAAAA,GAAAA,KAAChB,GAAK,CAAAe,SAAC,iBACPC,EAAAA,GAAAA,KAACsH,GAAQ,CACPzG,KAAK,SACLH,QAAS6F,EACTxG,UAEAC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,QAAQJ,MAAM,KAAKC,OAAO,KAAKK,OAAO,gCAEnDT,EAAAA,GAAAA,KAACkC,GAAAA,GAAM,CACLC,cAAe,CACbqG,MAAAA,GAEFpG,iBAAkByT,GAClBxT,SAnBe,SAAA0T,GACnBrW,GAASsW,EAAAA,GAAAA,IAAW,CAAED,KAAAA,EAAMtB,SAAAA,IAC9B,EAiB6B1U,UAEvBD,EAAAA,GAAAA,MAACvB,GAAU,CAAAwB,SAAA,EACTC,EAAAA,GAAAA,KAACvB,GAAW,CAACoC,KAAK,OAAON,KAAK,QAAQoC,YAAY,WAClD7C,EAAAA,GAAAA,MAAC5B,GAAM,CAAC2C,KAAK,SAAQd,SAAA,EACnBC,EAAAA,GAAAA,KAACsS,GAAS,CAAAvS,UACRC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,OAAOJ,MAAM,KAAKC,OAAO,UAEtCJ,EAAAA,GAAAA,KAAC4V,GAAU,CAAA7V,SAAC,mBAMxB,EC1CakW,GAAa,SAAHjU,GAA6B,IAAvBwG,EAAKxG,EAALwG,MAAOiM,EAAQzS,EAARyS,SAClC/Q,GAAsCC,EAAAA,GAAAA,WAAS,GAAMC,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAA9CwS,EAAWtS,EAAA,GAAEuS,EAAcvS,EAAA,GAC5BlE,GAAWC,EAAAA,GAAAA,MAMXyW,EAAmB,WACvBD,GAAe,EACjB,EAMA,OACErW,EAAAA,GAAAA,MAAAgP,GAAAA,SAAA,CAAA/O,SAAA,EACED,EAAAA,GAAAA,MAAC4V,GAAQ,CAAA3V,SAAA,EACPC,EAAAA,GAAAA,KAAC1B,GAAK,CAAAyB,SAAEyI,KACR1I,EAAAA,GAAAA,MAAC4P,GAAI,CAAA3P,SAAA,EACHC,EAAAA,GAAAA,KAAC2V,GAAS,CAAC9U,KAAK,SAASH,QAjBT,WACtByV,GAAe,EACjB,EAe0DpW,UAChDC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,cAEbP,EAAAA,GAAAA,KAAC2V,GAAS,CAAC9U,KAAK,SAASH,QAZN,WACzBhB,GAAS2W,EAAAA,GAAAA,IAAa,CAAE5B,SAAAA,IAC1B,EAU6D1U,UACnDC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,mBAIjBP,EAAAA,GAAAA,KAACiE,KAAK,CACJC,OAAQgS,EACR7R,eAAgB+R,EAChBjS,MAAOvB,GACPwB,aAAa,oBACbkS,aAAa,EAAMvW,UAEnBC,EAAAA,GAAAA,KAAC8V,GAAgB,CACftN,MAAOA,EACPiM,SAAUA,EACVlO,QAAS6P,QAKnB,EC/CaG,GAAS,SAAHvU,GAA6B,IAQhCwU,EARS/B,EAAQzS,EAARyS,SAAUjM,EAAKxG,EAALwG,MACjC9E,GAA8CC,EAAAA,GAAAA,WAAS,GAAMC,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAAtDyQ,EAAevQ,EAAA,GAAEwQ,EAAkBxQ,EAAA,GAClC6S,GAAUjM,EAAAA,GAAAA,KAAY,SAAAjG,GAAK,OAAIA,EAAMkS,KAAK,IAA1CA,MACRpI,GAAuBC,EAAAA,GAAAA,MACjBO,GADkChL,EAAAA,GAAAA,GAAAwK,EAAA,GAArB,GACWM,IAAI,YAE9B+H,EAAoB,OAALD,QAAK,IAALA,OAAK,EAALA,EAAOzL,QAAO,SAAAlC,GAAgB,OAAAA,EAAb6K,OAAU3K,MAAoByL,CAAQ,IAEtE5F,IACF6H,EAA2B,QAAfF,EAAGE,SAAY,IAAAF,OAAA,EAAZA,EAAcxL,QAAO,SAAAiI,GAAI,OAAIA,EAAKpE,WAAaA,CAAQ,KAGxE,IAIMsG,EAAiB,WACrBf,GAAmB,EACrB,EAEA,OACEtU,EAAAA,GAAAA,MAAAgP,GAAAA,SAAA,CAAA/O,SAAA,EACEC,EAAAA,GAAAA,KAACiW,GAAU,CAACzN,MAAOA,EAAOiM,SAAUA,KACpCzU,EAAAA,GAAAA,KAACqV,GAAQ,CAAAtV,SACN2W,EAAanN,KAAI,SAAA0J,GAAI,OACpBjT,EAAAA,GAAAA,KAACkU,GAAI,CAAgBjB,KAAMA,IAAhBzD,EAAAA,GAAAA,MAAwB,OAGvC1P,EAAAA,GAAAA,MAACmI,GAAM,CAACpH,KAAK,SAASH,QAhBJ,WACpB0T,GAAmB,EACrB,EAciDrU,SAAA,EAC3CC,EAAAA,GAAAA,KAACmI,GAAQ,CAAApI,UACPC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,WACD,IAAI,uBAGlBP,EAAAA,GAAAA,KAACiE,KAAK,CACJC,OAAQiQ,EACR9P,eAAgB8Q,EAChBnO,UAAW,gBACXC,iBAAkB,gBAClB7C,aAAa,iBACbkS,aAAa,EAAMvW,UAEnBC,EAAAA,GAAAA,KAACwV,GAAY,CACXf,SAAUA,EACVjM,MAAO,WACPqB,QAAS,MACTtD,QAAS4O,QAKnB,EC3DazX,GAAYC,GAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,29CAuCtB+E,GAAe,CAC1BC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRE,UAAW,wBACXC,UAAW,6BACXF,QAAS,GAEXK,QAAS,CACPC,WAAY,oBAIHmT,GAAahZ,GAAAA,GAAAA,GAASI,KAAAA,IAAAF,EAAAA,GAAAA,GAAA,0CAKtB+Y,GAAajZ,GAAAA,GAAAA,GAASM,KAAAA,IAAAJ,EAAAA,GAAAA,GAAA,iMAWtB6R,GAAO/R,GAAAA,GAAAA,IAAUQ,KAAAA,IAAAN,EAAAA,GAAAA,GAAA,2FAMjBoK,GAAStK,GAAAA,GAAAA,OAAaU,KAAAA,IAAAR,EAAAA,GAAAA,GAAA,yqBAyCtBsK,GAAWxK,GAAAA,GAAAA,IAAUiB,KAAAA,IAAAf,EAAAA,GAAAA,GAAA,2eCrHrBH,GAAYC,GAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,yYAoBtBU,IAAaZ,EAAAA,GAAAA,IAAOa,GAAAA,GAAPb,CAAYI,KAAAA,IAAAF,EAAAA,GAAAA,GAAA,+LASzBY,IAAcd,EAAAA,GAAAA,IAAOe,GAAAA,GAAPf,CAAaM,KAAAA,IAAAJ,EAAAA,GAAAA,GAAA,2nBAiC3ByJ,GAAW3J,GAAAA,GAAAA,OAAaQ,KAAAA,IAAAN,EAAAA,GAAAA,GAAA,wRAoBxBmB,GAAQrB,GAAAA,GAAAA,GAASU,KAAAA,IAAAR,EAAAA,GAAAA,GAAA,yQAYjBK,GAASP,GAAAA,GAAAA,OAAaiB,KAAAA,IAAAf,EAAAA,GAAAA,GAAA,ibAyBtB+X,GAAajY,GAAAA,GAAAA,KAAWoB,KAAAA,IAAAlB,EAAAA,GAAAA,GAAA,uNAmBxByU,KATS3U,EAAAA,GAAAA,IAAOmB,GAAAA,GAAPnB,CAAoBsB,KAAAA,IAAApB,EAAAA,GAAAA,GAAA,kGASjBF,GAAAA,GAAAA,IAAUwB,KAAAA,IAAAtB,EAAAA,GAAAA,GAAA,wNC7H7BgY,GAAsBtU,GAAAA,KAAaC,MAAM,CAC7CgH,MAAOjH,GAAAA,KAAaE,IAAI,EAAG,cAAcG,SAAS,6BAGvCiV,GAAkB,SAAH7U,GAA8B,IAAxBoI,EAAOpI,EAAPoI,QAAS7D,EAAOvE,EAAPuE,QACnC7G,GAAWC,EAAAA,GAAAA,MAOjB,OACEG,EAAAA,GAAAA,MAACpC,GAAS,CAAAqC,SAAA,EACRC,EAAAA,GAAAA,KAAChB,GAAK,CAAAe,SAAC,gBACPC,EAAAA,GAAAA,KAACsH,GAAQ,CACPzG,KAAK,SACLH,QAAS6F,EACTxG,UAEAC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,QAAQJ,MAAM,KAAKC,OAAO,KAAKK,OAAO,gCAEnDT,EAAAA,GAAAA,KAACkC,GAAAA,GAAM,CACLC,cAAe,CACbqG,MAAO,IAETpG,iBAAkByT,GAClBxT,SApBe,SAAA0T,GACnBrW,GAASoX,EAAAA,GAAAA,IAAU,CAAEf,KAAAA,EAAM3L,QAAAA,KAC3B7D,GACF,EAiB6BxG,UAEvBD,EAAAA,GAAAA,MAACvB,GAAU,CAAAwB,SAAA,EACTC,EAAAA,GAAAA,KAACvB,GAAW,CAACoC,KAAK,OAAON,KAAK,QAAQoC,YAAY,WAClD7C,EAAAA,GAAAA,MAAC5B,GAAM,CAAC2C,KAAK,SAAQd,SAAA,EACnBC,EAAAA,GAAAA,KAACsS,GAAS,CAAAvS,UACRC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,OAAOJ,MAAM,KAAKC,OAAO,UAEtCJ,EAAAA,GAAAA,KAAC4V,GAAU,CAAA7V,SAAC,kBAMxB,ECvCagX,GAAQ,WACnB,IAAArT,GAAiCC,EAAAA,GAAAA,WAAS,GAAMC,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAAzCsT,EAAWpT,EAAA,GAAE0I,EAAS1I,EAAA,GACrBqQ,GAAYzJ,EAAAA,GAAAA,KAAY,SAAAjG,GAAK,OAAIA,EAAM0P,OAAO,IAA9CA,QACA7J,GAAYuB,EAAAA,GAAAA,MAAZvB,QAMFnI,EAAa,WACjBqK,GAAU,EACZ,EAEA,OACExM,EAAAA,GAAAA,MAAAgP,GAAAA,SAAA,CAAA/O,SAAA,EACEC,EAAAA,GAAAA,KAACtC,GAAS,CAAAqC,UACRD,EAAAA,GAAAA,MAAC4P,GAAI,CAAA3P,SAAA,EACHC,EAAAA,GAAAA,KAAC2W,GAAU,CAAA5W,SACRkU,EAAQ1K,KAAI,SAAAvH,GAAqB,IAAlBgH,EAAGhH,EAAHgH,IAAKR,EAAKxG,EAALwG,MACnB,OACExI,EAAAA,GAAAA,KAAC4W,GAAU,CAAA7W,UACTC,EAAAA,GAAAA,KAACuW,GAAM,CAAC/N,MAAOA,EAAOiM,SAAUzL,MADjBwG,EAAAA,GAAAA,MAIrB,OAEF1P,EAAAA,GAAAA,MAACmI,GAAM,CAACpH,KAAK,SAASH,QArBZ,WAChB4L,GAAU,EACZ,EAmBiDvM,SAAA,EACvCC,EAAAA,GAAAA,KAACmI,GAAQ,CAAApI,UACPC,EAAAA,GAAAA,KAACM,GAAAA,EAAI,CAACC,KAAK,WACD,IAAI,8BAKtBP,EAAAA,GAAAA,KAACiE,KAAK,CACJC,OAAQ8S,EACR3S,eAAgBpC,EAChBkC,MAAOvB,GACPwB,aAAa,oBACbkS,aAAa,EAAMvW,UAEnBC,EAAAA,GAAAA,KAAC6W,GAAe,CAACtQ,QAAStE,EAAYmI,QAASA,QAIvD,EC5Da6M,GAAc,SAAHjV,GAAwB,IAAlB8N,EAAU9N,EAAV8N,WAC5B,OACEhQ,EAAAA,GAAAA,MAAAgP,GAAAA,SAAA,CAAA/O,SAAA,EACEC,EAAAA,GAAAA,KAAC6P,GAAe,CAACC,WAAYA,KAC7B9P,EAAAA,GAAAA,KAAC+W,GAAK,MAGZ,ECRaG,GAAiBvZ,GAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,iHAQ3BsZ,GAAYxZ,GAAAA,GAAAA,EAAQI,KAAAA,IAAAF,EAAAA,GAAAA,GAAA,2SAsBpB+E,GAAe,CAC1BC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRE,UAAW,wBACXC,UAAW,6BACXF,QAAS,GAEXK,QAAS,CACPC,WAAY,oBAIH4T,GAAmBzZ,GAAAA,GAAAA,OAAaM,KAAAA,IAAAJ,EAAAA,GAAAA,GAAA,iQCrChCwZ,GAAc,WACzB,IAAA3T,GAAiCC,EAAAA,GAAAA,WAAS,GAAMC,GAAAC,EAAAA,GAAAA,GAAAH,EAAA,GAAzCsT,EAAWpT,EAAA,GAAE0I,EAAS1I,EAAA,GAMvB3B,EAAa,WACjBqK,GAAU,EACZ,EAEA,OACExM,EAAAA,GAAAA,MAACoX,GAAc,CAAAnX,SAAA,EACbD,EAAAA,GAAAA,MAACqX,GAAS,CAAApX,SAAA,CAAC,gDACqC,KAC9CC,EAAAA,GAAAA,KAACoX,GAAgB,CAACvW,KAAK,SAASH,QAZpB,WAChB4L,GAAU,EACZ,EAUyDvM,SAAC,sBAEhC,IAAI,0LAK1BC,EAAAA,GAAAA,KAACiE,KAAK,CACJC,OAAQ8S,EACR3S,eAAgBpC,EAChBkC,MAAOvB,GACPwB,aAAa,uBACbkS,aAAa,EAAMvW,UAEnBC,EAAAA,GAAAA,KAAC2I,GAAkB,CAACpC,QAAStE,QAIrC,ECzCaqV,GAAiB3Z,GAAAA,GAAAA,MAAYC,KAAAA,IAAAC,EAAAA,GAAAA,GAAA,6TAgB7B0Z,GAAO5Z,GAAAA,GAAAA,KAAWI,KAAAA,IAAAF,EAAAA,GAAAA,GAAA,2gCAM3B,SAAAmE,GAAe,OAAAA,EAAZwV,aAA+B,yBAAAlO,QAA4B,SAAAU,GAAK,OAAIA,EAAMyN,cAAc,6CACjE,IAaF,SAAAzN,GAAK,OAAIA,EAAMyN,cAAc,IAG7B,SAAAzN,GAAK,OAAIA,EAAMyN,cAAc,IAM3B,SAAAzN,GAAK,OAAIA,EAAMyN,cAAc,IAK/B,SAAAzN,GAAK,OAAIA,EAAMyN,cAAc,IAQ3B,SAAAzN,GAAK,OAAIA,EAAMyN,cAAc,IC9C5C,SAASC,KACtB,IAAMhY,GAAWC,EAAAA,GAAAA,MACTyK,GAAYuB,EAAAA,GAAAA,MAAZvB,QACAuN,GAAenY,EAAAA,GAAAA,KAAfmY,WACF/O,GAAWC,EAAAA,GAAAA,MACX+O,GAAYpN,EAAAA,GAAAA,IAAY9F,KAE9BkH,EAAAA,GAAAA,YAAU,WACR,IAAMiM,EAAczO,aAAa0O,QAAQ,aACzC,GAAKD,GACDA,IAAgBzN,EAEpB,OADAxB,EAAS,IAADU,OAAKuO,IACN,WAAO,CAEhB,GAAG,KAEHjM,EAAAA,GAAAA,YAAU,WACR,GAAKxB,GACAuN,EAKL,OAJAjY,GAASqY,EAAAA,GAAAA,IAAe3N,IACxB1K,GAASsY,EAAAA,GAAAA,IAAsB5N,IAC/B1K,GAASuY,EAAAA,GAAAA,IAAW7N,IAEb,WAAO,CAChB,GAAG,CAACA,EAAS1K,EAAUiY,IAGvB,IAAMnU,GAAsB,OAAToU,QAAS,IAATA,OAAS,EAATA,EAAWpU,aAAc,QACtCgF,EAAiB,OAAToP,QAAS,IAATA,OAAS,EAATA,EAAWpP,MAGnB0P,EADJ,0EACiC1U,EAInC,OAHA2U,QAAQC,IAAI5U,IAIV1D,EAAAA,GAAAA,MAAAgP,GAAAA,SAAA,CAAA/O,SAAA,EACEC,EAAAA,GAAAA,KAACyN,GAAM,KACPzN,EAAAA,GAAAA,KAACsX,GAAc,CAAAvX,UACbC,EAAAA,GAAAA,KAAC0L,GAAO,MAETkM,GACC9X,EAAAA,GAAAA,MAACyX,GAAI,CACHE,eAAgBS,EAChBG,cAA8B,WAAf7U,EAAwBzD,SAAA,EAEvCC,EAAAA,GAAAA,KAACiX,GAAW,CAACnH,WAAYtH,KACzBxI,EAAAA,GAAAA,KAACsY,GAAAA,GAAM,QAGTtY,EAAAA,GAAAA,KAACqX,GAAW,MAIpB,C","sources":["components/UserInfo/UserInfo.styled.js","components/EditProfile/EditProfile.styled.js","components/UpdateAvatar/UpdateAvatar.styled.js","components/UpdateAvatar/UpdateAvatar.jsx","schemas/editProfileSchema.js","components/EditProfile/EditProfile.jsx","components/UserInfo/UserInfo.jsx","redux/boards/boardsSelectors.js","services/sendDataEmail.js","components/SendEmail/SendEmail.styled.js","components/SendEmail/SendEmail.jsx","components/NeedHelp/NeedHelp.styled.js","components/NeedHelp/NeedHelp.jsx","components/SidebarBoardCreation/BoardCreation.styled.js","components/BoardCreatingModal/BoardCreatingModal.styled.js","components/BoardCreatingModal/BoardCreatingModal.jsx","components/SidebarBoardCreation/BoardCreation.jsx","components/BoardItem/BoardItem.styled.js","components/BoardEditModal/BoardEditModal.styled.js","components/BoardEditModal/BoardEditModal.jsx","components/BoardItem/BoardItem.jsx","components/SideBar/SideBar.styled.js","components/SideBar/SideBar.jsx","components/ThemeSwitcher/ThemeSwitcher.styled.js","components/ThemeSwitcher/ThemeSwitcher.jsx","hooks/useClickOutside.js","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/FilterModal/FilterModal.styled.jsx","components/RadioFiltres/RadioFiltres.styled.js","components/RadioFiltres/RadioFiltres.jsx","helpers/capitalizer.js","components/FilterModal/FilterModal.jsx","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/HeaderDashboard/HeaderDashboard.jsx","components/Card/Card.styled.js","components/Calendar/Calendar.js","components/EditCardModal/EditCardModal.styled.js","components/RadioInputs/RadioInputs.styled.js","components/RadioInputs/RadioInputs.jsx","components/EditCardModal/EditCardModal.jsx","components/MoveCardDropdown/MoveCardDropdown.styled.js","components/MoveCardItem/MoveCardItem.styled.js","components/MoveCardItem/MoveCardItem.jsx","components/MoveCardDropdown/MoveCardDropdown.jsx","components/Card/Card.jsx","components/Column/Column.styled.js","components/AddCardModal/AddCardModal.styled.js","components/AddCardModal/AddCardModal.jsx","components/ColumnHead/ColumnHead.styled.js","components/EditColumnFormik/EditColumnFormik.styled.js","components/EditColumnFormik/EditColumnFormik.jsx","components/ColumnHead/ColumnHead.jsx","components/Column/Column.jsx","components/Board/Board.styled.js","components/AddColumnFormik/AddColumnFormik.styled.js","components/AddColumnFormik/AddColumnFormik.jsx","components/Board/Board.jsx","components/ScreensPage/ScreensPage.jsx","components/StartScreen/StartScreen.styled.js","components/StartScreen/StartScreen.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const Name = styled.p`\n  margin: 5px 0;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -2;\n  color: var(--secondaryTextColor);\n`;\n\nexport const Avatar = styled.img`\n  border-radius: 8px;\n  cursor: pointer;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 10px;\n  color: var(--primaryTextColor);\n  background: var(--modalBgColor);\n  border: 0;\n  cursor: pointer;\n`;\n\nexport const ButtonSvg = styled.button`\n  padding: 0;\n  margin: 0;\n  border: 0;\n  border-radius: 8px;\n  background-color: var(--primaryBgColor);\n  cursor: pointer;\n`;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Container = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 100%;\n  height: 440px;\n  border-radius: 8px;\n  background: var(--modalBgColor);\n\n  @media only screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin: 0 0 24px 0;\n  font-family: 'Poppins-Medium';\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledField = styled(Field)`\n  position: relative;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  width: 100%;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  opacity: 0.4;\n  border-radius: 8px;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  background-color: var(--modalBgColor);\n  color: var(--secondaryTextColor);\n  transition: opacity var(--transition);\n\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n`;\n\nexport const LastField = styled(Field)`\n  margin-bottom: 24px;\n  padding: 14px 18px;\n  width: 100%;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  opacity: 0.4;\n  border-radius: 8px;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  background: var(--modalBgColor);\n  color: var(--secondaryTextColor);\n  transition: opacity var(--transition);\n\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  background: var(--accent);\n  border: 0;\n  border-radius: 8px;\n  padding: 14px 126px;\n  color: var(--btnText);\n  font-family: 'Poppins-Medium';\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0, 02em;\n  transition: background-color var(--transition);\n  &:hover,\n  &:focus {\n    background: var(--hover);\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  font-size: 12px;\n  font-style: italic;\n  color: red;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n\nexport const StyledLabel = styled.label`\n  position: relative;\n  display: block;\n\n  svg {\n    position: absolute;\n    top: 16px;\n    right: 15px;\n    opacity: 0, 5;\n\n    &:active {\n      opacity: 1;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ContainerAvatar = styled.div`\n  margin-bottom: 25px;\n  position: relative;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Avatar = styled.img`\n  border-radius: 8px;\n`;\n\nexport const Input = styled.input`\n  opacity: 0;\n  height: 0;\n  width: 0;\n  line-height: 0;\n  overfow: hidden;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 56px;\n  left: 46%;\n\n  width: 24px;\n  height: 24px;\n  background: var(--accent);\n  border-radius: 8px;\n  border: 0;\n  transition: background-color var(--transition);\n\n  &:hover,\n  &:focus {\n    background: var(--hover);\n  }\n\n  @media only screen and (min-width: 768px) {\n    left: 47%;\n  }\n`;\n","import { useRef } from 'react';\nimport { Input, Button, ContainerAvatar, Avatar } from './UpdateAvatar.styled';\n\nimport { useAuth } from 'hooks';\nimport { useDispatch } from 'react-redux';\nimport { updateAvatar } from '../../redux/auth/authOperation';\n\nimport { Icon } from 'components/Icon';\n\nconst cloudinaryBaseURL =\n  'https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707503119/';\n\nexport const UpdateAvatar = () => {\n  const { user } = useAuth();\n  const { showImage } = useAuth();\n\n  const dispatch = useDispatch();\n\n  const filePicker = useRef(null);\n\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n\n    dispatch(updateAvatar(selectedFile));\n  };\n\n  const handlePick = () => {\n    filePicker.current.click();\n  };\n\n  return (\n    <ContainerAvatar>\n      {showImage ? (\n        <Avatar\n          src={cloudinaryBaseURL + user.avatarURL}\n          width=\"68\"\n          height=\"68\"\n          alt=\"user photo\"\n        />\n      ) : (\n        <Icon\n          name=\"user\"\n          fill=\"var(--secondaryBgColor)\"\n          stroke=\"var(--secondaryTextColor)\"\n          width=\"68\"\n          height=\"68\"\n        />\n      )}\n\n      <Button onClick={handlePick}>\n        <Icon name=\"plus\" width=\"10px\" height=\"10px\" stroke=\"#161616\" />\n      </Button>\n      <Input\n        type=\"file\"\n        ref={filePicker}\n        onChange={handleFileChange}\n        accept=\"image/*,.jpg,.png,.gif,.web,\"\n      />\n    </ContainerAvatar>\n  );\n};\n","import * as Yup from 'yup';\n\nexport const EditProfileSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, '2 chars minimum')\n    .max(32, '32 chars maximum')\n    .matches(/^[a-zA-Z0-9!@#$%^&*(),.?\":{}|<>]+$/, 'Invalin name ')\n    .required('this field is required'),\n  email: Yup.string().email('Invalid email').required('this field is required'),\n  password: Yup.string()\n    .min(8, '8 chars minimum')\n    .max(64, '64 chars maximum')\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*(),.?\":{}|<>]+$/,\n      'only latin letters, numbers and symbols'\n    )\n    .matches(/^\\S*$/, 'password must not contain spaces')\n    .required('this field is required '),\n});","import {\n  Container,\n  Title,\n  Button,\n  StyledForm,\n  StyledField,\n  LastField,\n  ErrMsg,\n  StyledLabel,\n  Label,\n} from './EditProfile.styled';\nimport { Formik } from 'formik';\n\nimport { useAuth } from 'hooks';\nimport { update } from '../../redux/auth/authOperation';\nimport { useDispatch } from 'react-redux';\nimport { UpdateAvatar } from 'components/UpdateAvatar';\nimport { Icon } from 'components/Icon';\nimport { EditProfileSchema } from 'schemas/editProfileSchema';\n\nexport const EditProfile = ({ closeModal }) => {\n  const { user } = useAuth();\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <Title>Edit profile</Title>\n      <UpdateAvatar />\n\n      <Formik\n        initialValues={{\n          name: user.name,\n          email: user.email,\n          password: '',\n        }}\n        validationSchema={EditProfileSchema}\n        onSubmit={(values, actions) => {\n          dispatch(update(values));\n          closeModal();\n        }}\n      >\n        <StyledForm>\n          <Label>\n            <StyledField id=\"name\" name=\"name\" />\n            <ErrMsg name=\"name\" component=\"p\" />\n          </Label>\n\n          <Label>\n            <StyledField id=\"email\" name=\"email\" type=\"email\" />\n            <ErrMsg name=\"email\" component=\"p\" />\n          </Label>\n\n          <StyledLabel>\n            <Icon name=\"eye\" stroke=\"var(--secondaryTextColor)\" />\n            <LastField\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Enter or update your password\"\n            />\n            <ErrMsg name=\"password\" component=\"p\" />\n          </StyledLabel>\n\n          <Button type=\"submit\">Submit</Button>\n        </StyledForm>\n      </Formik>\n    </Container>\n  );\n};\n","import { Container, Name, Avatar, Button, ButtonSvg } from './UserInfo.styled';\nimport { EditProfile } from 'components/EditProfile';\nimport { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\n\nimport { useAuth } from 'hooks';\n\nconst cloudinaryBaseURL =\n  'https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707503119/';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    padding: '0',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: ' 0 4px 16px 0 rgba(22, 22, 22, 0.05)',\n    borderRadius: '8px',\n    border: '0',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const UserInfo = () => {\n  const { user } = useAuth();\n  const { showImage } = useAuth();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <Container>\n      <Name>{user.name}</Name>\n        <ButtonSvg onClick={openModal}>\n          {showImage ? (\n            <Avatar\n              src={cloudinaryBaseURL + user.avatarURL}\n              width=\"32\"\n              height=\"32\"\n              alt=\"user photo\"\n              onClick={openModal}\n            />\n          ) : (\n            <Icon\n              name=\"user\"\n              fill=\"var(--primaryBgColor)\"\n              stroke=\"var(--secondaryTextColor)\"\n              width=\"32px\"\n              height=\"32px\"\n            />\n          )}\n        </ButtonSvg>\n\n      <Modal\n        isOpen={isModalOpen}\n        style={customStyles}\n        contentLabel=\"Modal\"\n        onRequestClose={closeModal}\n      >\n        <EditProfile closeModal={closeModal} />\n        <Button onClick={closeModal}>\n          <Icon name=\"close\" stroke=\"var(--secondaryTextColor)\" />\n        </Button>\n      </Modal>\n    </Container>\n  );\n};\n","export const selectBoards = state => state.boards?.boards;\nexport const selectCurrentBoard = state => state.boards?.currentBoard;","import axios from 'axios';\nimport toast from 'react-hot-toast';\n\nexport const sendDataEmail = async data => {\n  try {\n    await axios.post('/support', data);\n    toast.success('Successfully sent!');\n  } catch (error) {\n    toast.error('Oops. Something went wrong.');\n  }\n};\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const ContainerForModal = styled.div`\n  position: relative;\n  padding: 24px 34px 50px 24px;\n  width: 320px;\n  height: 381px;\n\n  background-color: var(--modalBgColor);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.05);\n\n  @media only screen and (min-width: 375px) {\n    width: 345px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 400px;\n    height: 355px;\n    padding: 24px;\n  }\n`;\n\nexport const TitleForModal = styled.h2`\n  margin-bottom: 24px;\n\n  text-align: start;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--textColorcalendar);\n`;\nexport const StyledFormInModal = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledFieldInModal = styled(Field)`\n  position: relative;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  width: 100%;\n\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  resize: none;\n  opacity: 0.4;\n\n  font-size: 14px;\n  line-height: 1.4;\n\n  background: var(--modalBgColor);\n  color: var(--textColorcalendar);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n\n  transition: opacity var(--transition);\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: 19px;\n    width: 100%;\n  }\n  @media only screen and (min-width: 1440px) {\n    margin-bottom: 14px;\n  }\n`;\n\nexport const StyledTextareaInModal = styled(Field)`\n  position: relative;\n  margin-bottom: 24px;\n  padding: 14px 18px;\n  width: 100%;\n\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  resize: none;\n  opacity: 0.4;\n\n  font-size: 14px;\n  height: calc(30px * 4);\n  line-height: 1.5;\n  color: var(--textColorcalendar);\n  background: var(--modalBgColor);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n\n  transition: opacity var(--transition);\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 100%;\n  }\n`;\n\nexport const ButtonForModal = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 49px;\n  width: 100%;\n\n  background-color: var(--accent);\n  border: 0;\n  border-radius: 8px;\n\n  color: var(--btnText);\n  font-size: 14px;\n  line-height: 1.5;\n  cursor: pointer;\n\n  transition: background-color var(--transition);\n\n  &:hover,\n  :focus {\n    background-color: var(--btnBgColorHover);\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 100%;\n  }\n`;\n\nexport const ButtonClose = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  padding: 0;\n  border: none;\n  background: none;\n\n  cursor: pointer;\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  font-size: 12px;\n  font-style: italic;\n  color: red;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { sendDataEmail } from 'services/sendDataEmail';\nimport {\n  ButtonClose,\n  ButtonForModal,\n  ContainerForModal,\n  ErrMsg,\n  Label,\n  StyledFieldInModal,\n  StyledFormInModal,\n  StyledTextareaInModal,\n  TitleForModal,\n} from './SendEmail.styled';\nimport { Icon } from 'components/Icon';\n\nconst initialValues = {\n  emailForSupport: '',\n  textMessage: '',\n};\n\nconst builderSchema = Yup.object().shape({\n  emailForSupport: Yup.string().email().required('This field is required'),\n  textMessage: Yup.string()\n    .min(5, `It's can be up to 5 characters long`)\n    .required(`This field is required`),\n});\n\nexport const SendEmail = ({ onClose }) => {\n  const onSubmit = (data, form) => {\n    sendDataEmail(data);\n    form.resetForm();\n    onClose();\n  };\n\n  return (\n    <ContainerForModal>\n      <TitleForModal>Need help</TitleForModal>\n      <ButtonClose type=\"button\" onClick={onClose}>\n        <Icon\n          stroke=\"var(--textColorcalendar)\"\n          name=\"close\"\n          width=\"18\"\n          height=\"18\"\n        />\n      </ButtonClose>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={builderSchema}\n        onSubmit={onSubmit}\n      >\n        <StyledFormInModal>\n          <Label>\n            <StyledFieldInModal\n              type=\"email\"\n              name=\"emailForSupport\"\n              placeholder=\"Email address\"\n            />\n            <ErrMsg component=\"p\" name=\"emailForSupport\" />\n          </Label>\n\n          <Label>\n            <StyledTextareaInModal\n              rows={4}\n              component=\"textarea\"\n              type=\"text\"\n              name=\"textMessage\"\n              placeholder=\"Comment\"\n            />\n            <ErrMsg component=\"p\" name=\"textMessage\" />\n          </Label>\n\n          <ButtonForModal type=\"submit\">Send</ButtonForModal>\n        </StyledFormInModal>\n      </Formik>\n    </ContainerForModal>\n  );\n};\n","import styled from 'styled-components';\n\nexport const NeedHelpBlock = styled.div`\n  padding: 14px;\n  margin-bottom: 24px;\n  font-size: 12px;\n  border-radius: 8px;\n  background-color: var(--needHelpBg);\n\n  p {\n    margin-top: 14px;\n    margin-bottom: 18px;\n    line-height: 1.33333;\n    letter-spacing: 0;\n  }\n\n  @media only screen and (min-width: 768px) {\n    padding: 20px;\n    p {\n      font-size: 14px;\n    }\n  }\n`;\n\nexport const NeedHelpBtn = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  background: none;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  span {\n    margin-left: 8px;\n    color: var(--primaryTextColor);\n    font-family: 'Poppins-Medium';\n  }\n`;","import { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { SendEmail } from 'components/SendEmail';\nimport { NeedHelpBlock, NeedHelpBtn } from './NeedHelp.styled';\n\nexport const NeedHelp = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <NeedHelpBlock>\n      <picture>\n        <source\n          srcSet=\"\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-1x.webp 1x,\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-2x.webp 2x\n            \"\n        />\n        <img\n          src=\"https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-1x.webp\"\n          width=\"54\"\n          height=\"78\"\n          alt=\"little cute cactus\"\n        />\n      </picture>\n      <p>\n        If you need help with{' '}\n        <span style={{ color: 'var(--accent)' }}>TaskPro</span>, check out our\n        support resources or reach out to our customer support team.\n      </p>\n      <NeedHelpBtn type=\"button\" onClick={openModal}>\n        <Icon\n          name=\"help\"\n          width=\"20\"\n          height=\"20\"\n          stroke=\"var(--primaryTextColor)\"\n        />\n        <span>Need help?</span>\n      </NeedHelpBtn>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        contentLabel=\"Need help modal\"\n        className=\"modal-content\"\n        overlayClassName=\"modal-overlay\"\n      >\n        <SendEmail onClose={closeModal} />\n      </Modal>\n    </NeedHelpBlock>\n  );\n};\n","import styled from 'styled-components';\n\nexport const BoardCreationBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-top: rgba(255, 255, 255, 0.1) solid 1px;\n  border-bottom: rgba(255, 255, 255, 0.1) solid 1px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  margin-bottom: 40px;\n  font-family: 'Poppins-Medium';\n`;\n\nexport const BtnCreate = styled.button`\n  width: 40px;\n  height: 36px;\n  background-color: var(--btnPlus);\n  border: none;\n  border-radius: 6px;\n  transition: var(--transition);\n  cursor: pointer;\n  stroke: var(--btnText);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnPlusHover);\n  }\n`;","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 335px;\n  height: 433px;\n\n  border-radius: 8px;\n\n  background-color: var(--modalBgColor);\n\n  stroke: var(--primaryTextColor);\n\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const ModalTitle = styled.h3`\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Medium';\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--textColorcalendar);\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--textColorcalendar);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const FormWrap = styled(Form)`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const Input = styled(Field)`\n  width: 287px;\n  height: 49px;\n  padding: 14px 0 14px 18px;\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Regular';\n  font-size: 14px;\n\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n\n  color: var(--textColorcalendar);\n  background-color: var(--modalBgColor);\n  opacity: 0.4;\n  transition: opacity var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 14px;\n\n  color: var(--textColorcalendar);\n`;\n\nexport const IconsListWrap = styled.ul`\n  display: flex;\n  gap: 8px;\n\n  margin-bottom: 24px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 0;\n\n  border: none;\n  background-color: inherit;\n\n  width: 18px;\n  height: 18px;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  cursor: pointer;\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:focus,\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const InvisibleInput = styled(Field)`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n\nexport const BackgroundsPallet = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  width: 252px;\n  height: 60px;\n  margin-bottom: 40px;\n`;\n\nexport const LabelPic = styled.label``;\n\nexport const Div = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  transition: transform var(--transition);\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  min-width: 287px;\n  height: 49px;\n\n  padding: 10px 0 11px 0;\n  border: none;\n  /* border: 1px solid black; */\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--btnText);\n  background-color: var(--accent);\n  transition: background-color var(--transition);\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnBgColorHover);\n  }\n`;\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n\n  border-radius: 8px;\n\n  background-color: var(--btnText);\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--plusInBtn);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport { addBoard } from '../../redux/boards/boardsOperations';\nimport { Icon } from 'components/Icon';\nimport * as Yup from 'yup';\nimport {\n  FormWrap,\n  Input,\n  Text,\n  AddBtn,\n  IconWrap,\n  ModalWrap,\n  CloseBtn,\n  ModalTitle,\n  IconsListWrap,\n  InvisibleInput,\n  BackgroundsPallet,\n  Label,\n  LabelPic,\n  Div,\n} from './BoardCreatingModal.styled.js';\n\n\nconst iconsArr = [\n  'four-circles',\n  'star',\n  'loading',\n  'puzzle',\n  'container',\n  'lightning',\n  'colors',\n  'hexagon',\n];\n\nconst backgroundsArr = [\n  'noBack',\n  'miklos',\n  'eberhard',\n  'diego',\n  'vino',\n  'vickholius',\n  'romello',\n  'kace',\n  'milad',\n  'gaetan',\n  'florian',\n  'tony',\n  'nicolas',\n  'gabriella',\n  'igor',\n  'zhou',\n];\n\nconst schema = Yup.object({\n  title: Yup.string().required(),\n  icon: Yup.string().oneOf(iconsArr).required(),\n  background: Yup.string().oneOf(backgroundsArr).required(),\n});\n\nexport const BoardCreatingModal = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const initialValues = {\n    title: '',\n    icon: 'four-circles',\n    background: 'noBack',\n  };\n\n  const onSubmit = async values => {\n    const { payload: { _id } } = await dispatch(addBoard(values));\n    \n    localStorage.setItem('lastBoard', _id);\n    navigate(`/${_id}`);\n    onClose();\n  };\n\n  return (\n    <ModalWrap>\n      <ModalTitle>New board</ModalTitle>\n      <CloseBtn type=\"button\" onClick={onClose}>\n        <Icon name=\"close\" />\n      </CloseBtn>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={onSubmit}\n      >\n        <FormWrap>\n          <Input type=\"text\" placeholder=\"Title\" name=\"title\" />\n          <Text>Icons</Text>\n\n          <IconsListWrap>\n            {iconsArr.map(el => (\n              <li key={el}>\n                <Label>\n                  <Icon name={el} />\n                  <InvisibleInput type=\"radio\" name=\"icon\" value={el} />\n                </Label>\n              </li>\n            ))}\n          </IconsListWrap>\n\n          <Text>Backgrounds</Text>\n          <BackgroundsPallet>\n            {backgroundsArr.map(el => {\n              const srcSetPath = ` https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp 1x,\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_56x56.webp 2x`;\n              const srcDefault = `https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp`;\n              return (\n                <li key={el}>\n                  <LabelPic>\n                    <Div>\n                      <picture>\n                        <source srcSet={srcSetPath} />\n                        <img src={srcDefault} alt=\"background example\" />\n                      </picture>\n                    </Div>\n                    <InvisibleInput type=\"radio\" name=\"background\" value={el} />\n                  </LabelPic>\n                </li>\n              );\n            })}\n          </BackgroundsPallet>\n\n          <AddBtn type=\"submit\">\n            <IconWrap>\n              <Icon name=\"plus\" />\n            </IconWrap>{' '}\n            Create\n          </AddBtn>\n        </FormWrap>\n      </Formik>\n    </ModalWrap>\n  );\n};\n","import { useState } from \"react\";\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { BoardCreationBlock, BtnCreate } from \"./BoardCreation.styled\";\nimport { BoardCreatingModal } from \"components/BoardCreatingModal\";\n\n\nexport const BoardCreation = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <BoardCreationBlock>\n      <p>\n        Create a<br />\n        new board\n      </p>\n      <BtnCreate type=\"button\" onClick={openModal}>\n        <Icon name=\"plus\" width=\"20\" height=\"20\" />\n      </BtnCreate>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        className=\"modal-content\"\n        overlayClassName=\"modal-overlay\"\n        contentLabel=\"Creation board modal\"\n      >\n        <BoardCreatingModal\n          onClose={closeModal}\n          title=\"New board\"\n          btnText=\"Create\"\n        />\n      </Modal>\n    </BoardCreationBlock>\n  );\n};","import styled from 'styled-components';\n\nexport const ControlIconsContainer = styled.div`\n  margin-left: auto;\n  margin-right: 0px;\n  display: none;\n  gap: 8px;\n\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\n\nexport const BoardItemContainer = styled.li`\n  height: 61px;\n  margin: 0 -14px 0 -14px;\n  padding: 0 14px 0 14px;\n  display: flex;\n  align-items: center;\n  stroke: var(--primaryTextColor);\n  opacity: 0.5;\n  transition: var(--transition);\n\n  p {\n    max-width: 120px;\n    margin-left: 8px;\n    font-family: 'Poppins-Medium';\n    font-size: 14px;\n    word-wrap: break-word;\n  }\n\n  ${props =>\n    props.selected &&\n    `\n  opacity: 1;  \n  &:after {\n    content: '';\n    display: block;\n    border-radius: 4px 0 0 4px;\n    width: 4px;\n    height: 61px;\n    margin-right: -14px;\n    margin-left: auto;\n    background-color: var(--borderInThemeModal);\n  }\n`}\n\n  &:hover,\n  &:focus,\n  &.active {\n    background-color: var(--needHelpBg);\n    opacity: 1;\n\n    > ${ControlIconsContainer} {\n      display: flex;\n      opacity: 0.5;\n    }\n\n    &:after {\n      margin-left: 10px;\n    }\n  }\n\n  @media only screen and (min-width: 768px) {\n    margin: 0 -24px 0 -24px;\n    p {\n      max-width: 140px;\n    }\n  }\n`;","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 335px;\n  height: 433px;\n\n  border-radius: 8px;\n\n  background-color: var(--modalBgColor);\n\n  stroke: var(--primaryTextColor);\n\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const ModalTitle = styled.h3`\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Medium';\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--textColorcalendar);\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--textColorcalendar);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const FormWrap = styled(Form)`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const Input = styled(Field)`\n  width: 287px;\n  height: 49px;\n  padding: 14px 0 14px 18px;\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Regular';\n  font-size: 14px;\n\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n\n  color: var(--textColorcalendar);\n  background-color: var(--modalBgColor);\n  opacity: 0.4;\n\n  transition: opacity var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 14px;\n\n  color: var(--textColorcalendar);\n`;\n\nexport const IconsListWrap = styled.ul`\n  display: flex;\n  gap: 8px;\n\n  margin-bottom: 24px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 0;\n\n  border: none;\n  background-color: inherit;\n\n  width: 18px;\n  height: 18px;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  cursor: pointer;\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:focus,\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const InvisibleInput = styled(Field)`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n\nexport const BackgroundsPallet = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  width: 252px;\n  height: 60px;\n  margin-bottom: 40px;\n`;\n\nexport const LabelPic = styled.label``;\n\nexport const Div = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  transition: transform var(--transition);\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  min-width: 287px;\n  height: 49px;\n\n  padding: 10px 0 11px 0;\n  border: none;\n\n  /* border: 1px solid black; */\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--btnText);\n  background-color: var(--accent);\n  transition: background-color var(--transition);\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnBgColorHover);\n  }\n`;\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n\n  border-radius: 8px;\n\n  background-color: var(--btnText);\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--plusInBtn);\n  }\n`;\n","import { Icon } from 'components/Icon';\nimport * as Yup from 'yup';\nimport {\n  FormWrap,\n  Input,\n  Text,\n  AddBtn,\n  IconWrap,\n  ModalWrap,\n  CloseBtn,\n  ModalTitle,\n  IconsListWrap,\n  InvisibleInput,\n  BackgroundsPallet,\n  Label,\n  LabelPic,\n  Div,\n} from './BoardEditModal.styled';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { editBoard } from '../../redux/boards/boardsOperations';\n\nconst iconsArr = [\n  'four-circles',\n  'star',\n  'loading',\n  'puzzle',\n  'container',\n  'lightning',\n  'colors',\n  'hexagon',\n];\n\nconst backgroundsArr = [\n  'noBack',\n  'miklos',\n  'eberhard',\n  'diego',\n  'vino',\n  'vickholius',\n  'romello',\n  'kace',\n  'milad',\n  'gaetan',\n  'florian',\n  'tony',\n  'nicolas',\n  'gabriella',\n  'igor',\n  'zhou',\n];\n\nconst schema = Yup.object({\n  title: Yup.string().required(),\n  icon: Yup.string().oneOf(iconsArr).required(),\n  background: Yup.string().oneOf(backgroundsArr).required(),\n});\n\nexport const BoardEditModal = ({ onClose, board }) => {\n  const dispatch = useDispatch();\n\n  const { _id: boardId, title, icon, background } = board;\n\n  const initialValues = {\n    title,\n    icon,\n    background,\n  };\n\n  const onSubmit = board => {\n    dispatch(editBoard({ boardId, board }));\n    onClose();\n  };\n  return (\n    <ModalWrap>\n      <ModalTitle>Edit board</ModalTitle>\n      <CloseBtn type=\"button\" onClick={onClose}>\n        <Icon name=\"close\" />\n      </CloseBtn>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={onSubmit}\n      >\n        <FormWrap>\n          <Input type=\"text\" placeholder=\"Title\" name=\"title\" />\n          <Text>Icons</Text>\n\n          <IconsListWrap>\n            {iconsArr.map(el => (\n              <li key={el}>\n                <Label>\n                  <Icon name={el} />\n                  <InvisibleInput type=\"radio\" name=\"icon\" value={el} />\n                </Label>\n              </li>\n            ))}\n          </IconsListWrap>\n\n          <Text>Backgrounds</Text>\n          <BackgroundsPallet>\n            {backgroundsArr.map(el => {\n              const srcSetPath = ` https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp 1x,\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_56x56.webp 2x`;\n              const srcDefault = `https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp`;\n              return (\n                <li key={el}>\n                  <LabelPic>\n                    <Div>\n                      <picture>\n                        <source srcSet={srcSetPath} />\n                        <img src={srcDefault} alt=\"background example\" />\n                      </picture>\n                    </Div>\n                    <InvisibleInput type=\"radio\" name=\"background\" value={el} />\n                  </LabelPic>\n                </li>\n              );\n            })}\n          </BackgroundsPallet>\n\n          <AddBtn type=\"submit\">\n            <IconWrap>\n              <Icon name=\"plus\" />\n            </IconWrap>{' '}\n            Edit\n          </AddBtn>\n        </FormWrap>\n      </Formik>\n    </ModalWrap>\n  );\n};\n","import { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { BoardItemContainer, ControlIconsContainer } from './BoardItem.styled';\nimport { BoardEditModal } from 'components/BoardEditModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteBoard } from '../../redux/boards/boardsOperations';\nimport { selectBoards, selectCurrentBoard } from '../../redux/boards/boardsSelectors';\nimport { useNavigate } from 'react-router-dom';\n\nexport const BoardItem = ({ board, isActive }) => {\n  const dispatch = useDispatch();\n  const currentBoard = useSelector(selectCurrentBoard);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const navigate = useNavigate();\n  const boards = useSelector(selectBoards);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleSelectBoard = (event, boardId) => {\n    if (event.target.tagName === 'BUTTON' || event.target.closest('button')) {\n      return;\n    }\n\n    navigate(`/${boardId}`);\n    localStorage.setItem('lastBoard', boardId);\n  };\n\n  const handleDelete = boardId => {\n    dispatch(deleteBoard(boardId));\n    const filteredBoards = boards.filter(board => board._id !== boardId);\n    localStorage.removeItem('lastBoard');\n\n    if (filteredBoards.length === 0) {\n      navigate(`/`);\n      return;\n    }\n\n    const lastBoardObj = filteredBoards[filteredBoards.length - 1];\n\n    navigate(`/${lastBoardObj._id}`);\n  };\n\n  return (\n    <BoardItemContainer\n      className={isActive ? 'active' : ''}\n      onClick={event => handleSelectBoard(event, board._id)}\n      selected={currentBoard && currentBoard._id === board._id}\n    >\n      <Icon name={board.icon} width=\"18\" height=\"18\" style={{ opacity: 0.5 }} />\n      <p>{board.title}</p>\n      <ControlIconsContainer>\n        <button type=\"button\" style={{ cursor: 'pointer' }} onClick={openModal}>\n          <Icon name=\"pencil\" width=\"16\" height=\"16\" />\n        </button>\n        <button\n          type=\"button\"\n          style={{ cursor: 'pointer' }}\n          onClick={() => handleDelete(board._id)}\n        >\n          <Icon name=\"trash\" width=\"16\" height=\"16\" />\n        </button>\n      </ControlIconsContainer>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        className=\"modal-content\"\n        overlayClassName=\"modal-overlay\"\n        contentLabel=\"Edition board modal\"\n      >\n        <BoardEditModal onClose={closeModal} board={board} />\n      </Modal>\n    </BoardItemContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SidebarStylesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 225px;\n  padding: 14px;\n  color: var(--primaryTextColor);\n\n  @media only screen and (min-width: 768px) {\n    width: 260px;\n    padding: 24px;\n  }\n\n  /* @media (max-width: 1439px) {\n    display: none;\n  } */\n`;\n\nexport const Logo = styled.div`\n  font-family: 'Poppins-SemiBold';\n  font-size: 16px;\n  letter-spacing: -0.04em;\n  display: flex;\n  column-gap: 8px;\n  align-items: center;\n  margin-bottom: 70px;\n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: 60px;\n  }\n`;\n\nexport const BoardContainer = styled.div`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n\n  h3 {\n    margin-bottom: 8px;\n    font-size: 12px;\n    font-family: 'Poppins-Regular';\n    opacity: 50%;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 8px;\n  font-size: 12px;\n  opacity: 50%;\n`;\n\nexport const BoardList = styled.ul`\n  margin-bottom: 40px;\n  font-family: 'Poppins-Medium';\n`;\n\nexport const LogOut = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  background: none;\n  display: flex;\n  align-items: center;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  stroke: var(--borderInThemeModal);\n  transition: var(--transition);\n  cursor: pointer;\n\n  p {\n    margin-left: 14px;\n    color: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    stroke: var(--hover);\n  }\n\n  @media only screen and (min-width: 1440px) {\n    font-size: 16px;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectBoards } from '../../redux/boards/boardsSelectors.js';\nimport { fetchBoards } from '../../redux/boards/boardsOperations.js';\nimport { logOut } from '../../redux/auth/authOperation.js';\nimport { NeedHelp } from 'components/NeedHelp';\nimport { BoardCreation } from 'components/SidebarBoardCreation';\nimport { clearCurrentBoard } from '../../redux/boards/boardsSlice';\nimport { BoardItem } from 'components/BoardItem';\nimport { Icon } from 'components/Icon';\nimport { SidebarStylesWrapper, Logo, BoardContainer, BoardList, LogOut, Title } from './SideBar.styled';\nimport { useParams } from 'react-router-dom';\n\nexport const Sidebar = () => {\n  const dispatch = useDispatch();\n  const boards = useSelector(selectBoards);\n  const {boardId} = useParams();\n\n  useEffect(() => {\n    dispatch(fetchBoards());\n  }, [dispatch]);\n\n  const handleLogOut = () => {\n    dispatch(logOut());\n    localStorage.removeItem('lastBoard');\n    dispatch(clearCurrentBoard());\n  };\n\n  return (\n    <SidebarStylesWrapper>\n      <div>\n        <Logo>\n          <Icon name=\"logo\" width=\"32\" height=\"32\" />\n          <h1>TaskPro</h1>\n        </Logo>\n        <BoardContainer>\n          <Title>My boards</Title>\n          <BoardCreation />\n          <BoardList>\n            {boards.map(board => (\n              <BoardItem\n                key={board._id}\n                board={board}\n                isActive={boardId === board._id}\n              />\n            ))}\n          </BoardList>\n        </BoardContainer>\n      </div>\n      <div>\n        <NeedHelp />\n        <LogOut type=\"button\" onClick={handleLogOut}>\n          <Icon name=\"login\" width=\"32\" height=\"32\" />\n          <p>Log out</p>\n        </LogOut>\n      </div>\n    </SidebarStylesWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const DrpdwnBtn = styled.button`\n  position: relative;\n  display: flex;\n  gap: 4px;\n  background: none;\n  border: none;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  opacity: var(--secondaryOpacity);\n`;\n\nexport const ThemesList = styled.ul`\n  position: absolute;\n  top: 65%;\n  right: 52%;\n  padding: 18px 44px 18px 18px;\n  border: 1px solid var(--borderInThemeModal);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(17, 17, 17, 0.1);\n  background-color: var(--modalBgColor);\n  visibility: ${({ visibility }) => visibility};\n  opacity: ${({ opacity }) => opacity};\n  transform: ${({ transform }) => transform};\n  transition: 0.3s;\n`;\n\nexport const ThemeItem = styled.li`\n  font-family: 'Poppins-Regular';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  opacity: var(--opacityInThemeModal);\n  cursor: pointer;\n  &:hover,\n  :focus {\n    color: var(--accent);\n  }\n  &:not(:last-child) {\n    margin-bottom: 4px;\n  }\n`;\n","import { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeTheme } from '../../redux/auth/authOperation';\n\nimport { useClickOutside } from 'hooks/useClickOutside';\nimport { Icon } from 'components/Icon';\nimport { DrpdwnBtn, ThemesList, ThemeItem } from './ThemeSwitcher.styled';\n\nexport const ThemeSwitcher = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const menuRef = useRef(null);\n  const dispatch = useDispatch();\n\n  const visibility = isOpen ? 'visible' : 'hidden';\n  const opacity = isOpen ? '1' : '0';\n  const transform = isOpen ? 'translateY(10px)' : 'translateY(0)';\n\n  useClickOutside(menuRef, () => {\n    if (isOpen) {\n      setTimeout(() => setIsOpen(false), 50);\n    }\n  });\n\n  return (\n    <div ref={menuRef}>\n      <DrpdwnBtn type=\"button\" onClick={() => setIsOpen(!isOpen)}>\n        Theme\n        <Icon\n          name=\"chevron-down\"\n          width=\"16\"\n          heigth=\"16\"\n          stroke=\"var(--secondaryTextColor)\"\n        />\n      </DrpdwnBtn>\n      <ThemesList\n        visibility={visibility}\n        opacity={opacity}\n        transform={transform}\n      >\n        <ThemeItem onClick={() => dispatch(changeTheme({ theme: 'light' }))}>\n          Light\n        </ThemeItem>\n        <ThemeItem onClick={() => dispatch(changeTheme({ theme: 'dark' }))}>\n          Dark\n        </ThemeItem>\n        <ThemeItem onClick={() => dispatch(changeTheme({ theme: 'violet' }))}>\n          Violet\n        </ThemeItem>\n      </ThemesList>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\n\nexport const useClickOutside = (ref, callback) => {\n  const handleClick = evnt => {\n    if (ref.current && !ref.current.contains(evnt.target)) {\n      callback();\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClick);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    };\n  });\n};\n","import styled from 'styled-components';\n\nexport const HeaderStyled = styled.header`\n  position: relative;\n\n  max-width: 375px;\n  display: flex;\n  justify-content: space-between;\n\n  background-color: var(--headerBgColor);\n\n  padding: 14px 20px;\n\n  @media (min-width: 768px) {\n    max-width: 768px;\n    padding: 18px 32px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 1180px;\n    justify-content: flex-end;\n    padding: 18px 24px;\n  }\n`;\n\nexport const MenuBtn = styled.button`\n  border: none;\n  background-color: inherit;\n\n  svg {\n    width: 24px;\n    height: 24px;\n\n    @media (min-width: 768px) {\n      width: 32px;\n      height: 32px;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const HeaderWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: baseline;\n  gap: 14px;\n`;\n\nexport const customStylesForModal = {\n  content: {\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    right: 'auto',\n    bottom: 'auto',\n    padding: '0',\n    border: 'none',\n    background: 'var(--primaryBgColor)',\n  },\n  overlay: {\n    position: 'fixed',\n    top: '0',\n    left: '0',\n    width: '100%',\n    height: '100vh',\n    background: 'rgba(0,0,0,0.5)',\n  },\n};","import { UserInfo } from 'components/UserInfo';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { Sidebar } from 'components/SideBar';\nimport { ThemeSwitcher } from 'components/ThemeSwitcher';\nimport { Icon } from 'components/Icon';\nimport {\n  HeaderStyled,\n  HeaderWrapper,\n  MenuBtn,\n  customStylesForModal,\n} from './Header.styled';\n\nexport const Header = () => {\n  const [isMenuOpen, setIsOpenMenu] = useState(false);\n\n  const openMenu = () => {\n    setIsOpenMenu(true);\n  };\n\n  const closeMenu = () => {\n    setIsOpenMenu(false);\n  };\n\n  return (\n    <HeaderStyled>\n      <MenuBtn type=\"button\" onClick={openMenu}>\n        <Icon name=\"menu\" stroke=\"var(--secondaryTextColor)\" />\n      </MenuBtn>\n\n      <HeaderWrapper>\n        <ThemeSwitcher />\n        <UserInfo />\n      </HeaderWrapper>\n      <Modal\n        isOpen={isMenuOpen}\n        onRequestClose={closeMenu}\n        style={customStylesForModal}\n        contentLabel=\"Sidebar\"\n      >\n        <Sidebar />\n      </Modal>\n    </HeaderStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 300px;\n  height: 234px;\n\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.05);\n  background: var(--modalBgColor);\n`;\n\nexport const FiltersTytle = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  margin-bottom: 28px;\n  color: var(--primaryTextColor);\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const LabelName = styled.p`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  margin-bottom: 14px;\n  display: flex;\njustify-content: space-between;\nalign-items: center;\n  /* margin-left: 24px; */\n  color: var(--primaryTextColor);\n`;","import styled from 'styled-components';\n\nexport const FiltersWrap = styled.div`\n  position: relative;\n  display: flex;\n  gap: 119px;\n  margin-bottom: 14px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: -14px;\n    left: 0;\n    width: 252px;\n    height: 1px;\n    background-color: var(--cardsLine);\n  }\n`;\n\nexport const FilterLabel = styled.p`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n`;\n\nexport const ShowAllBtn = styled.button`\n  border: none;\n  background-color: inherit;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  text-decoration: underline;\n  color: var(--secondaryTextColor);\n  opacity: 0.5;\n  cursor: pointer;\n`;\n\nexport const StyledRadioGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const RadioLabel = styled.label`\n  display: flex;\n  border-radius: 50%;\n  width: 14px;\n  height: 14px;\n  background-color: var(--priority-${({ $priority }) => $priority});\n  transition: var(--transition);\n  cursor: pointer;\n  position: relative;\n\n  > input {\n    display: none;\n  }\n\n  &.checked {\n    &::after {\n      content: '';\n      position: absolute;\n      width: 8px;\n      height: 8px;\n      top: 21%;\n      left: 22%;\n      border-radius: 50%;\n      border: 2px solid var(--primaryBgColor);\n    }\n  }\n`;\n\nexport const FiltersSpan = styled.span`\n  margin-left: 22px;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  opacity: 0.5;\n`;\n","import { nanoid } from '@reduxjs/toolkit';\nimport { useSearchParams } from 'react-router-dom';\nimport { capitalizer } from 'helpers/capitalizer';\nimport {\n  FiltersWrap,\n  FilterLabel,\n  RadioLabel,\n  StyledRadioGroup,\n  ShowAllBtn,\n  FiltersSpan,\n} from './RadioFiltres.styled';\n\nexport const RadioFilters = () => {\n  const listParams = ['without', 'low', 'medium', 'high'];\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currValue = searchParams.get('priority');\n\n  const handleFilter = ({ target: { value } }) => {\n    setSearchParams({ priority: value });\n  };\n\n  const handleShowAll = () => {\n    setSearchParams({});\n  };\n\n  return (\n    <>\n      <FiltersWrap>\n        <FilterLabel>Label color</FilterLabel>\n        <ShowAllBtn type=\"button\" onClick={handleShowAll}>\n          Show all\n        </ShowAllBtn>\n      </FiltersWrap>\n      <StyledRadioGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n        {listParams.map(item => {\n          const text = capitalizer(item);\n          return (\n            <RadioLabel\n              key={nanoid()}\n              $priority={item}\n              className={currValue === item ? 'checked' : ''}\n            >\n              <input\n                type=\"radio\"\n                name=\"priority\"\n                value={item}\n                checked={currValue === item}\n                onChange={handleFilter}\n              />\n              <FiltersSpan>{text}</FiltersSpan>\n            </RadioLabel>\n          );\n        })}\n      </StyledRadioGroup>\n    </>\n  );\n};\n","export const capitalizer = str => {\n  const text = str === 'without' ? `${str} priority` : str;\n  return text.charAt(0).toUpperCase() + text.slice(1);  \n};\n","import {\n  FiltersTytle,\n  ModalWrap,\n  CloseBtn,\n} from './FilterModal.styled';\n\nimport { Icon } from 'components/Icon';\nimport { RadioFilters } from 'components/RadioFiltres';\n\nexport const FilterModal = ({ closeModal }) => {\n  return (\n    <ModalWrap>\n      <FiltersTytle>Filters</FiltersTytle>\n      <CloseBtn type=\"button\" onClick={closeModal}>\n        <Icon name=\"close\" />\n      </CloseBtn>\n      <RadioFilters/>\n    </ModalWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 14px 0px;\n  margin-bottom: 26px;\n\n  @media (min-width: 768px) {\n    padding: 26px 0px;\n  }\n\n  @media (min-width: 1440px) {\n    padding: 10px 0px;\n  }\n`;\n\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0 4px 16px 0 rgba(22, 22, 22, 0.05)',\n    padding: 0,\n    border: 'none',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const BoardTitle = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--primaryTextColor);\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const FilterBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  font-family: 'Poppins-Medium';\n\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  border: none;\n\n  color: var(--secondaryTextColor);\n  background-color: inherit;\n  filter: drop-shadow(0 0 3px var(--primaryBgColor));\n\n  stroke: var(--secondaryTextColor);\n  transition: opacity var(--transition);\n  > svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: var(--accent);\n    stroke: var(--accent);\n  }\n`;\n","import { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { FilterModal } from 'components/FilterModal';\nimport {\n  FilterBtn,\n  BoardTitle,\n  Wrap,\n  customStyles,\n} from './HeaderDashboard.styled';\n\nexport const HeaderDashboard = ({ boardTitle }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <Wrap>\n      {boardTitle && <BoardTitle>{boardTitle}</BoardTitle>}\n      <FilterBtn type=\"button\" onClick={openModal}>\n        <Icon name=\"filter\" />\n        Filters{' '}\n      </FilterBtn>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Filters Modal\"\n      >\n        <FilterModal closeModal={closeModal} />\n      </Modal>\n    </Wrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const CardBody = styled.li`\n  border-radius: 8px;\n  width: 335px; // змінити на /* width: 100%; */ коли стане у колонкуи\n  height: 154px;\n  background-color: var(--extraBgColor);\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  position: relative;\n  padding: 14px 20px 14px 24px;\n`;\nexport const CardColor = styled.div`\n  position: absolute;\n  border-radius: 4px 0 0 4px;\n  width: 4px;\n  height: 154px;\n  top: 0px;\n  left: 0px;\n  background-color: var(--priority-${({ $priority }) => $priority});\n`;\nexport const CardTitle = styled.h4`\n  text-align: left;\n  font-family: 'Poppins-SemiBold';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--textColorcalendar);\n  margin-bottom: 8px;\n`;\nexport const CardDescription = styled.p`\n  text-align: left;\n  font-size: 12px;\n  line-height: 1.33333;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  width: 290px;\n  height: 38px;\n  overflow: hidden; /* скрывает текст, который не помещается в контейнер */\n  text-overflow: ellipsis; /* отображает многоточие для обрезанного текста */\n  margin-bottom: 14px;\n`;\n\nexport const CardSolid = styled.div`\n  border: 1px solid var(--cards-line);\n  margin-bottom: 14px;\n`;\n\nexport const CardDetals = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const CardInformation = styled.div`\n  display: flex;\n`;\n\nexport const Priority = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 14px;\n`;\n\nexport const PriorityDetals = styled.div`\n  display: flex;\n`;\n\nexport const PriorityTitle = styled.p`\n  text-align: left;\n  font-size: 8px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\nexport const PriorityColor = styled.div`\n  border-radius: 100%;\n  width: 12px;\n  height: 12px;\n  margin-right: 4px;\n  background-color: var(--priority-${({ $priority }) => $priority});\n`;\n\nexport const PriorityTipe = styled.p`\n  font-size: 10px;\n  letter-spacing: -0.02em;\n  color: var(--textColorcalendar);\n  &:first-letter {\n    text-transform: uppercase;\n}\n`;\n\nexport const Deadline = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 14px;\n`;\n\nexport const DeadlineTitle = styled.p`\n  text-align: left;\n  font-size: 8px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\n\nexport const DeadlineDate = styled.p`\n  text-align: left;\n  font-size: 10px;\n  letter-spacing: -0.02em;\n  color: var(--textColorcalendar);\n`;\nexport const CardButtons = styled.div`\n  display: flex;\n  gap: 8px;\n  stroke: var(--secondaryTextColor); //не змінюється в темах\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\nexport const Bell = styled.button`\n  stroke: var(--accent); //не змінюється в темах\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  transition: var(--transition);\n  stroke: var(--secondaryTextColor);\n  &:is(:hover, :focus) {\n    stroke: var(--accent);\n  }\n`;\n","import DatePicker from 'react-datepicker';\nimport { enGB } from 'date-fns/locale';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'components/Calendar/Calendar.css';\n\nexport function Calendar({ selectedDate, onDateChange }) {\n  const handleDateChange = date => {\n    onDateChange(date);\n  };\n\n  return (\n    <DatePicker\n      selected={selectedDate}\n      onChange={handleDateChange}\n      dateFormat=\"MMMM d\"\n      minDate={new Date()}\n      locale={enGB}\n      weekStartsOn={1}\n    />\n  );\n}\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Container = styled.div`\n  border-radius: 8px;\n  height: 522px;\n  position: relative;\n  padding: 24px;\n  width: 100%;\n  background: var(--modalBgColor);\n\n  @media only screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const TitleModal = styled.h2`\n  margin-bottom: 24px;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  line-height: 1.5;\n  color: var(--textColorcalendar);\n`;\n\nexport const CloseModal = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  cursor: pointer;\n\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  color: red;\n  font-size: 12px;\n`;\n\nexport const TitleCard = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 14px;\n\n  background-color: var(--modalBgColor);\n  color: var(--textColorcalendar);\n\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n\nexport const StyledDescription = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  padding-top: 14px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 154px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 24px;\n\n  resize: none;\n\n  color: var(--textColorcalendar);\n  background: var(--modalBgColor);\n\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const LabelColorStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--textCalendar);\n  margin-bottom: 4px;\n`;\n\nexport const StyleRadioButton = styled.div`\n  height: 18px;\n  display: flex;\n  gap: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const DeadlineStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\n\nexport const AddButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  background: var(--accent);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnBgColorHover);\n  }\n  cursor: pointer;\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: var(--btnText);\n  margin-right: 8px;\n  stroke: var(--plusInBtn);\n`;\n\nexport const AddCardButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 335px;\n  height: 56px;\n  background: var(--btnPlus);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Span = styled.span`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--accent);\n`;\n","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const StyledRadioGroup = styled.div`\n  height: 18px;\n  display: flex;\n  gap: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const RadioButton = styled(Field)`\n  display: none;\n`;\n\nexport const RadioLabel = styled.label`\n  border-radius: 50%;\n  width: 14px;\n  height: 14px;\n  background-color: var(--priority-${({ $priority }) => $priority});\n  transition: var(--transition);\n  cursor: pointer;\n  box-sizing: border-box;\n  position: relative;\n\n  &.checked {\n    &::after {\n      content: '';\n      position: absolute;\n      width: 12px;\n      height: 12px;\n      top: 1px;\n      left: 1px;\n      border-radius: 50%;\n      border: 2px solid var(--extraBgColor);\n    }\n  }\n`;\n","import { nanoid } from '@reduxjs/toolkit';\nimport {\n  RadioButton,\n  RadioLabel,\n  StyledRadioGroup,\n} from './RadioInputs.styled';\nimport { useState } from 'react';\n\nexport const RadioInputs = ({ defaultChecked, onPriorityChange }) => {\n  const list = ['low', 'medium', 'high', 'without'];\n  const [currValue, setCurrValue] = useState(defaultChecked);\n\n  const handleInput = ({ target: { value } }) => {\n    onPriorityChange(value);\n    setCurrValue(value);\n  };\n\n  return (\n    <StyledRadioGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n      {list.map(item => (\n        <RadioLabel\n          key={nanoid()}\n          $priority={item}\n          className={currValue === item ? 'checked' : ''}\n        >\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value={item}\n            checked={currValue === item}\n            onChange={handleInput}\n          />\n        </RadioLabel>\n      ))}\n    </StyledRadioGroup>\n  );\n};\n","import { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Calendar } from 'components/Calendar';\nimport { Icon } from 'components/Icon';\n\nimport {\n  Container,\n  TitleModal,\n  StyledDescription,\n  CloseModal,\n  TitleCard,\n  LabelColorStyle,\n  DeadlineStyle,\n  AddButton,\n  StylePlus,\n  StyledForm,\n  ErrMsg,\n  Label,\n  Span,\n} from './EditCardModal.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { editCard } from '../../redux/cards/cardsOperations.js';\nimport { RadioInputs } from 'components/RadioInputs/RadioInputs.jsx';\n\nconst priority = ['without', 'low', 'medium', 'high'];\n\nconst formCardSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(3, `It's can be up to 3 characters long`)\n    .max(100, 'Too Long!')\n    .required(`This field is required.`),\n  text: Yup.string()\n    .min(10, `It's can be up to 10 characters long`)\n    .max(500, 'Too Long!')\n    .required(`This field is required.`),\n  priority: Yup.string().oneOf(priority),\n  deadline: Yup.date(),\n});\n\nexport default function EditCardModal({ card, onClose }) {\n  const { _id: cardId, title, text, deadline, priority } = card;\n  const [selectedDate, setSelectedDate] = useState(deadline);\n  const dispatch = useDispatch();\n\n  const onSubmit = values => {\n    dispatch(editCard({ values, cardId }));\n    onClose();\n  };\n\n  return (\n    <Container>\n      <TitleModal>Edit card</TitleModal>\n      <CloseModal>\n        <button type=\"button\" onClick={onClose}>\n          <Icon\n            name=\"close\"\n            width=\"18\"\n            height=\"18\"\n            stroke=\"var(--primaryTextColor)\"\n          />\n        </button>\n      </CloseModal>\n      <Formik\n        initialValues={{\n          title,\n          text,\n          priority,\n          deadline: selectedDate,\n        }}\n        validationSchema={formCardSchema}\n        onSubmit={onSubmit}\n      >\n        {({ handleSubmit, setFieldValue }) => (\n          <StyledForm onSubmit={handleSubmit}>\n            <TitleCard type=\"text\" name=\"title\" placeholder=\"Title\" />\n            <ErrMsg component=\"p\" name=\"title\" />\n            <Label>\n              <StyledDescription\n                rows={4}\n                component=\"textarea\"\n                name=\"text\"\n                placeholder=\"Description\"\n              />\n              <ErrMsg component=\"p\" name=\"text\" />\n            </Label>\n            <LabelColorStyle id=\"colorCard-radio-group\">\n              Label color\n            </LabelColorStyle>\n            <RadioInputs\n              defaultChecked={priority}\n              onPriorityChange={priority => {\n                setFieldValue('priority', priority);\n              }}\n            />\n            <DeadlineStyle>Deadline</DeadlineStyle>\n            <div>\n              <Span> Today,</Span>\n              <Calendar\n                selectedDate={selectedDate}\n                onDateChange={date => {\n                  setSelectedDate(date);\n                  setFieldValue('deadline', date);\n                }}\n              />\n            </div>\n            <AddButton type=\"submit\">\n              <StylePlus>\n                <Icon name=\"plus\" width=\"14\" height=\"14\" />\n              </StylePlus>\n              <p>Edit</p>\n            </AddButton>\n          </StyledForm>\n        )}\n      </Formik>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const MoveList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border-radius: 8px;\n  background-color: var(--secondaryBgColor);\n  padding: 10px;\n`;\n","import styled from 'styled-components';\n\nexport const MoveCardItemStyled = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 18px;\n  &.current {\n    color: var(--accent);\n\n    &button {\n      pointer-events: none;\n    }\n    &.current svg {\n      stroke: var(--accent);\n    }\n  }\n\n  svg {\n    &.current {\n      stroke: var(--accent);\n    }\n  }\n`;\n\nexport const MoveCardItemButtonStyled = styled.button`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  cursor: pointer;\n`;\n","import { useDispatch } from 'react-redux';\nimport {\n  MoveCardItemButtonStyled,\n  MoveCardItemStyled,\n} from './MoveCardItem.styled';\nimport { chengeColumnsCard } from '../../redux/cards/cardsOperations';\nimport { Icon } from 'components/Icon';\n\nexport const MoveCardItem = ({ column, cardId, currentId }) => {\n  const dispatch = useDispatch();\n  const { _id, title } = column;\n  const current = _id === currentId ? 'current' : '';\n\n  const handleMoveCard = () => {\n    dispatch(chengeColumnsCard({ cardId, toColumnId: _id }));\n  };\n  return (\n    <MoveCardItemStyled className={current}>\n      <MoveCardItemButtonStyled onClick={handleMoveCard}>\n        {title}\n      </MoveCardItemButtonStyled>\n      <Icon\n        name=\"arrow-in-circle\"\n        width=\"16px\"\n        height=\"16px\"\n        stroke=\"var(--secondaryTextColor)\"\n      />\n    </MoveCardItemStyled>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { MoveList } from './MoveCardDropdown.styled';\nimport { MoveCardItem } from 'components/MoveCardItem/MoveCardItem';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport const MoveCardDropdown = ({ currColumnId, cardId }) => {\n  const { columns } = useSelector(state => state.columns);\n  \n\n  return (\n    <MoveList>\n      {columns.map(item => {\n        return (\n          <MoveCardItem\n            currentId={currColumnId}\n            key={nanoid()}\n            column={item}\n            cardId={cardId}\n          />\n        );\n      })}\n    </MoveList>\n  );\n};\n","import { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\n\nimport {\n  CardBody,\n  CardDetals,\n  Priority,\n  PriorityDetals,\n  CardColor,\n  CardTitle,\n  CardDescription,\n  CardSolid,\n  PriorityTitle,\n  PriorityTipe,\n  PriorityColor,\n  Deadline,\n  DeadlineTitle,\n  DeadlineDate,\n  CardButtons,\n  CardInformation,\n  Bell,\n  Button,\n} from './Card.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteCard } from '../../redux/cards/cardsOperations';\nimport EditCardModal from 'components/EditCardModal/EditCardModal';\nimport { MoveCardDropdown } from 'components/MoveCardDropdown/MoveCardDropdown';\n\nexport default function Card({ card }) {\n  const [modalCardIsOpen, setmodalCardIsOpen] = useState(false);\n  const [isOpenMoveCardModal, setIsOpenMoveCardModal] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    _id: cardId,\n    title,\n    text,\n    deadline,\n    priority,\n    column: { _id: columnId },\n  } = card;\n  const dateDeadline = new Date(deadline);\n  const formatedDate = `${dateDeadline.getUTCDate()}/${(\n    dateDeadline.getUTCMonth() + 1\n  )\n    .toString()\n    .padStart(2, '0')}/${dateDeadline.getFullYear()}`;\n  const cardTextDescription = text.substring(0, 90) + '...';\n\n  const openCardModal = () => {\n    setmodalCardIsOpen(true);\n  };\n\n  const closeCardModal = () => {\n    setmodalCardIsOpen(false);\n  };\n\n  const handleDeleteCard = () => {\n    dispatch(deleteCard({ cardId }));\n  };\n\n  const hendleMoveCardModalOpen = () => {\n    setIsOpenMoveCardModal(true);\n  };\n\n  const hendleMoveCardModalClose = () => {\n    setIsOpenMoveCardModal(false);\n  };\n\n  return (\n    <CardBody>\n      <CardColor $priority={priority}></CardColor>\n      <CardTitle>{title}</CardTitle>\n      <CardDescription>{cardTextDescription}</CardDescription>\n      <CardSolid></CardSolid>\n      <CardDetals>\n        <CardInformation>\n          <Priority>\n            <PriorityTitle>Priority</PriorityTitle>\n            <PriorityDetals>\n              <PriorityColor $priority={priority}></PriorityColor>\n              <PriorityTipe>{priority}</PriorityTipe>\n            </PriorityDetals>\n          </Priority>\n          <Deadline>\n            <DeadlineTitle>Deadline</DeadlineTitle>\n            <DeadlineDate>{formatedDate}</DeadlineDate>\n          </Deadline>\n        </CardInformation>\n        <CardButtons>\n          <Bell type=\"button\">\n            <Icon name=\"bell\" width=\"16\" height=\"16\" />\n          </Bell>\n          <Button type=\"button\" onClick={hendleMoveCardModalOpen}>\n            <Icon name=\"arrow-in-circle\" width=\"16\" height=\"16\" />\n          </Button>\n          <Button type=\"button\" onClick={openCardModal}>\n            <Icon name=\"pencil\" width=\"16\" height=\"16\" />\n          </Button>\n          <Button type=\"button\" onClick={handleDeleteCard}>\n            <Icon name=\"trash\" width=\"16\" height=\"16\" />\n          </Button>\n        </CardButtons>\n      </CardDetals>\n      <Modal\n        isOpen={modalCardIsOpen}\n        onRequestClose={closeCardModal}\n        className={'modal-content'}\n        overlayClassName={'modal-overlay'}\n      >\n        <EditCardModal card={card} onClose={closeCardModal} />\n      </Modal>\n      <Modal\n        isOpen={isOpenMoveCardModal}\n        onRequestClose={hendleMoveCardModalClose}\n        className={'modal-content'}\n        overlayClassName={'modal-overlay'}\n      >\n        <MoveCardDropdown currColumnId={columnId} cardId={cardId} />\n      </Modal>\n    </CardBody>\n  );\n}\n","import styled from 'styled-components';\n\nexport const HeadWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 335px;\n  height: 56px;\n\n  padding: 17px 20px;\n\n  border-radius: 8px;\n\n  background-color: var(--extraBgColor);\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const CardList = styled.ul`\n  > li:not(:last-of-type) {\n    margin-bottom: 10px;\n  }\n  border-radius: 12px;\n\n  @media (min-width: 768px) {\n  }\n\n  @media (min-width: 1440px) {\n  }\n\n  overflow: auto;\n  padding: 0;\n\n  &::-webkit-scrollbar {\n    width: 8px; /* ширина скролбару */\n  }\n\n  &::-webkit-scrollbar-track {\n    background: var(--scroll-col); /* колір фону всієї доріжки скролбару */\n    border-radius: 12px; // заокруглення доріжки скролу\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: var(--scroll-col-bg); // колір самого скролу\n    border-radius: 12px; /* заокруглення самого скролу */\n\n    &:hover {\n      background-color: var(\n        --scroll-col-bg-hover\n      ); // колір самого скролу при наведенні\n    }\n  }\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const IconedBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  border: none;\n  background-color: inherit;\n\n  stroke: var(--secondaryTextColor);\n  transition: opacity var(--transition);\n\n  > svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    stroke: var(--accent);\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  width: 335px;\n  height: 56px;\n\n  padding: 10px 0 11px 0;\n\n  border: none;\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--btnText);\n  background-color: var(--btnBgColor);\n  transition: background-color var(--transition);\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnBgColorHover);\n  }\n`;\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n\n  border-radius: 8px;\n\n  background-color: var(--btnText);\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--plusInBtn);\n  }\n`;\n\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Container = styled.div`\n  border-radius: 8px;\n  height: 522px;\n  position: relative;\n  padding: 24px;\n  width: 100%;\n  background: var(--modalBgColor);\n\n  display: flex;\n  flex-direction: column;\n\n  @media only screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const TitleModal = styled.h2`\n  margin-bottom: 24px;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  line-height: 1.5;\n  color: var(--textColorcalendar);\n`;\n\nexport const CloseModal = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  cursor: pointer;\n\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  color: red;\n  font-size: 12px;\n`;\n\nexport const TitleCard = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 14px;\n  transition: var(--transition);\n  background-color: var(--modalBgColor);\n  color: var(--textColorcalendar);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n\nexport const StyledDescription = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  padding-top: 14px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 154px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 24px;\n\n  resize: none;\n\n  color: var(--textColorcalendar);\n  background: var(--modalBgColor);\n\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const LabelColorStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--textCalendar);\n  margin-bottom: 4px;\n`;\n\nexport const StyleRadioButton = styled.div`\n  height: 18px;\n  display: flex;\n  gap: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const RadioButton = styled(Field)`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n`;\nexport const RadioButtonBlu = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: #8fa1d0;\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid #8fa1d0;\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const RadioButtonRed = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: #e09cb5;\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid #e09cb5;\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const RadioButtonGreen = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: #bedbb0;\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid #bedbb0;\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const RadioButtonGrey = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: rgba(22, 22, 22, 0.3);\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid rgba(22, 22, 22, 0.3);\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const DeadlineStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\n\nexport const AddButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  background-color: var(--accent);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnBgColorHover);\n  }\n  cursor: pointer;\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: var(--btnText);\n  margin-right: 8px;\n  stroke: var(--plusInBtn);\n`;\n\nexport const AddCardButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 335px;\n  height: 56px;\n  background: var(--btnPlus);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Span = styled.span`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--accent);\n`;\n","import { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Calendar } from 'components/Calendar';\nimport { Icon } from 'components/Icon';\n\nimport {\n  Container,\n  TitleModal,\n  StyledDescription,\n  CloseModal,\n  TitleCard,\n  LabelColorStyle,\n  DeadlineStyle,\n  AddButton,\n  StylePlus,\n  StyledForm,\n  ErrMsg,\n  Label,\n  Span,\n} from './AddCardModal.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { addCard } from '../../redux/cards/cardsOperations.js';\nimport { RadioInputs } from 'components/RadioInputs/RadioInputs.jsx';\n\nconst priority = ['without', 'low', 'medium', 'high'];\n\nconst formCardSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(3, `It's can be up to 3 characters long`)\n    .max(100, 'Too Long!')\n    .required(`This field is required.`),\n  text: Yup.string()\n    .min(10, `It's can be up to 10 characters long`)\n    .max(500, 'Too Long!')\n    .required(`This field is required.`),\n  priority: Yup.string().oneOf(priority),\n  deadline: Yup.date(),\n});\n\nexport default function AddCardModal({ title, btnText, onClose, columnId }) {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const dispatch = useDispatch();\n\n  const onSubmit = values => {\n    dispatch(addCard({ values, columnId }));\n    onClose();\n  };\n\n  return (\n    <Container>\n      <TitleModal>{title}</TitleModal>\n      <CloseModal>\n        <button type=\"button\" onClick={onClose}>\n          <Icon\n            name=\"close\"\n            width=\"18\"\n            height=\"18\"\n            stroke=\"var(--textColorcalendar)\"\n          />\n        </button>\n      </CloseModal>\n      <Formik\n        initialValues={{\n          title: '',\n          text: '',\n          priority: 'without',\n          deadline: selectedDate,\n        }}\n        validationSchema={formCardSchema}\n        onSubmit={onSubmit}\n      >\n        {({ handleSubmit, setFieldValue }) => (\n          <StyledForm onSubmit={handleSubmit}>\n            <TitleCard type=\"text\" name=\"title\" placeholder=\"Title\" />\n            <ErrMsg component=\"p\" name=\"title\" />\n            <Label>\n              <StyledDescription\n                rows={4}\n                component=\"textarea\"\n                name=\"text\"\n                placeholder=\"Description\"\n              />\n              <ErrMsg component=\"p\" name=\"text\" />\n            </Label>\n            <LabelColorStyle id=\"colorCard-radio-group\">\n              Label color\n            </LabelColorStyle>\n            <RadioInputs\n              defaultChecked=\"without\"\n              onPriorityChange={priority => {\n                setFieldValue('priority', priority);\n              }}\n            />\n            <DeadlineStyle>Deadline</DeadlineStyle>\n            <div>\n              <Span> Today,</Span>\n              <Calendar\n                selectedDate={selectedDate}\n                onDateChange={date => {\n                  setSelectedDate(date);\n                  setFieldValue('deadline', date);\n                }}\n              />\n            </div>\n            <AddButton type=\"submit\">\n              <StylePlus>\n                <Icon name=\"plus\" width=\"14\" height=\"14\" />\n              </StylePlus>\n              <p>{btnText}</p>\n            </AddButton>\n          </StyledForm>\n        )}\n      </Formik>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const HeadWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 335px;\n  height: 56px;\n\n  margin-bottom: 14px;\n  padding: 17px 20px;\n\n  border-radius: 8px;\n\n  background-color: var(--extraBgColor);\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const IconedBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  border: none;\n  background-color: inherit;\n\n  stroke: var(--secondaryTextColor);\n  transition: opacity var(--transition);\n\n  > svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    stroke: var(--accent);\n  }\n`;\n\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n","import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 8px;\n  height: 221px;\n  position: relative;\n  padding: 24px;\n  min-width: 320px;\n  /* border: 1px solid rgba(190, 219, 176, 0.5); */\n  background: var(--modalBgColor);\n\n  @media only screen and (max-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  /* border: 1px solid rgba(190, 219, 176, 0.5); */\n  border-radius: 8px;\n  background: var(--modalBgColor);\n`;\n\nexport const StyledField = styled(Field)`\n  font: inherit;\n  cursor: pointer;\n  padding-left: 18px;\n  margin-top: 24px;\n  margin-bottom: 24px;\n  width: 287px;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  background: var(--modalBgColor);\n  color: var(--textColorcalendar);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  transition: opacity var(--transition);\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  /* opacity: 0.5; */\n  /* transition: opacity var(--transition); */\n\n  /* &:hover,\n  &:focus {\n    opacity: 1;\n  } */\n\n  cursor: pointer;\n`;\n\nexport const Label = styled.h3`\n  /* margin-top: 24px;\n  margin-left: 24px; */\n  font-family: 'Poppins-Medium';\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 500; */\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  /* color: #fff; */\n  color: var(--textColorcalendar);\n`;\n\nexport const Button = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  background: var(--btnPlus);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: var(--transition);\n  cursor: pointer;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnBgColorHover);\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const ButtonText = styled.span`\n  font-family: 'Poppins-Medium';\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 500; */\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  /* color: #161616; */\n  color: var(--headerBgColor);\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  color: red;\n  font-size: 12px;\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: black;\n  margin-right: 8px;\n  stroke: white;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icon';\nimport {\n  Button,\n  ButtonText,\n  CloseBtn,\n  Container,\n  Label,\n  StylePlus,\n  StyledField,\n  StyledForm,\n} from './EditColumnFormik.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { editColumn } from '../../redux/columns/columnsOperations.js';\n\nconst addColumnFormSchema = Yup.object().shape({\n  title: Yup.string().min(2, 'Too short!').required('This field is required!'),\n});\n\nexport const EditColumnFormik = ({ title, columnId, onClose }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = body => {\n    dispatch(editColumn({ body, columnId }));\n  };\n\n  return (\n    <Container>\n      <Label>Edit column</Label>\n      <CloseBtn\n        type=\"button\"\n        onClick={onClose}\n        // style={{ stroke: 'var(--primaryTextColor)' }}\n      >\n        <Icon name=\"close\" width=\"18\" height=\"18\" stroke=\"var(--textColorcalendar)\"/>\n      </CloseBtn>\n      <Formik\n        initialValues={{\n          title,\n        }}\n        validationSchema={addColumnFormSchema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <StyledField type=\"text\" name=\"title\" placeholder=\"To Do\" />\n          <Button type=\"submit\">\n            <StylePlus>\n              <Icon name=\"plus\" width=\"14\" height=\"14\" />\n            </StylePlus>\n            <ButtonText>Edit</ButtonText>\n          </Button>\n        </StyledForm>\n      </Formik>\n    </Container>\n  );\n};\n","import { Icon } from 'components/Icon';\nimport {\n  HeadWrap,\n  IconedBtn,\n  Title,\n  Wrap,\n  customStyles,\n} from './ColumnHead.styled';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport { EditColumnFormik } from 'components/EditColumnFormik';\nimport { useDispatch } from 'react-redux';\nimport { deleteColumn } from '../../redux/columns/columnsOperations';\n\nexport const ColumnHead = ({ title, columnId }) => {\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleModalOpen = () => {\n    setIsOpenModal(true);\n  };\n\n  const handleModalClose = () => {\n    setIsOpenModal(false);\n  };\n\n  const handleDeleteColumn = () => {\n    dispatch(deleteColumn({ columnId }));\n  };\n\n  return (\n    <>\n      <HeadWrap>\n        <Title>{title}</Title>\n        <Wrap>\n          <IconedBtn type=\"button\" onClick={handleModalOpen}>\n            <Icon name=\"pencil\" />\n          </IconedBtn>\n          <IconedBtn type=\"button\" onClick={handleDeleteColumn}>\n            <Icon name=\"trash\" />\n          </IconedBtn>\n        </Wrap>\n      </HeadWrap>\n      <Modal\n        isOpen={isOpenModal}\n        onRequestClose={handleModalClose}\n        style={customStyles}\n        contentLabel=\"Column Edit Modal\"\n        ariaHideApp={false}\n      >\n        <EditColumnFormik\n          title={title}\n          columnId={columnId}\n          onClose={handleModalClose}\n        />\n      </Modal>\n    </>\n  );\n};\n","import { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport Card from 'components/Card/Card';\nimport { AddBtn, CardList, IconWrap } from './Column.styled';\nimport AddCardModal from 'components/AddCardModal/AddCardModal';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { ColumnHead } from 'components/ColumnHead';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const Column = ({ columnId, title }) => {\n  const [modalCardIsOpen, setmodalCardIsOpen] = useState(false);\n  const { cards } = useSelector(state => state.cards);\n  const [searchParams] = useSearchParams();\n  const priority = searchParams.get('priority');\n\n  let filtredCards = cards?.filter(({ column: { _id } }) => _id === columnId);\n\n  if (priority) {\n    filtredCards = filtredCards?.filter(card => card.priority === priority)\n  };\n\n  const openCardModal = () => {\n    setmodalCardIsOpen(true);\n  };\n\n  const closeCardModal = () => {\n    setmodalCardIsOpen(false);\n  };\n\n  return (\n    <>\n      <ColumnHead title={title} columnId={columnId} />\n      <CardList>\n        {filtredCards.map(card => (\n          <Card key={nanoid()} card={card} />\n        ))}\n      </CardList>\n      <AddBtn type=\"button\" onClick={openCardModal}>\n        <IconWrap>\n          <Icon name=\"plus\" />\n        </IconWrap>{' '}\n        Add another card\n      </AddBtn>\n      <Modal\n        isOpen={modalCardIsOpen}\n        onRequestClose={closeCardModal}\n        className={'modal-content'}\n        overlayClassName={'modal-overlay'}\n        contentLabel=\"Card Add Modal\"\n        ariaHideApp={false}\n      >\n        <AddCardModal\n          columnId={columnId}\n          title={'Add card'}\n          btnText={'Add'}\n          onClose={closeCardModal}\n        />\n      </Modal>\n    </>\n  );\n};\n","import styled from 'styled-components';\n// import 'react-perfect-scrollbar/dist/css/styles.css';\n\nexport const Container = styled.div`\n  max-width: 347px;\n\n  @media (min-width: 768px) {\n    max-width: 718px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 1128px;\n  }\n\n  &.scrollbar-container {\n    height: auto;\n  }\n  overflow: auto;\n  padding: 0 0 8px;\n\n  &::-webkit-scrollbar {\n    width: 12px; /* ширина скролбару */\n    height: 12px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: var(--scroll); /* колір фону всієї доріжки скролбару */\n    border-radius: 12px; // заокруглення доріжки скролу\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: var(--scrollBg); // колір самого скролу\n    border-radius: 12px; /* заокруглення самого скролу */\n\n    &:hover {\n      background-color: var(\n        --scroll-bg-hover\n      ); // колір самого скролу при наведенні\n    }\n  }\n`;\n\nexport const customStyles = { \n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const ColumnList = styled.ul`\n  display: flex;\n  gap: 18px;\n`;\n\nexport const ColumnItem = styled.li`\n  display: grid;\n  grid-template-rows: 56px minmax(0, 1fr) 56px;\n  gap: 14px;\n  width: 347px;\n  height: calc(90vh - 80px);\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  gap: 18px;\n  align-items: flex-start;\n  padding: 0 0 8px;\n`;\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  min-width: 334px;\n  width: 334px;\n\n  padding: 14px 78px;\n\n  border: none;\n  border-radius: 8px;\n\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--secondaryTextColor);\n  background-color: var(--extraBgColor);\n\n  opacity: 1;\n  transition: color background-color var(--transition);\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: var(--btnText);\n    background-color: var(--btnBgColor);\n\n    > div {\n      background-color: var(--btnPlusHover);\n    }\n  }\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n`;\n\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n  border: 1px solid black;\n  border-radius: 8px;\n\n  stroke: var(--extraBgColor);\n\n  background-color: var(--btnPlus);\n  transition: background-color stroke var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnPlusHover);\n    stroke: var(--plusInBtn);\n  }\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--extraBgColor);\n  }\n`;\n","import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 8px;\n  height: 221px;\n  position: relative;\n  padding: 24px;\n  min-width: 320px;\n  /* border: 1px solid rgba(190, 219, 176, 0.5); */\n  background: var(--modalBgColor);\n\n  @media only screen and (max-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  /* border: 1px solid rgba(190, 219, 176, 0.5); */\n  border-radius: 8px;\n  background: var(--modalBgColor);\n`;\n\nexport const StyledField = styled(Field)`\n  font: inherit;\n  cursor: pointer;\n  padding-left: 18px;\n  margin-top: 24px;\n  margin-bottom: 24px;\n  width: 287px;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  background: var(--modalBgColor);\n  color: var(--textColorcalendar);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  transition: opacity var(--transition);\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  /* opacity: 0.5; */\n  /* transition: opacity var(--transition); */\n\n  /* &:hover,\n  &:focus {\n    opacity: 1;\n  } */\n\n  cursor: pointer;\n`;\n\nexport const Label = styled.h3`\n  /* margin-top: 24px;\n  margin-left: 24px; */\n  font-family: 'Poppins-Medium';\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 500; */\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  /* color: #fff; */\n  color: var(--textColorcalendar);\n`;\n\nexport const Button = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  background: var(--btnPlus);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: var(--transition);\n  cursor: pointer;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnBgColorHover);\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const ButtonText = styled.span`\n  font-family: 'Poppins-Medium';\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 500; */\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  /* color: #161616; */\n  color: var(--headerBgColor);\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  color: red;\n  font-size: 12px;\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: black;\n  margin-right: 8px;\n  stroke: white;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icon';\nimport {\n  Button,\n  ButtonText,\n  CloseBtn,\n  Container,\n  Label,\n  StylePlus,\n  StyledField,\n  StyledForm,\n} from './AddColumnFormik.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { addColumn } from '../../redux/columns/columnsOperations.js';\n\nconst addColumnFormSchema = Yup.object().shape({\n  title: Yup.string().min(2, 'Too short!').required('This field is required!'),\n});\n\nexport const AddColumnFormik = ({ boardId, onClose }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = body => {\n    dispatch(addColumn({ body, boardId }));\n    onClose();\n  };\n\n  return (\n    <Container>\n      <Label>Add column</Label>\n      <CloseBtn\n        type=\"button\"\n        onClick={onClose}\n        // style={{ stroke: 'var(--primaryTextColor)' }}\n      >\n        <Icon name=\"close\" width=\"18\" height=\"18\" stroke=\"var(--textColorcalendar)\"/>\n      </CloseBtn>\n      <Formik\n        initialValues={{\n          title: '',\n        }}\n        validationSchema={addColumnFormSchema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <StyledField type=\"text\" name=\"title\" placeholder=\"Title\" />\n          <Button type=\"submit\">\n            <StylePlus>\n              <Icon name=\"plus\" width=\"14\" height=\"14\" />\n            </StylePlus>\n            <ButtonText>Add</ButtonText>\n          </Button>\n        </StyledForm>\n      </Formik>\n    </Container>\n  );\n};\n","import { Column } from 'components/Column';\nimport {\n  IconWrap,\n  AddBtn,\n  Wrap,\n  ColumnItem,\n  Container,\n  ColumnList,\n  customStyles,\n} from './Board.styled';\nimport { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { AddColumnFormik } from 'components/AddColumnFormik/AddColumnFormik';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useParams } from 'react-router-dom';\n\nexport const Board = () => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const { columns } = useSelector(state => state.columns);\n  const { boardId } = useParams();\n  \n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <Container>\n        <Wrap>\n          <ColumnList>\n            {columns.map(({ _id, title }) => {\n              return (\n                <ColumnItem key={nanoid()}>\n                  <Column title={title} columnId={_id} />\n                </ColumnItem>\n              );\n            })}\n          </ColumnList>\n          <AddBtn type=\"button\" onClick={openModal}>\n            <IconWrap>\n              <Icon name=\"plus\" />\n            </IconWrap>{' '}\n            Add another column\n          </AddBtn>\n        </Wrap>\n      </Container>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Column Edit Modal\"\n        ariaHideApp={false}\n      >\n        <AddColumnFormik onClose={closeModal} boardId={boardId} />\n      </Modal>\n    </>\n  );\n};\n","import { HeaderDashboard } from 'components/HeaderDashboard';\nimport { Board } from 'components/Board';\n\nexport const ScreensPage = ({ boardTitle }) => {\n  return (\n    <>\n      <HeaderDashboard boardTitle={boardTitle} />\n      <Board />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StartContainer = styled.div`\n  height: 80vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const StartText = styled.p`\n  min-width: 280px;\n\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  line-height: 1.33;\n\n  color: var(--secondaryTextColor);\n\n  @media (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media (min-width: 768px) {\n    line-height: 1.29;\n    width: 486px;\n    margin: auto;\n  }\n`;\n\n\n\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const BoardCreationBtn = styled.button`\n  margin: 0;\n  padding: 0;\n\n  border: none;\n  outline: none;\n\n  background-color: inherit;\n  color: var(--btnPlus);\n  cursor: pointer;\n  transition: color var(--transition);\n  &:hover,\n  &:focus {\n    color: var(--btnPlusHover);\n  }\n`;\n","import {\n  StartText,\n  BoardCreationBtn,\n  customStyles,\n  StartContainer,\n} from './StartScreen.styled';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { BoardCreatingModal } from 'components/BoardCreatingModal';\n\nexport const StartScreen = () => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <StartContainer>\n      <StartText>\n        Before starting your project, it is essential{' '}\n        <BoardCreationBtn type=\"button\" onClick={openModal}>\n          to create a board\n        </BoardCreationBtn>{' '}\n        to visualize and track all the necessary tasks and milestones. This\n        board serves as a powerful tool to organize the workflow and ensure\n        effective collaboration among team members.\n      </StartText>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Board Creation Modal\"\n        ariaHideApp={false}\n      >\n        <BoardCreatingModal onClose={closeModal} />\n      </Modal>\n    </StartContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SidebarWrapper = styled.aside`\n  @media screen and (max-width: 1439px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 1440px) {\n    /* padding: 14px; */\n    /* display: flex;\n    flex-direction: column;\n    justify-content: space-between; */\n    grid-column: 1 / 2;\n    grid-row-start: 1;\n    grid-row-end: 3;\n  }\n`;\n\nexport const Main = styled.main`\n  grid-column: 1 / 2;\n  grid-row: 2 / 3;\n  padding: 10px 24px;\n  min-height: 812px;\n  background-color: var(--secondaryBgColor);\n  ${({ isBackground }) => isBackground ? `background-image: url(${props => props.$backgroundImg}_375x812.webp)`\n    : `background-image: none`\n  \n  };\n  \n  background-repeat: no-repeat;\n  max-width: 375px;\n  height: auto;\n  background-position: center;\n  background-size: cover;\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${props => props.$backgroundImg}_750x1624.webp);\n  }\n  @media (min-width: 768px) {\n    background-image: url(${props => props.$backgroundImg}_768x956.webp);\n    max-width: 768px;\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${props => props.$backgroundImg}_1536x1912.webp);\n    }\n  }\n\n  @media (min-width: 1440px) {\n    background-image: url(${props => props.$backgroundImg}_1180x770.webp);\n    max-width: 1180px;\n    grid-column: 2 / 3;\n    grid-row: 2 / 3;\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${props => props.$backgroundImg}_2360x1540.webp);\n    }\n  }\n`;\n","import { useEffect } from 'react';\nimport { Header } from 'components/Header';\nimport { Sidebar } from 'components/SideBar';\nimport { ScreensPage } from 'components/ScreensPage';\nimport { StartScreen } from 'components/StartScreen';\nimport { Main, SidebarWrapper } from './HomePage.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Outlet, useNavigate, useParams } from 'react-router-dom';\nimport { selectCurrentBoard } from '../../redux/boards/boardsSelectors';\nimport { fetchBoardById } from '../../redux/boards/boardsOperations';\nimport { fetchColumnsByBoardId } from '../../redux/columns/columnsOperations';\nimport { fetchCards } from '../../redux/cards/cardsOperations';\nimport { useAuth } from 'hooks';\n\nexport default function HomePage() {\n  const dispatch = useDispatch();\n  const { boardId } = useParams();\n  const { isLoggedIn } = useAuth();\n  const navigate = useNavigate();\n  const currBoard = useSelector(selectCurrentBoard);\n\n  useEffect(() => {\n    const boardFromLS = localStorage.getItem('lastBoard');\n    if (!boardFromLS) return;\n    if (boardFromLS === boardId) return;\n    navigate(`/${boardFromLS}`);\n    return () => {};\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (!boardId) return;\n    if (!isLoggedIn) return;\n    dispatch(fetchBoardById(boardId));\n    dispatch(fetchColumnsByBoardId(boardId));\n    dispatch(fetchCards(boardId));\n\n    return () => {};\n  }, [boardId, dispatch, isLoggedIn]);\n\n\n  const background = currBoard?.background || 'diego';\n  const title = currBoard?.title;\n  const baseUrl =\n    'https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/';\n  const backgroundImgUrl = baseUrl + background;\n  console.log(background);\n\n\n  return (\n    <>\n      <Header />\n      <SidebarWrapper>\n        <Sidebar />\n      </SidebarWrapper>\n      {currBoard ? (\n        <Main\n          $backgroundImg={backgroundImgUrl}\n          $isBackground={background !== 'noBack'}\n        >\n          <ScreensPage boardTitle={title} />\n          <Outlet />\n        </Main>\n      ) : (\n        <StartScreen />\n      )}\n    </>\n  );\n}\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Name","_templateObject2","Avatar","_templateObject3","Button","_templateObject4","ButtonSvg","_templateObject5","Title","StyledForm","Form","StyledField","Field","LastField","_templateObject6","ErrMsg","ErrorMessage","_templateObject7","Label","_templateObject8","StyledLabel","_templateObject9","ContainerAvatar","Input","UpdateAvatar","user","useAuth","showImage","dispatch","useDispatch","filePicker","useRef","_jsxs","children","_jsx","src","avatarURL","width","height","alt","Icon","name","fill","stroke","onClick","current","click","type","ref","onChange","event","selectedFile","target","files","updateAvatar","accept","EditProfileSchema","Yup","shape","min","max","matches","required","email","password","EditProfile","_ref","closeModal","Formik","initialValues","validationSchema","onSubmit","values","actions","update","id","component","placeholder","customStyles","content","top","left","right","bottom","padding","transform","boxShadow","borderRadius","border","overlay","background","UserInfo","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","openModal","Modal","isOpen","style","contentLabel","onRequestClose","selectBoards","state","_state$boards","boards","selectCurrentBoard","_state$boards2","currentBoard","sendDataEmail","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","axios","toast","t0","stop","_x","apply","arguments","ContainerForModal","TitleForModal","StyledFormInModal","StyledFieldInModal","StyledTextareaInModal","ButtonForModal","ButtonClose","emailForSupport","textMessage","builderSchema","SendEmail","onClose","form","resetForm","rows","NeedHelpBlock","NeedHelpBtn","NeedHelp","srcSet","color","className","overlayClassName","BoardCreationBlock","BtnCreate","ModalWrap","ModalTitle","CloseBtn","FormWrap","Text","IconsListWrap","InvisibleInput","BackgroundsPallet","_templateObject10","LabelPic","_templateObject11","Div","_templateObject12","AddBtn","_templateObject13","IconWrap","_templateObject14","iconsArr","backgroundsArr","schema","title","icon","oneOf","BoardCreatingModal","navigate","useNavigate","_ref2","_yield$dispatch","_id","addBoard","sent","payload","localStorage","setItem","concat","map","el","value","srcSetPath","srcDefault","BoardCreation","btnText","ControlIconsContainer","BoardItemContainer","props","selected","BoardEditModal","board","boardId","editBoard","BoardItem","isActive","useSelector","tagName","closest","handleSelectBoard","opacity","cursor","deleteBoard","filteredBoards","filter","removeItem","length","lastBoardObj","handleDelete","SidebarStylesWrapper","Logo","BoardContainer","BoardList","LogOut","Sidebar","useParams","useEffect","fetchBoards","logOut","clearCurrentBoard","DrpdwnBtn","ThemesList","visibility","_ref3","ThemeItem","ThemeSwitcher","setIsOpen","menuRef","callback","handleClick","evnt","contains","document","addEventListener","removeEventListener","useClickOutside","setTimeout","heigth","changeTheme","theme","HeaderStyled","MenuBtn","HeaderWrapper","customStylesForModal","position","Header","isMenuOpen","setIsOpenMenu","FiltersTytle","FiltersWrap","FilterLabel","ShowAllBtn","StyledRadioGroup","RadioLabel","$priority","FiltersSpan","RadioFilters","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","currValue","get","handleFilter","priority","_Fragment","role","item","text","str","charAt","toUpperCase","slice","capitalizer","checked","nanoid","FilterModal","Wrap","BoardTitle","FilterBtn","HeaderDashboard","boardTitle","CardBody","CardColor","CardTitle","CardDescription","CardSolid","CardDetals","CardInformation","Priority","PriorityDetals","PriorityTitle","PriorityColor","PriorityTipe","Deadline","DeadlineTitle","DeadlineDate","_templateObject15","CardButtons","_templateObject16","Bell","_templateObject17","_templateObject18","Calendar","selectedDate","onDateChange","DatePicker","date","dateFormat","minDate","Date","locale","enGB","weekStartsOn","TitleModal","CloseModal","TitleCard","StyledDescription","LabelColorStyle","DeadlineStyle","AddButton","StylePlus","Span","RadioButton","RadioInputs","defaultChecked","onPriorityChange","setCurrValue","handleInput","formCardSchema","deadline","EditCardModal","card","cardId","setSelectedDate","editCard","handleSubmit","setFieldValue","MoveList","MoveCardItemStyled","MoveCardItemButtonStyled","MoveCardItem","column","currentId","chengeColumnsCard","toColumnId","MoveCardDropdown","currColumnId","columns","Card","modalCardIsOpen","setmodalCardIsOpen","_useState3","_useState4","isOpenMoveCardModal","setIsOpenMoveCardModal","columnId","dateDeadline","formatedDate","getUTCDate","getUTCMonth","toString","padStart","getFullYear","cardTextDescription","substring","closeCardModal","deleteCard","CardList","_templateObject19","_templateObject20","AddCardModal","addCard","HeadWrap","IconedBtn","ButtonText","addColumnFormSchema","EditColumnFormik","body","editColumn","ColumnHead","isOpenModal","setIsOpenModal","handleModalClose","deleteColumn","ariaHideApp","Column","_filtredCards","cards","filtredCards","ColumnList","ColumnItem","AddColumnFormik","addColumn","Board","modalIsOpen","ScreensPage","StartContainer","StartText","BoardCreationBtn","StartScreen","SidebarWrapper","Main","isBackground","$backgroundImg","HomePage","isLoggedIn","currBoard","boardFromLS","getItem","fetchBoardById","fetchColumnsByBoardId","fetchCards","backgroundImgUrl","console","log","$isBackground","Outlet"],"sourceRoot":""}