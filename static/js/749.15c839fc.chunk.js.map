{"version":3,"file":"static/js/749.15c839fc.chunk.js","mappings":"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","sources":["components/SideBar/SideBar.styled.jsx","components/SideBar/SideBar.jsx","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/HeaderDashboard/HeaderDashboard.jsx","components/MainDashboard/MainDashboard.styled.jsx","components/Board/Board.styled.jsx","components/Board/Board.jsx","components/BoardCreatingModal/BoardCreatingModal.styled.jsx","components/BoardCreatingModal/BoardCreatingModal.jsx","components/MainDashboard/MainDashboard.jsx","components/ScreensPage/ScreensPage.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SidebarContainer = styled.div`\n  width: 225px;\n  min-height: 100vh;\n  padding: 14px;\n  color: var(--primaryTextColor);\n  letter-spacing: -0.02em;\n  text-align: left;\n  background-color: var(--primaryBgColor);\n`;\n\nexport const Logo = styled.div`\n  font-family: 'Poppins-SemiBold';\n  letter-spacing: -0.04em;\n  display: flex;\n  column-gap: 8px;\n  align-items: center;\n  margin-bottom: 70px;\n`;\n\nexport const BoardContainer = styled.div`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n\n  h3 {\n    margin-bottom: 8px;\n    font-size: 12px;\n    font-family: 'Poppins-Regular';\n    opacity: 50%;\n  }\n  `;\n\nexport const BoardCreationBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-top: rgba(255, 255, 255, 0.1) solid 1px;\n  border-bottom: rgba(255, 255, 255, 0.1) solid 1px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  margin-bottom: 40px;\n`;\n\nexport const BtnCreate = styled.button`\n  width: 40px;\n  height: 36px;\n  background-color: var(--btnPlus);\n  border: none;\n  border-radius: 6px;\n  stroke: var(--primaryBgColor);\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnPlusHover);\n  }\n`;\n\nexport const BoardList = styled.ul`\nmargin-bottom: 40px;\n`;\n\nexport const ControlIconsContainer = styled.div`\n  margin-left: auto;\n  display: none;\n  gap: 8px;\n\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\n\nexport const BoardItem = styled.li`\n  height: 61px;\n  margin: 0 -14px 0 -14px;\n  padding: 0 14px 0 14px;\n  display: flex;\n  align-items: center;\n  stroke: var(--primaryTextColor);\n  opacity: 0.5;\n  transition: var(--transition);\n\n  p {\n    margin-left: 4px;\n    font-family: 'Poppins-Medium';\n    font-size: 14px;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--secondaryBgColor);\n    opacity: 1;\n\n    > ${ControlIconsContainer} {\n      display: flex;\n    }\n  }\n`;\n\nexport const NeedHelpBlock = styled.div`\n  height: 238px;\n  padding: 14px;\n  margin-bottom: 24px;\n  font-size: 12px;\n  border-radius: 8px;\n  background-color: var(--secondaryBgColor);\n\n  p {\n    margin-top: 14px;\n    margin-bottom: 18px;\n    line-height: 1.33333;\n    letter-spacing: 0;\n  }\n`;\n\nexport const NeedHelpBtn = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  background: none;\n  display: flex;\n  align-items: center;\n\n  span {\n    margin-left: 8px;\n    color: var(--primaryTextColor);\n    font-family: 'Poppins-Medium';\n  }\n`;\n\nexport const LogOut = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  background: none;\n  display: flex;\n  align-items: center;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  stroke: var(--accent);\n  transition: var(--transition);\n\n  p {\n    margin-left: 14px;\n    color: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    stroke: var(--hover);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { logOut } from '../../redux/auth/authOperation.js';\nimport { Icon } from 'components/Icon';\nimport {\n  SidebarContainer,\n  Logo,\n  BoardContainer,\n  BoardList,\n  BoardCreationBlock,\n  BtnCreate,\n  NeedHelpBlock,\n  NeedHelpBtn,\n  LogOut,\n  BoardItem,\n  ControlIconsContainer,\n} from './SideBar.styled';\n\nexport const Sidebar = () => {\n  const dispatch = useDispatch();\n\n  const handleLogOut = () => {\n    dispatch(logOut());\n  };\n\n  return (\n    <SidebarContainer>\n      <Logo>\n        <Icon name=\"logo\" width=\"32\" height=\"32\" />\n        <h2>TaskPro</h2>\n      </Logo>\n      <BoardContainer>\n        <h3>My boards</h3>\n        <BoardCreationBlock>\n          <p>\n            Create a<br />\n            new board\n          </p>\n          <BtnCreate type=\"button\">\n            <Icon name=\"plus\" width=\"20\" height=\"20\" />\n          </BtnCreate>\n        </BoardCreationBlock>\n        <BoardList>\n          <BoardItem>\n            <Icon\n              name=\"four-circles\"\n              width=\"18\"\n              height=\"18\"\n              style={{ opacity: 0.5 }}\n            />\n            <p>Board name</p>\n            <ControlIconsContainer>\n              <button type=\"button\">\n                <Icon name=\"pencil\" width=\"16\" height=\"16\" />\n              </button>\n              <button>\n                <Icon name=\"trash\" width=\"16\" height=\"16\" />\n              </button>\n            </ControlIconsContainer>\n          </BoardItem>\n        </BoardList>\n      </BoardContainer>\n      <NeedHelpBlock>\n        <picture>\n          <source\n            srcSet=\"\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-1x.webp 1x,\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-2x.webp 2x\n            \"\n          />\n          <img\n            src=\"https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-1x.webp\"\n            width=\"54\"\n            height=\"78\"\n            alt=\"little cute cactus\"\n          />\n        </picture>\n        <p>\n          If you need help with{' '}\n          <span style={{ color: 'var(--accent)' }}>TaskPro</span>, check out our\n          support resources or reach out to our customer support team.\n        </p>\n        <NeedHelpBtn type=\"button\">\n          <div style={{ stroke: 'var(--primaryTextColor)' }}>\n            <Icon name=\"help\" width=\"20\" height=\"20\" />\n          </div>\n          <span>Need help?</span>\n        </NeedHelpBtn>\n      </NeedHelpBlock>\n      <LogOut type=\"button\" onClick={handleLogOut}>\n        <Icon name=\"login\" width=\"32\" height=\"32\" />\n        <p>Log out</p>\n      </LogOut>\n    </SidebarContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  border: none;\n\n  background-color: inherit;\n\n  stroke: black;\n  > svg {\n    width: 16px;\n    height: 16px;\n  }\n`;\n\nexport const BoardName = styled.h3`\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const Wrap = styled.div`\n  @media (max-width: 767px) {\n    padding: 14px 0px;\n  }\n\n  @media (min-width: 768px) {\n    padding: 26px 0px;\n  }\n\n  @media (min-width: 1440px) {\n    padding: 10px 0px;\n  }\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import { useParams } from 'react-router-dom';\nimport { FilterBtn, BoardName, Wrap } from './HeaderDashboard.styled';\nimport { Icon } from 'components/Icon';\n\nexport const HeaderDashboard = () => {\n  const { boardName } = useParams();\n  return (\n    <Wrap>\n      <BoardName>{boardName}</BoardName>\n      <FilterBtn type=\"button\">\n        <Icon name=\"filter\" />\n        Filters{' '}\n      </FilterBtn>\n    </Wrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StartText = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  min-width: 280px;\n\n  font-size: 14px;\n  font-weight: 400;\n  letter-spacing: -0.02em;\n  line-height: 1.33;\n\n  @media (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media (min-width: 768px) {\n    line-height: 1.29;\n    width: 486px;\n    margin: auto;\n  }\n`;\n\nexport const BoardCreationBtn = styled.button`\n  margin: 0;\n  padding: 0;\n\n  border: none;\n  outline: none;\n\n  background-color: inherit;\n  color: inherit;\n  cursor: pointer;\n  &:hover {\n    color: red;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n  border: 1px solid black;\n  border-radius: 8px;\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: black;\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  max-width: 335px;\n\n  padding: 14px 79px;\n\n  border: 1px solid black;\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n","import { IconWrap, AddBtn } from './Board.styled';\nimport { Icon } from 'components/Icon';\n\nexport const Board = () => {\n  return (\n    <div>\n      <AddBtn type=\"button\">\n        <IconWrap>\n          <Icon name=\"plus\" />\n        </IconWrap>{' '}\n        Add another column\n      </AddBtn>\n    </div>\n  );\n};\n","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 335px;\n  height: 433px;\n\n  stroke: black;\n`;\n\nexport const ModalTitle = styled.h3`\n  margin-bottom: 24px;\n\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n`;\n\nexport const FormWrap = styled(Form)`\n    font-size: 14;\n    font-weight: 500;\n    line-height: 1.5;\n    letter-spacing: -0.02em;\n`\n\nexport const Input = styled(Field)`\n    width: 287px;\n    height: 49px;\n    padding: 14px 0 14px 18px;\n    margin-bottom: 24px;\n\n    border: 1px solid rgba(0 0 0 0.4);\n    border-radius: 8px;\n`\nexport const Text = styled.p`\n    margin-bottom: 24px;\n`\n\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n  border: 1px solid black;\n  border-radius: 8px;\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: black;\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  \n  min-width: 287px;\n  height: 49px;\n\n  padding: 10px 0 11px 0;\n\n  border: 1px solid black;\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n","import { Icon } from 'components/Icon';\nimport * as Yup from 'yup';\nimport {\n  FormWrap,\n  Input,\n  Text,\n  AddBtn,\n  IconWrap,\n  ModalWrap,\n  CloseBtn,\n  ModalTitle,\n} from './BoardCreatingModal.styled';\nimport { Formik } from 'formik';\n\nconst initialValues = {\n    boardTitle: \"\",\n};\n\nconst schema = Yup.object({\n    boardTitle: Yup.string().required(),\n});\n\n\nexport const BoardCreatingModal = ({ closeModal }) => {\n    const onSubmit = values => {\n        console.log(values);\n        closeModal();\n    };\n\n  return (\n    <ModalWrap>\n      <ModalTitle>New board</ModalTitle>\n      <CloseBtn type=\"button\" onClick={closeModal}>\n        <Icon name=\"close\" />\n      </CloseBtn>\n      <Formik initialValues={initialValues} validationSchema={schema} onSubmit={onSubmit}>\n        <FormWrap>\n          <Input type=\"text\" placeholder=\"title\" name=\"boardTitle\" />\n          <Text>Icons</Text>\n          <Text>Backgrounds</Text>\n          <AddBtn type='submit'>\n            <IconWrap>\n              <Icon name=\"plus\" />\n            </IconWrap>{' '}\n            Create\n          </AddBtn>\n        </FormWrap>\n      </Formik>\n    </ModalWrap>\n  );\n};\n","import { StartText, BoardCreationBtn } from './MainDashboard.styled';\nimport { useParams } from 'react-router-dom';\nimport { Board } from 'components/Board';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { BoardCreatingModal } from 'components/BoardCreatingModal';\n\nexport const MainDashboard = () => {\n  const { boardName } = useParams();\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      transform: 'translate(-50%, -50%)',\n      padding: 0,\n    },\n  };\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      {boardName ? (\n        <Board />\n      ) : (\n        <StartText>\n          Before starting your project, it is essential{' '}\n          <BoardCreationBtn type=\"button\" onClick={openModal}>\n            to create a board\n          </BoardCreationBtn>{' '}\n          to visualize and track all the necessary tasks and milestones. This\n          board serves as a powerful tool to organize the workflow and ensure\n          effective collaboration among team members.\n        </StartText>\n      )}\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Board Creation Modal\"\n        ariaHideApp={false}\n      >\n      <BoardCreatingModal closeModal={closeModal}/>              \n      </Modal>\n    </>\n  );\n};\n","import { HeaderDashboard } from 'components/HeaderDashboard';\nimport {} from './ScreensPage.styled';\nimport { MainDashboard } from 'components/MainDashboard';\n\nexport const ScreensPage = () => {\n  return (\n    <div>\n      <HeaderDashboard />\n      <MainDashboard />\n    </div>\n  );\n};\n","import { Header } from 'components/Header';\nimport { Sidebar } from 'components/SideBar';\nimport { ScreensPage } from 'components/ScreensPage';\n\nexport default function HomePage() {\n  return (\n    <div>\n      <Header />\n      <Sidebar />\n      <ScreensPage />\n    </div>\n  );\n}"],"names":["SidebarContainer","styled","_templateObject","_taggedTemplateLiteral","Logo","_templateObject2","BoardContainer","_templateObject3","BoardCreationBlock","_templateObject4","BtnCreate","_templateObject5","BoardList","_templateObject6","ControlIconsContainer","_templateObject7","BoardItem","_templateObject8","NeedHelpBlock","_templateObject9","NeedHelpBtn","_templateObject10","LogOut","_templateObject11","Sidebar","dispatch","useDispatch","_jsxs","children","_jsx","Icon","name","width","height","type","style","opacity","srcSet","src","alt","color","stroke","onClick","logOut","FilterBtn","BoardName","Wrap","HeaderDashboard","boardName","useParams","StartText","BoardCreationBtn","IconWrap","AddBtn","Board","ModalWrap","ModalTitle","CloseBtn","FormWrap","Form","Input","Field","Text","initialValues","boardTitle","schema","Yup","required","BoardCreatingModal","_ref","closeModal","Formik","validationSchema","onSubmit","values","console","log","placeholder","MainDashboard","_useState","useState","_useState2","_slicedToArray","modalIsOpen","setIsOpen","_Fragment","Modal","isOpen","onRequestClose","content","top","left","right","bottom","transform","padding","contentLabel","ariaHideApp","ScreensPage","HomePage","Header"],"sourceRoot":""}