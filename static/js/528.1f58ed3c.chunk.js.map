{"version":3,"file":"static/js/528.1f58ed3c.chunk.js","mappings":"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","sources":["components/UserInfo/UserInfo.styled.js","components/EditProfile/EditProfile.styled.js","components/UpdateAvatar/UpdateAvatar.styled.js","components/UpdateAvatar/UpdateAvatar.jsx","schemas/editProfileSchema.js","components/EditProfile/EditProfile.jsx","components/UserInfo/UserInfo.jsx","redux/boards/boardsSelectors.js","services/sendDataEmail.js","components/SendEmail/SendEmail.styled.js","components/SendEmail/SendEmail.jsx","components/NeedHelp/NeedHelp.styled.js","components/NeedHelp/NeedHelp.jsx","components/SidebarBoardCreation/BoardCreation.styled.js","components/BoardCreatingModal/BoardCreatingModal.styled.js","components/BoardCreatingModal/BoardCreatingModal.jsx","components/SidebarBoardCreation/BoardCreation.jsx","components/BoardItem/BoardItem.styled.js","components/BoardEditModal/BoardEditModal.styled.js","components/BoardEditModal/BoardEditModal.jsx","components/BoardItem/BoardItem.jsx","components/SideBar/SideBar.styled.js","components/SideBar/SideBar.jsx","components/ThemeSwitcher/ThemeSwitcher.styled.js","components/ThemeSwitcher/ThemeSwitcher.jsx","hooks/useClickOutside.js","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/FilterModal/FilterModal.styled.jsx","components/RadioFiltres/RadioFiltres.styled.js","components/RadioFiltres/RadioFiltres.jsx","helpers/capitalizer.js","components/FilterModal/FilterModal.jsx","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/HeaderDashboard/HeaderDashboard.jsx","components/Card/Card.styled.js","components/Calendar/Calendar.js","components/EditCardModal/EditCardModal.styled.js","components/RadioInputs/RadioInputs.styled.js","components/RadioInputs/RadioInputs.jsx","components/EditCardModal/EditCardModal.jsx","components/MoveCardDropdown/MoveCardDropdown.styled.js","components/MoveCardItem/MoveCardItem.styled.js","components/MoveCardItem/MoveCardItem.jsx","components/MoveCardDropdown/MoveCardDropdown.jsx","components/Card/Card.jsx","components/Column/Column.styled.js","components/AddCardModal/AddCardModal.styled.js","components/AddCardModal/AddCardModal.jsx","components/ColumnHead/ColumnHead.styled.js","components/EditColumnFormik/EditColumnFormik.styled.js","components/EditColumnFormik/EditColumnFormik.jsx","components/ColumnHead/ColumnHead.jsx","components/Column/Column.jsx","components/Board/Board.styled.js","components/AddColumnFormik/AddColumnFormik.styled.js","components/AddColumnFormik/AddColumnFormik.jsx","components/Board/Board.jsx","components/ScreensPage/ScreensPage.jsx","components/StartScreen/StartScreen.styled.js","components/StartScreen/StartScreen.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n\n  gap: 8px;\n`;\n\nexport const Name = styled.p`\n  margin: 5px 0;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -2;\n  color: var(--primaryTextColor);\n`;\n\nexport const Avatar = styled.img`\n  cursor: pointer;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 10px;\n  color: var(--primaryTextColor);\n  background: var(--modalBgColor);\n  border: 0;\n  cursor: pointer;\n`;\n\nexport const ButtonSvg = styled.button`\n  padding: 0;\n  margin: 0;\n  border: 0;\n  background-color: var(--primaryBgColor);\n  cursor:pointer;\n`;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Container = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 100%;\n  height: 440px;\n  border-radius: 8px;\n  background: var(--modalBgColor);\n\n  @media only screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin: 0 0 24px 0;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledField = styled(Field)`\n  position: relative;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  width: 100%;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  opacity: 0.4;\n  border-radius: 8px;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  transition: var(--transition);\n\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n`;\n\nexport const LastField = styled(Field)`\n  margin-bottom: 24px;\n  padding: 14px 18px;\n  width: 100%;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  opacity: 0.4;\n  border-radius: 8px;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -2;\n  color: var(--primaryTextColor);\n  transition: var(--transition);\n\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  background: var(--accent);\n  border: 0;\n  border-radius: 8px;\n  padding: 14px 126px;\n  color: var(--primaryTextColor);\n  font-family: 'Poppins-Medium';\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0, 02em;\n\n  &:hover {\n    background: var(--hover);\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 4px;\n\n  color: red;\n  font-size: 12px;\n  font-style: italic;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n\nexport const StyledLabel = styled.label`\n  position: relative;\n  display: block;\n\n  svg {\n    position: absolute;\n    top: 16px;\n    right: 15px;\n    opacity: 0, 5;\n    &:active {\n      opacity: 1;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ContainerAvatar = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Avatar = styled.img`\n  margin-bottom: 25px;\n  border-radius: 8px;\n`;\n\nexport const Input = styled.input`\n  opacity: 0;\n  height: 0;\n  width: 0;\n  line-height: 0;\n  overfow: hidden;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 56px;\n  left:46%;\n\n  width: 24px;\n  height: 24px;\n  background: var(--accent);\n  border-radius: 8px;\n  border: 0;\n\n  @media only screen and (min-width: 768px) {\n    left: 47%;\n  }\n`;\n","import { useRef } from 'react';\nimport { Input, Button, ContainerAvatar, Avatar } from './UpdateAvatar.styled';\n\nimport { useAuth } from 'hooks';\nimport { useDispatch } from 'react-redux';\nimport { updateAvatar } from '../../redux/auth/authOperation';\n\nimport { Icon } from 'components/Icon';\n\nconst cloudinaryBaseURL =\n  'https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707503119/';\n\nexport const UpdateAvatar = () => {\n  const { user } = useAuth();\n  const { showSvg } = useAuth();\n  const { showImage } = useAuth();\n\n  const dispatch = useDispatch();\n\n  const filePicker = useRef(null);\n\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n\n    dispatch(updateAvatar(selectedFile));\n  };\n\n  const handlePick = () => {\n    filePicker.current.click();\n  };\n\n  return (\n    <ContainerAvatar>\n      {showSvg && (\n        <Icon\n          name=\"user\"\n          fill=\"var(--secondaryBgColor)\"\n          stroke=\"var(--secondaryTextColor)\"\n          width=\"68px\"\n          height=\"68px\"\n        />\n      )}\n      {showImage && (\n        <Avatar\n          src={cloudinaryBaseURL + user.avatarURL}\n          width=\"68\"\n          height=\"68\"\n          alt=\"user photo\"\n        />\n      )}\n\n      <Button onClick={handlePick}>\n        <Icon name=\"plus\" width=\"10px\" height=\"10px\" stroke=\"#161616\" />\n      </Button>\n      <Input\n        type=\"file\"\n        ref={filePicker}\n        onChange={handleFileChange}\n        accept=\"image/*,.jpg,.png,.gif,.web,\"\n      />\n    </ContainerAvatar>\n  );\n};\n","import * as Yup from 'yup';\n\nexport const EditProfileSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, '2 chars minimum')\n    .max(32, '32 chars maximum')\n    .matches(/^[a-zA-Z0-9!@#$%^&*(),.?\":{}|<>]+$/, 'Invalin name ')\n    .required('this field is required'),\n  email: Yup.string().email('Invalid email').required('this field is required'),\n  password: Yup.string()\n    .min(8, '8 chars minimum')\n    .max(64, '64 chars maximum')\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*(),.?\":{}|<>]+$/,\n      'only latin letters, numbers and symbols'\n    )\n    .matches(/^\\S*$/, 'password must not contain spaces')\n    .required('this field is required '),\n});","import {\n  Container,\n  Title,\n  Button,\n  StyledForm,\n  StyledField,\n  LastField,\n  ErrMsg,\n  StyledLabel,\n  Label,\n} from './EditProfile.styled';\nimport { Formik } from 'formik';\n\nimport { useAuth } from 'hooks';\nimport { update } from '../../redux/auth/authOperation';\nimport { useDispatch } from 'react-redux';\nimport { UpdateAvatar } from 'components/UpdateAvatar';\nimport { Icon } from 'components/Icon';\nimport { EditProfileSchema } from 'schemas/editProfileSchema';\n\nexport const EditProfile = ({closeModal}) => {\n  const { user } = useAuth();\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <Title>Edit profile</Title>\n      <UpdateAvatar />\n\n      <Formik\n        initialValues={{\n          name: user.name,\n          email: user.email,\n          password: '',\n          \n        }}\n        validationSchema={EditProfileSchema}\n        onSubmit={(values, actions) => {\n          dispatch(update(values));\n        }}\n      >\n        <StyledForm>\n           \n          <Label>\n            <StyledField id=\"name\" name=\"name\" />\n            <ErrMsg name=\"name\" component=\"p\" />\n          </Label>\n\n          <Label>\n            <StyledField id=\"email\" name=\"email\" type=\"email\" />\n            <ErrMsg name=\"email\" component=\"p\" />\n          </Label>\n\n          <StyledLabel>\n            <Icon name=\"eye\" stroke=\"var(--primaryTextColor)\" />\n            <LastField\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Enter or update your password\"\n            />\n            <ErrMsg name=\"password\" component=\"p\" />\n          </StyledLabel>\n\n          <Button type=\"submit\" onClick={closeModal} >Submit</Button>\n        </StyledForm>\n      </Formik>\n    </Container>\n  );\n};\n","import { Container, Name, Avatar, Button, ButtonSvg } from './UserInfo.styled';\nimport { EditProfile } from 'components/EditProfile';\nimport { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\n\nimport { useAuth } from 'hooks';\n\nconst cloudinaryBaseURL =\n  'https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707503119/';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    padding: '0',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: ' 0 4px 16px 0 rgba(22, 22, 22, 0.05)',\n    borderRadius: '8px',\n    // border: '1px solid rgba(190, 219, 176, 0.5);',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const UserInfo = () => {\n  const { user } = useAuth();\n  const { showSvg } = useAuth();\n  const { showImage } = useAuth();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <Container>\n      <Name>{user.name}</Name>\n      {showSvg && (\n        <ButtonSvg onClick={openModal}>\n          <Icon\n            name=\"user\"\n            fill=\"var(--secondaryBgColor)\"\n            stroke=\"var(--secondaryTextColor)\"\n            width=\"32px\"\n            height=\"32px\"\n          />\n        </ButtonSvg>\n      )}\n\n      {showImage && (\n        <Avatar\n          src={cloudinaryBaseURL + user.avatarURL}\n          width=\"32\"\n          height=\"32\"\n          alt=\"user photo\"\n          onClick={openModal}\n        />\n      )}\n\n      <Modal isOpen={isModalOpen} style={customStyles} contentLabel=\"Modal\">\n        <EditProfile closeModal={closeModal} />\n        <Button onClick={closeModal}>\n          <Icon name=\"close\" stroke=\"var(--secondaryTextColor)\" />\n        </Button>\n      </Modal>\n    </Container>\n  );\n};\n","export const selectBoards = state => state.boards.boards;\nexport const selectCurrentBoard = state => state?.boards?.currentBoard;","import axios from 'axios';\nimport toast from 'react-hot-toast';\n\nexport const sendDataEmail = async data => {\n  try {\n    await axios.post('/support', data);\n    toast.success('Successfully sent!');\n  } catch (error) {\n    toast.error('Oops. Something went wrong.');\n  }\n};\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const ContainerForModal = styled.div`\n  position: relative;\n  padding: 24px 34px 50px 24px;\n  width: 320px;\n  height: 381px;\n\n  background-color: var(--modalBgColor);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.05);\n\n  @media only screen and (min-width: 375px) {\n    width: 345px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 400px;\n    height: 355px;\n    padding: 24px;\n  }\n`;\n\nexport const TitleForModal = styled.h2`\n  margin-bottom: 24px;\n\n  text-align: start;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--textColorcalendar);\n`;\nexport const StyledFormInModal = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledFieldInModal = styled(Field)`\n  position: relative;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  width: 100%;\n\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  resize: none;\n  opacity: 0.4;\n\n  font-size: 14px;\n  line-height: 1.4;\n\n  background: var(--modalBgColor);\n  color: var(--textColorcalendar);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n\n  transition: opacity var(--transition);\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: 19px;\n    width: 100%;\n  }\n  @media only screen and (min-width: 1440px) {\n    margin-bottom: 14px;\n  }\n`;\n\nexport const StyledTextareaInModal = styled(Field)`\n  position: relative;\n  margin-bottom: 24px;\n  padding: 14px 18px;\n  width: 100%;\n\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  resize: none;\n  opacity: 0.4;\n\n  font-size: 14px;\n  height: calc(30px * 4);\n  line-height: 1.5;\n  color: var(--textColorcalendar);\n  background: var(--modalBgColor);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n\n  transition: opacity var(--transition);\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 100%;\n  }\n`;\n\nexport const ButtonForModal = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 49px;\n  width: 100%;\n\n  background-color: var(--accent);\n  border: 0;\n  border-radius: 8px;\n\n  color: var(--btnText);\n  font-size: 14px;\n  line-height: 1.5;\n  cursor: pointer;\n\n  transition: background-color var(--transition);\n\n  &:hover,\n  :focus {\n    background-color: var(--btnBgColorHover);\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 100%;\n  }\n`;\n\nexport const ButtonClose = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  padding: 0;\n  border: none;\n  background: none;\n\n  cursor: pointer;\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  font-size: 12px;\n  font-style: italic;\n  color: red;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { sendDataEmail } from 'services/sendDataEmail';\nimport {\n  ButtonClose,\n  ButtonForModal,\n  ContainerForModal,\n  ErrMsg,\n  Label,\n  StyledFieldInModal,\n  StyledFormInModal,\n  StyledTextareaInModal,\n  TitleForModal,\n} from './SendEmail.styled';\nimport { Icon } from 'components/Icon';\n\nconst initialValues = {\n  emailForSupport: '',\n  textMessage: '',\n};\n\nconst builderSchema = Yup.object().shape({\n  emailForSupport: Yup.string().email().required('This field is required'),\n  textMessage: Yup.string()\n    .min(5, `It's can be up to 5 characters long`)\n    .required(`This field is required`),\n});\n\nexport const SendEmail = ({ onClose }) => {\n  const onSubmit = (data, form) => {\n    sendDataEmail(data);\n    form.resetForm();\n    onClose();\n  };\n\n  return (\n    <ContainerForModal>\n      <TitleForModal>Need help</TitleForModal>\n      <ButtonClose type=\"button\" onClick={onClose}>\n        <Icon\n          stroke=\"var(--textColorcalendar)\"\n          name=\"close\"\n          width=\"18\"\n          height=\"18\"\n        />\n      </ButtonClose>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={builderSchema}\n        onSubmit={onSubmit}\n      >\n        <StyledFormInModal>\n          <Label>\n            <StyledFieldInModal\n              type=\"email\"\n              name=\"emailForSupport\"\n              placeholder=\"Email address\"\n            />\n            <ErrMsg component=\"p\" name=\"emailForSupport\" />\n          </Label>\n\n          <Label>\n            <StyledTextareaInModal\n              rows={4}\n              component=\"textarea\"\n              type=\"text\"\n              name=\"textMessage\"\n              placeholder=\"Comment\"\n            />\n            <ErrMsg component=\"p\" name=\"textMessage\" />\n          </Label>\n\n          <ButtonForModal type=\"submit\">Send</ButtonForModal>\n        </StyledFormInModal>\n      </Formik>\n    </ContainerForModal>\n  );\n};\n","import styled from 'styled-components';\n\nexport const NeedHelpBlock = styled.div`\n  height: 238px;\n  padding: 14px;\n  margin-bottom: 24px;\n  font-size: 12px;\n  border-radius: 8px;\n  background-color: var(--secondaryBgColor);\n\n  p {\n    margin-top: 14px;\n    margin-bottom: 18px;\n    line-height: 1.33333;\n    letter-spacing: 0;\n  }\n`;\n\nexport const NeedHelpBtn = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  background: none;\n  display: flex;\n  align-items: center;\n\n  span {\n    margin-left: 8px;\n    color: var(--primaryTextColor);\n    font-family: 'Poppins-Medium';\n  }\n`;","import { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { SendEmail } from 'components/SendEmail';\nimport { NeedHelpBlock, NeedHelpBtn } from './NeedHelp.styled';\n\nconst customStyles = {\n  content: {\n    width: 'fit-content',\n    height: 'fit-content',\n    padding: 0,\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\n// Modal.setAppElement('#root');\n\nexport const NeedHelp = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <NeedHelpBlock>\n      <picture>\n        <source\n          srcSet=\"\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-1x.webp 1x,\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-2x.webp 2x\n            \"\n        />\n        <img\n          src=\"https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-1x.webp\"\n          width=\"54\"\n          height=\"78\"\n          alt=\"little cute cactus\"\n        />\n      </picture>\n      <p>\n        If you need help with{' '}\n        <span style={{ color: 'var(--accent)' }}>TaskPro</span>, check out our\n        support resources or reach out to our customer support team.\n      </p>\n      <NeedHelpBtn type=\"button\" onClick={openModal}>\n        <Icon\n          name=\"help\"\n          width=\"20\"\n          height=\"20\"\n          stroke=\"var(--primaryTextColor)\"\n        />\n        <span>Need help?</span>\n      </NeedHelpBtn>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Need help modal\"\n      >\n        <SendEmail onClose={closeModal} />\n      </Modal>\n    </NeedHelpBlock>\n  );\n};\n","import styled from 'styled-components';\n\nexport const BoardCreationBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-top: rgba(255, 255, 255, 0.1) solid 1px;\n  border-bottom: rgba(255, 255, 255, 0.1) solid 1px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  margin-bottom: 40px;\n`;\n\nexport const BtnCreate = styled.button`\n  width: 40px;\n  height: 36px;\n  background-color: var(--btnPlus);\n  border: none;\n  border-radius: 6px;\n  stroke: var(--primaryBgColor);\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnPlusHover);\n  }\n`;","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 335px;\n  height: 433px;\n\n  border-radius: 8px;\n\n  background-color: var(--modalBgColor);\n\n  stroke: var(--primaryTextColor);\n\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const ModalTitle = styled.h3`\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Medium';\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--textColorcalendar);\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--textColorcalendar);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const FormWrap = styled(Form)`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const Input = styled(Field)`\n  width: 287px;\n  height: 49px;\n  padding: 14px 0 14px 18px;\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Regular';\n  font-size: 14px;\n\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n\n  color: var(--textColorcalendar);\n  background-color: var(--modalBgColor);\n  opacity: 0.4;\n  transition: opacity var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 14px;\n\n  color: var(--textColorcalendar);\n`;\n\nexport const IconsListWrap = styled.ul`\n  display: flex;\n  gap: 8px;\n\n  margin-bottom: 24px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 0;\n\n  border: none;\n  background-color: inherit;\n\n  width: 18px;\n  height: 18px;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  cursor: pointer;\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:focus,\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const InvisibleInput = styled(Field)`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n\nexport const BackgroundsPallet = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  width: 252px;\n  height: 60px;\n  margin-bottom: 40px;\n`;\n\nexport const LabelPic = styled.label``;\n\nexport const Div = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  transition: transform var(--transition);\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  min-width: 287px;\n  height: 49px;\n\n  padding: 10px 0 11px 0;\n  border: none;\n  /* border: 1px solid black; */\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--btnText);\n  background-color: var(--accent);\n  transition: background-color var(--transition);\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnBgColorHover);\n  }\n`;\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n\n  border-radius: 8px;\n\n  background-color: var(--btnText);\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--plusInBtn);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport { addBoard } from '../../redux/boards/boardsOperations';\nimport { selectCurrentBoard } from '../../redux/boards/boardsSelectors';\nimport { Icon } from 'components/Icon';\nimport * as Yup from 'yup';\nimport {\n  FormWrap,\n  Input,\n  Text,\n  AddBtn,\n  IconWrap,\n  ModalWrap,\n  CloseBtn,\n  ModalTitle,\n  IconsListWrap,\n  InvisibleInput,\n  BackgroundsPallet,\n  Label,\n  LabelPic,\n  Div,\n} from './BoardCreatingModal.styled.js';\n\n\nconst iconsArr = [\n  'four-circles',\n  'star',\n  'loading',\n  'puzzle',\n  'container',\n  'lightning',\n  'colors',\n  'hexagon',\n];\n\nconst backgroundsArr = [\n  'noBack',\n  'miklos',\n  'eberhard',\n  'diego',\n  'vino',\n  'vickholius',\n  'romello',\n  'kace',\n  'milad',\n  'gaetan',\n  'florian',\n  'tony',\n  'nicolas',\n  'gabriella',\n  'igor',\n  'zhou',\n];\n\nconst schema = Yup.object({\n  title: Yup.string().required(),\n  icon: Yup.string().oneOf(iconsArr).required(),\n  background: Yup.string().oneOf(backgroundsArr).required(),\n});\n\nexport const BoardCreatingModal = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { _d } = useSelector(selectCurrentBoard);\n\n  const initialValues = {\n    title: '',\n    icon: 'four-circles',\n    background: 'noBack',\n  };\n\n  const onSubmit = values => {\n    dispatch(addBoard(values));\n    navigate(`/${_d}`);\n    onClose();\n  };\n  return (\n    <ModalWrap>\n      <ModalTitle>New board</ModalTitle>\n      <CloseBtn type=\"button\" onClick={onClose}>\n        <Icon name=\"close\" />\n      </CloseBtn>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={onSubmit}\n      >\n        <FormWrap>\n          <Input type=\"text\" placeholder=\"Title\" name=\"title\" />\n          <Text>Icons</Text>\n\n          <IconsListWrap>\n            {iconsArr.map(el => (\n              <li key={el}>\n                <Label>\n                  <Icon name={el} />\n                  <InvisibleInput type=\"radio\" name=\"icon\" value={el} />\n                </Label>\n              </li>\n            ))}\n          </IconsListWrap>\n\n          <Text>Backgrounds</Text>\n          <BackgroundsPallet>\n            {backgroundsArr.map(el => {\n              const srcSetPath = ` https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp 1x,\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_56x56.webp 2x`;\n              const srcDefault = `https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp`;\n              return (\n                <li key={el}>\n                  <LabelPic>\n                    <Div>\n                      <picture>\n                        <source srcSet={srcSetPath} />\n                        <img src={srcDefault} alt=\"background example\" />\n                      </picture>\n                    </Div>\n                    <InvisibleInput type=\"radio\" name=\"background\" value={el} />\n                  </LabelPic>\n                </li>\n              );\n            })}\n          </BackgroundsPallet>\n\n          <AddBtn type=\"submit\">\n            <IconWrap>\n              <Icon name=\"plus\" />\n            </IconWrap>{' '}\n            Create\n          </AddBtn>\n        </FormWrap>\n      </Formik>\n    </ModalWrap>\n  );\n};\n","import { useState } from \"react\";\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { BoardCreationBlock, BtnCreate } from \"./BoardCreation.styled\";\nimport { BoardCreatingModal } from \"components/BoardCreatingModal\";\n\nconst customStyles = {\n  content: {\n    width: 'fit-content',\n    height: 'fit-content',\n    padding: 0,\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const BoardCreation = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <BoardCreationBlock>\n      <p>\n        Create a<br />\n        new board\n      </p>\n      <BtnCreate type=\"button\" onClick={openModal}>\n        <Icon name=\"plus\" width=\"20\" height=\"20\" />\n      </BtnCreate>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Creation board modal\"\n      >\n        <BoardCreatingModal\n          onClose={closeModal}\n          title=\"New board\"\n          btnText=\"Create\"\n        />\n      </Modal>\n    </BoardCreationBlock>\n  );\n};","import styled from 'styled-components';\n\nexport const ControlIconsContainer = styled.div`\n  margin-left: auto;\n  display: none;\n  gap: 8px;\n\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\n\nexport const BoardItemContainer = styled.li`\n  height: 61px;\n  margin: 0 -14px 0 -14px;\n  padding: 0 14px 0 14px;\n  display: flex;\n  align-items: center;\n  stroke: var(--primaryTextColor);\n  opacity: 0.5;\n  transition: var(--transition);\n\n  p {\n    margin-left: 4px;\n    font-family: 'Poppins-Medium';\n    font-size: 14px;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--secondaryBgColor);\n    opacity: 1;\n\n    > ${ControlIconsContainer} {\n      display: flex;\n      opacity: 0.5;\n    }\n  }\n`;","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 335px;\n  height: 433px;\n\n  border-radius: 8px;\n\n  background-color: var(--modalBgColor);\n\n  stroke: var(--primaryTextColor);\n\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const ModalTitle = styled.h3`\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Medium';\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--textColorcalendar);\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--textColorcalendar);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const FormWrap = styled(Form)`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const Input = styled(Field)`\n  width: 287px;\n  height: 49px;\n  padding: 14px 0 14px 18px;\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Regular';\n  font-size: 14px;\n\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n\n  color: var(--textColorcalendar);\n  background-color: var(--modalBgColor);\n  opacity: 0.4;\n\n  transition: opacity var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 14px;\n\n  color: var(--textColorcalendar);\n`;\n\nexport const IconsListWrap = styled.ul`\n  display: flex;\n  gap: 8px;\n\n  margin-bottom: 24px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 0;\n\n  border: none;\n  background-color: inherit;\n\n  width: 18px;\n  height: 18px;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  cursor: pointer;\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:focus,\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const InvisibleInput = styled(Field)`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n\nexport const BackgroundsPallet = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  width: 252px;\n  height: 60px;\n  margin-bottom: 40px;\n`;\n\nexport const LabelPic = styled.label``;\n\nexport const Div = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  transition: transform var(--transition);\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  min-width: 287px;\n  height: 49px;\n\n  padding: 10px 0 11px 0;\n  border: none;\n\n  /* border: 1px solid black; */\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--btnText);\n  background-color: var(--accent);\n  transition: background-color var(--transition);\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnBgColorHover);\n  }\n`;\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n\n  border-radius: 8px;\n\n  background-color: var(--btnText);\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--plusInBtn);\n  }\n`;\n","import { Icon } from 'components/Icon';\nimport * as Yup from 'yup';\nimport {\n  FormWrap,\n  Input,\n  Text,\n  AddBtn,\n  IconWrap,\n  ModalWrap,\n  CloseBtn,\n  ModalTitle,\n  IconsListWrap,\n  InvisibleInput,\n  BackgroundsPallet,\n  Label,\n  LabelPic,\n  Div,\n} from './BoardEditModal.styled';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { editBoard } from '../../redux/boards/boardsOperations';\n\nconst iconsArr = [\n  'four-circles',\n  'star',\n  'loading',\n  'puzzle',\n  'container',\n  'lightning',\n  'colors',\n  'hexagon',\n];\n\nconst backgroundsArr = [\n  'noBack',\n  'miklos',\n  'eberhard',\n  'diego',\n  'vino',\n  'vickholius',\n  'romello',\n  'kace',\n  'milad',\n  'gaetan',\n  'florian',\n  'tony',\n  'nicolas',\n  'gabriella',\n  'igor',\n  'zhou',\n];\n\nconst schema = Yup.object({\n  title: Yup.string().required(),\n  icon: Yup.string().oneOf(iconsArr).required(),\n  background: Yup.string().oneOf(backgroundsArr).required(),\n});\n\nexport const BoardEditModal = ({ onClose, board }) => {\n  const dispatch = useDispatch();\n\n  const { _id: boardId, title, icon, background } = board;\n\n  const initialValues = {\n    title,\n    icon,\n    background,\n  };\n\n  const onSubmit = board => {\n    dispatch(editBoard({ boardId, board }));\n    onClose();\n  };\n  return (\n    <ModalWrap>\n      <ModalTitle>Edit board</ModalTitle>\n      <CloseBtn type=\"button\" onClick={onClose}>\n        <Icon name=\"close\" />\n      </CloseBtn>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={onSubmit}\n      >\n        <FormWrap>\n          <Input type=\"text\" placeholder=\"Title\" name=\"title\" />\n          <Text>Icons</Text>\n\n          <IconsListWrap>\n            {iconsArr.map(el => (\n              <li key={el}>\n                <Label>\n                  <Icon name={el} />\n                  <InvisibleInput type=\"radio\" name=\"icon\" value={el} />\n                </Label>\n              </li>\n            ))}\n          </IconsListWrap>\n\n          <Text>Backgrounds</Text>\n          <BackgroundsPallet>\n            {backgroundsArr.map(el => {\n              const srcSetPath = ` https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp 1x,\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_56x56.webp 2x`;\n              const srcDefault = `https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp`;\n              return (\n                <li key={el}>\n                  <LabelPic>\n                    <Div>\n                      <picture>\n                        <source srcSet={srcSetPath} />\n                        <img src={srcDefault} alt=\"background example\" />\n                      </picture>\n                    </Div>\n                    <InvisibleInput type=\"radio\" name=\"background\" value={el} />\n                  </LabelPic>\n                </li>\n              );\n            })}\n          </BackgroundsPallet>\n\n          <AddBtn type=\"submit\">\n            <IconWrap>\n              <Icon name=\"plus\" />\n            </IconWrap>{' '}\n            Edit\n          </AddBtn>\n        </FormWrap>\n      </Formik>\n    </ModalWrap>\n  );\n};\n","import { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { BoardItemContainer, ControlIconsContainer } from './BoardItem.styled';\nimport { BoardEditModal } from 'components/BoardEditModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteBoard } from '../../redux/boards/boardsOperations';\nimport { selectCurrentBoard } from '../../redux/boards/boardsSelectors';\nimport { useNavigate } from 'react-router-dom';\n\n\nconst customStyles = {\n  content: {\n    width: 'fit-content',\n    height: 'fit-content',\n    padding: 0,\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const BoardItem = ({ board }) => {\n  const dispatch = useDispatch();\n  const currentBoard = useSelector(selectCurrentBoard);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const navigate = useNavigate();\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleSelectBoard = (event, boardId) => {\n    if (event.target.tagName !== 'BUTTON') {\n      localStorage.setItem('lastBoard', boardId);\n      navigate(`/${boardId}`)\n    }\n  };\n\n  const handleDelete = (boardId) => {\n    dispatch(deleteBoard(boardId));\n  }\n\n  return (\n    <BoardItemContainer\n      onClick={event => handleSelectBoard(event, board._id)}\n      selected={currentBoard && currentBoard._id === board._id}\n    >\n      <Icon name={board.icon} width=\"18\" height=\"18\" style={{ opacity: 0.5 }} />\n      <p>{board.title}</p>\n      <ControlIconsContainer>\n        <button type=\"button\" onClick={openModal}>\n          <Icon name=\"pencil\" width=\"16\" height=\"16\" />\n        </button>\n        <button type=\"button\" onClick={() => handleDelete(board._id)}>\n          <Icon name=\"trash\" width=\"16\" height=\"16\" />\n        </button>\n      </ControlIconsContainer>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Edition board modal\"\n      >\n        <BoardEditModal\n          onClose={closeModal}\n          board={board}\n        />\n      </Modal>\n    </BoardItemContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Logo = styled.div`\n  font-family: 'Poppins-SemiBold';\n  letter-spacing: -0.04em;\n  display: flex;\n  column-gap: 8px;\n  align-items: center;\n  margin-bottom: 70px;\n`;\n\nexport const BoardContainer = styled.div`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n\n  h3 {\n    margin-bottom: 8px;\n    font-size: 12px;\n    font-family: 'Poppins-Regular';\n    opacity: 50%;\n  }\n`;\n\nexport const BoardList = styled.ul`\n  margin-bottom: 40px;\n`;\n\nexport const LogOut = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  background: none;\n  display: flex;\n  align-items: center;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  stroke: var(--accent);\n  transition: var(--transition);\n\n  p {\n    margin-left: 14px;\n    color: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    stroke: var(--hover);\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectBoards } from '../../redux/boards/boardsSelectors.js';\nimport { fetchBoards } from '../../redux/boards/boardsOperations.js';\nimport { logOut } from '../../redux/auth/authOperation.js';\nimport { NeedHelp } from 'components/NeedHelp';\nimport { BoardCreation } from 'components/SidebarBoardCreation';\n\nimport { BoardItem } from 'components/BoardItem';\nimport { Icon } from 'components/Icon';\nimport { Logo, BoardContainer, BoardList, LogOut } from './SideBar.styled';\n\nexport const Sidebar = () => {\n  const dispatch = useDispatch();\n  const boards = useSelector(selectBoards);\n\n  useEffect(() => {\n    dispatch(fetchBoards());\n  }, [dispatch]);\n\n  const handleLogOut = () => {\n    dispatch(logOut());\n  };\n\n  return (\n    <>\n      <div>\n        <Logo>\n          <Icon name=\"logo\" width=\"32\" height=\"32\" />\n          <h2>TaskPro</h2>\n        </Logo>\n        <BoardContainer>\n          <h3>My boards</h3>\n          <BoardCreation />\n          <BoardList>\n            {boards.map(board => (\n              <BoardItem key={board._id} board={board} />\n            ))}\n          </BoardList>\n        </BoardContainer>\n      </div>\n      <div>\n        <NeedHelp />\n        <LogOut type=\"button\" onClick={handleLogOut}>\n          <Icon name=\"login\" width=\"32\" height=\"32\" />\n          <p>Log out</p>\n        </LogOut>\n      </div>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const DrpdwnBtn = styled.button`\n  position: relative;\n  display: flex;\n  gap: 4px;\n  background: none;\n  border: none;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  opacity: var(--secondaryOpacity);\n`;\n\nexport const ThemesList = styled.ul`\n  position: absolute;\n  top: 65%;\n  right: 52%;\n  padding: 18px 44px 18px 18px;\n  border: 1px solid var(--borderInThemeModal);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(17, 17, 17, 0.1);\n  background-color: var(--modalBgColor);\n  visibility: ${({ visibility }) => visibility};\n  opacity: ${({ opacity }) => opacity};\n  transform: ${({ transform }) => transform};\n  transition: 0.3s;\n`;\n\nexport const ThemeItem = styled.li`\n  font-family: 'Poppins-Regular';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  opacity: var(--opacityInThemeModal);\n  cursor: pointer;\n  &:hover,\n  :focus {\n    color: var(--accent);\n  }\n  &:not(:last-child) {\n    margin-bottom: 4px;\n  }\n`;\n","import { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeTheme } from '../../redux/auth/authOperation';\n\nimport { useClickOutside } from 'hooks/useClickOutside';\nimport { Icon } from 'components/Icon';\nimport { DrpdwnBtn, ThemesList, ThemeItem } from './ThemeSwitcher.styled';\n\nexport const ThemeSwitcher = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const menuRef = useRef(null);\n  const dispatch = useDispatch();\n\n  const visibility = isOpen ? 'visible' : 'hidden';\n  const opacity = isOpen ? '1' : '0';\n  const transform = isOpen ? 'translateY(10px)' : 'translateY(0)';\n\n  useClickOutside(menuRef, () => {\n    if (isOpen) {\n      setTimeout(() => setIsOpen(false), 50);\n    }\n  });\n\n  return (\n    <div ref={menuRef}>\n      <DrpdwnBtn type=\"button\" onClick={() => setIsOpen(!isOpen)}>\n        Theme\n        <Icon\n          name=\"chevron-down\"\n          width=\"16\"\n          heigth=\"16\"\n          stroke=\"var(--secondaryTextColor)\"\n        />\n      </DrpdwnBtn>\n      <ThemesList\n        visibility={visibility}\n        opacity={opacity}\n        transform={transform}\n      >\n        <ThemeItem onClick={() => dispatch(changeTheme({ theme: 'light' }))}>\n          Light\n        </ThemeItem>\n        <ThemeItem onClick={() => dispatch(changeTheme({ theme: 'dark' }))}>\n          Dark\n        </ThemeItem>\n        <ThemeItem onClick={() => dispatch(changeTheme({ theme: 'violet' }))}>\n          Violet\n        </ThemeItem>\n      </ThemesList>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\n\nexport const useClickOutside = (ref, callback) => {\n  const handleClick = evnt => {\n    if (ref.current && !ref.current.contains(evnt.target)) {\n      callback();\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClick);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    };\n  });\n};\n","import styled from 'styled-components';\n\nexport const HeaderStyled = styled.header`\n  position: relative;\n\n  max-width: 375px;\n  display: flex;\n  justify-content: space-between;\n\n  background-color: var(--headerBgColor);\n\n  padding: 14px 20px;\n\n  @media (min-width: 768px) {\n    max-width: 768px;\n    padding: 18px 32px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 1180px;\n    justify-content: flex-end;\n    padding: 18px 24px;\n  }\n`;\n\nexport const MenuBtn = styled.button`\n  border: none;\n  background-color: inherit;\n\n  svg {\n    width: 24px;\n    height: 24px;\n\n    @media (min-width: 768px) {\n      width: 32px;\n      height: 32px;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const HeaderWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: baseline;\n  gap: 14px;\n`;\n\nexport const customStylesForModal = {\n  content: {\n    inset: 0,\n    width: 'fit-content',\n    height: 'fit-content',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n","import { UserInfo } from 'components/UserInfo';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { Sidebar } from 'components/SideBar';\nimport { ThemeSwitcher } from 'components/ThemeSwitcher';\nimport { Icon } from 'components/Icon';\nimport {\n  HeaderStyled,\n  HeaderWrapper,\n  MenuBtn,\n  customStylesForModal,\n} from './Header.styled';\n\nexport const Header = () => {\n  const [isMenuOpen, setIsOpenMenu] = useState(false);\n\n  const openMenu = () => {\n    setIsOpenMenu(true);\n  };\n\n  const closeMenu = () => {\n    setIsOpenMenu(false);\n  };\n\n  return (\n    <HeaderStyled>\n      <MenuBtn type=\"button\" onClick={openMenu}>\n        <Icon name=\"menu\" stroke=\"var(--secondaryTextColor)\" />\n      </MenuBtn>\n\n      <HeaderWrapper>\n        <ThemeSwitcher />\n        <UserInfo />\n      </HeaderWrapper>\n      <Modal\n        isOpen={isMenuOpen}\n        onRequestClose={closeMenu}\n        style={customStylesForModal}\n        contentLabel=\"Sidebar\"\n      >\n        <Sidebar />\n      </Modal>\n    </HeaderStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 300px;\n  height: 234px;\n\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.05);\n  background: var(--modalBgColor);\n`;\n\nexport const FiltersTytle = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  margin-bottom: 28px;\n  color: var(--primaryTextColor);\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const LabelName = styled.p`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  margin-bottom: 14px;\n  display: flex;\njustify-content: space-between;\nalign-items: center;\n  /* margin-left: 24px; */\n  color: var(--primaryTextColor);\n`;","import styled from 'styled-components';\n\nexport const FiltersWrap = styled.div`\n  position: relative;\n  display: flex;\n  gap: 119px;\n  margin-bottom: 14px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: -14px;\n    left: 0;\n    width: 252px;\n    height: 1px;\n    background-color: var(--cardsLine);\n  }\n`;\n\nexport const FilterLabel = styled.p`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n`;\n\nexport const ShowAllBtn = styled.button`\n  border: none;\n  background-color: inherit;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  text-decoration: underline;\n  color: var(--secondaryTextColor);\n  opacity: 0.5;\n  cursor: pointer;\n`;\n\nexport const StyledRadioGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const RadioLabel = styled.label`\n  display: flex;\n  border-radius: 50%;\n  width: 14px;\n  height: 14px;\n  background-color: var(--priority-${({ $priority }) => $priority});\n  transition: var(--transition);\n  cursor: pointer;\n  position: relative;\n\n  > input {\n    display: none;\n  }\n\n  &.checked {\n    &::after {\n      content: '';\n      position: absolute;\n      width: 8px;\n      height: 8px;\n      top: 21%;\n      left: 22%;\n      border-radius: 50%;\n      border: 2px solid var(--primaryBgColor);\n    }\n  }\n`;\n\nexport const FiltersSpan = styled.span`\n  margin-left: 22px;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  opacity: 0.5;\n`;\n","import { nanoid } from '@reduxjs/toolkit';\nimport { useSearchParams } from 'react-router-dom';\nimport { capitalizer } from 'helpers/capitalizer';\nimport {\n  FiltersWrap,\n  FilterLabel,\n  RadioLabel,\n  StyledRadioGroup,\n  ShowAllBtn,\n  FiltersSpan,\n} from './RadioFiltres.styled';\n\nexport const RadioFilters = () => {\n  const listParams = ['without','low', 'medium', 'high', ];\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currValue = searchParams.get('priority');\n\n  const handleFilter = ({ target: { value } }) => {\n    setSearchParams({ priority: value });\n  };\n\n  const handleShowAll = () => {\n    setSearchParams({});\n  }\n\n  return (\n    <>\n      <FiltersWrap>\n        <FilterLabel>Label color</FilterLabel>\n        <ShowAllBtn type=\"button\" onClick={handleShowAll}>\n          Show all\n        </ShowAllBtn>\n      </FiltersWrap>\n      <StyledRadioGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n        {listParams.map(item => (\n          <RadioLabel\n            key={nanoid()}\n            $priority={item}\n            className={currValue === item ? 'checked' : ''}\n          >\n            <input\n              type=\"radio\"\n              name=\"priority\"\n              value={item}\n              checked={currValue === item}\n              onChange={handleFilter}\n            />\n            <FiltersSpan>{capitalizer(item)}</FiltersSpan>\n          </RadioLabel>\n        ))}\n      </StyledRadioGroup>\n    </>\n  );\n};\n","export const capitalizer = str => {\n  return str === 'without'\n    ? `${str} priority`.charAt(0).toUpperCase() + str.slice(1)\n    : str.charAt(0).toUpperCase() + str.slice(1);\n};\n","import {\n  FiltersTytle,\n  ModalWrap,\n  CloseBtn,\n} from './FilterModal.styled';\n\nimport { Icon } from 'components/Icon';\nimport { RadioFilters } from 'components/RadioFiltres';\n\nexport const FilterModal = ({ closeModal }) => {\n  return (\n    <ModalWrap>\n      <FiltersTytle>Filters</FiltersTytle>\n      <CloseBtn type=\"button\" onClick={closeModal}>\n        <Icon name=\"close\" />\n      </CloseBtn>\n      <RadioFilters/>\n    </ModalWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 14px 0px;\n  margin-bottom: 26px;\n\n  @media (min-width: 768px) {\n    padding: 26px 0px;\n  }\n\n  @media (min-width: 1440px) {\n    padding: 10px 0px;\n  }\n`;\n\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0 4px 16px 0 rgba(22, 22, 22, 0.05)',\n    padding: 0,\n    border: 'none',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const BoardTitle = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--primaryTextColor);\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const FilterBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  font-family: 'Poppins-Medium';\n\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  border: none;\n\n  color: var(--secondaryTextColor);\n  background-color: inherit;\n  filter: drop-shadow(0 0 3px var(--primaryBgColor));\n\n  stroke: var(--secondaryTextColor);\n  transition: opacity var(--transition);\n  > svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: var(--accent);\n    stroke: var(--accent);\n  }\n`;\n","import { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { FilterModal } from 'components/FilterModal';\nimport {\n  FilterBtn,\n  BoardTitle,\n  Wrap,\n  customStyles,\n} from './HeaderDashboard.styled';\n\nexport const HeaderDashboard = ({ boardTitle }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <Wrap>\n      {boardTitle && <BoardTitle>{boardTitle}</BoardTitle>}\n      <FilterBtn type=\"button\" onClick={openModal}>\n        <Icon name=\"filter\" />\n        Filters{' '}\n      </FilterBtn>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Filters Modal\"\n      >\n        <FilterModal closeModal={closeModal} />\n      </Modal>\n    </Wrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const CardBody = styled.li`\n  border-radius: 8px;\n  width: 335px; // змінити на /* width: 100%; */ коли стане у колонкуи\n  height: 154px;\n  background: var(--primaryBgColor);\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  position: relative;\n  padding: 14px 20px 14px 24px;\n`;\nexport const CardColor = styled.div`\n  position: absolute;\n  border-radius: 4px 0 0 4px;\n  width: 4px;\n  height: 154px;\n  top: 0px;\n  left: 0px;\n  background-color: var(--priority-${({ $priority }) => $priority});\n`;\nexport const CardTitle = styled.h4`\n  text-align: left;\n  font-family: 'Poppins-SemiBold';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin-bottom: 8px;\n`;\nexport const CardDescription = styled.p`\n  text-align: left;\n  font-size: 12px;\n  line-height: 1.33333;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  width: 290px;\n  height: 38px;\n  overflow: hidden; /* скрывает текст, который не помещается в контейнер */\n  text-overflow: ellipsis; /* отображает многоточие для обрезанного текста */\n  margin-bottom: 14px;\n`;\n\nexport const CardSolid = styled.div`\n  border: 1px solid var(--cards-line);\n  margin-bottom: 14px;\n`;\n\nexport const CardDetals = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const CardInformation = styled.div`\n  display: flex;\n`;\n\nexport const Priority = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 14px;\n`;\n\nexport const PriorityDetals = styled.div`\n  display: flex;\n`;\n\nexport const PriorityTitle = styled.p`\n  text-align: left;\n  font-size: 8px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\nexport const PriorityColor = styled.div`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  margin-right: 4px;\n  background-color: var(--priority-${({ $priority }) => $priority});\n`;\n\nexport const PriorityTipe = styled.p`\n  font-size: 10px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const Deadline = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 14px;\n`;\n\nexport const DeadlineTitle = styled.p`\n  text-align: left;\n  font-size: 8px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\n\nexport const DeadlineDate = styled.p`\n  text-align: left;\n  font-size: 10px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\nexport const CardButtons = styled.div`\n  display: flex;\n  gap: 8px;\n  stroke: var(--secondaryTextColor); //не змінюється в темах\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\nexport const Bell = styled.button`\n  stroke: var(--accent); //не змінюється в темах\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  transition: var(--transition);\n  stroke: var(--secondaryTextColor);\n  &:is(:hover, :focus) {\n    stroke: var(--accent);\n  }\n`;\n","import DatePicker from 'react-datepicker';\nimport { enGB } from 'date-fns/locale';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'components/Calendar/Calendar.css';\n\nexport function Calendar({ selectedDate, onDateChange }) {\n  const handleDateChange = date => {\n    onDateChange(date);\n  };\n\n  return (\n    <DatePicker\n      selected={selectedDate}\n      onChange={handleDateChange}\n      dateFormat=\"MMMM d\"\n      minDate={new Date()}\n      locale={enGB}\n      weekStartsOn={1}\n    />\n  );\n}\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Container = styled.div`\n  border-radius: 8px;\n  height: 522px;\n  position: relative;\n  padding: 24px;\n  width: 100%;\n  background: var(--modalBgColor);\n\n  @media only screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const TitleModal = styled.h2`\n  margin-bottom: 24px;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  line-height: 1.5;\n  color: var(--textColorcalendar);\n`;\n\nexport const CloseModal = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  cursor: pointer;\n\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  color: red;\n  font-size: 12px;\n`;\n\nexport const TitleCard = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 14px;\n\n  background-color: var(--modalBgColor);\n  color: var(--textColorcalendar);\n\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n\nexport const StyledDescription = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  padding-top: 14px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 154px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 24px;\n\n  resize: none;\n\n  color: var(--textColorcalendar);\n  background: var(--modalBgColor);\n\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const LabelColorStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--textCalendar);\n  margin-bottom: 4px;\n`;\n\nexport const StyleRadioButton = styled.div`\n  height: 18px;\n  display: flex;\n  gap: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const DeadlineStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\n\nexport const AddButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  background: var(--accent);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnBgColorHover);\n  }\n  cursor: pointer;\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: var(--btnText);\n  margin-right: 8px;\n  stroke: var(--plusInBtn);\n`;\n\nexport const AddCardButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 335px;\n  height: 56px;\n  background: var(--btnPlus);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Span = styled.span`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--accent);\n`;\n","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const StyledRadioGroup = styled.div`\n  height: 18px;\n  display: flex;\n  gap: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const RadioButton = styled(Field)`\n  display: none;\n`;\n\nexport const RadioLabel = styled.label`\n  border-radius: 50%;\n  width: 14px;\n  height: 14px;\n  background-color: var(--priority-${({ $priority }) => $priority});\n  transition: var(--transition);\n  cursor: pointer;\n  box-sizing: border-box;\n  position: relative;\n\n  &.checked {\n    &::after {\n      content: '';\n      position: absolute;\n      width: 12px;\n      height: 12px;\n      top: 1px;\n      left: 1px;\n      border-radius: 50%;\n      border: 2px solid var(--primaryBgColor);\n    }\n  }\n`;\n","import { nanoid } from '@reduxjs/toolkit';\nimport {\n  RadioButton,\n  RadioLabel,\n  StyledRadioGroup,\n} from './RadioInputs.styled';\nimport { useState } from 'react';\n\nexport const RadioInputs = ({ defaultChecked, onPriorityChange }) => {\n  const list = ['low', 'medium', 'high', 'without'];\n  const [currValue, setCurrValue] = useState(defaultChecked);\n\n  const handleInput = ({ target: { value } }) => {\n    onPriorityChange(value);\n    setCurrValue(value);\n  };\n\n  return (\n    <StyledRadioGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n      {list.map(item => (\n        <RadioLabel\n          key={nanoid()}\n          $priority={item}\n          className={currValue === item ? 'checked' : ''}\n        >\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value={item}\n            checked={currValue === item}\n            onChange={handleInput}\n          />\n        </RadioLabel>\n      ))}\n    </StyledRadioGroup>\n  );\n};\n","import { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Calendar } from 'components/Calendar';\nimport { Icon } from 'components/Icon';\n\nimport {\n  Container,\n  TitleModal,\n  StyledDescription,\n  CloseModal,\n  TitleCard,\n  LabelColorStyle,\n  DeadlineStyle,\n  AddButton,\n  StylePlus,\n  StyledForm,\n  ErrMsg,\n  Label,\n  Span,\n} from './EditCardModal.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { editCard } from '../../redux/cards/cardsOperations.js';\nimport { RadioInputs } from 'components/RadioInputs/RadioInputs.jsx';\n\nconst priority = ['without', 'low', 'medium', 'high'];\n\nconst formCardSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(3, `It's can be up to 3 characters long`)\n    .max(100, 'Too Long!')\n    .required(`This field is required.`),\n  text: Yup.string()\n    .min(10, `It's can be up to 10 characters long`)\n    .max(500, 'Too Long!')\n    .required(`This field is required.`),\n  priority: Yup.string().oneOf(priority),\n  deadline: Yup.date(),\n});\n\nexport default function EditCardModal({ card, onClose }) {\n  const { _id: cardId, title, text, deadline, priority } = card;\n  const [selectedDate, setSelectedDate] = useState(deadline);\n  const dispatch = useDispatch();\n\n  const onSubmit = values => {\n    dispatch(editCard({ values, cardId }));\n    onClose();\n  };\n\n  return (\n    <Container>\n      <TitleModal>Edit card</TitleModal>\n      <CloseModal>\n        <button type=\"button\" onClick={onClose}>\n          <Icon\n            name=\"close\"\n            width=\"18\"\n            height=\"18\"\n            stroke=\"var(--primaryTextColor)\"\n          />\n        </button>\n      </CloseModal>\n      <Formik\n        initialValues={{\n          title,\n          text,\n          priority,\n          deadline: selectedDate,\n        }}\n        validationSchema={formCardSchema}\n        onSubmit={onSubmit}\n      >\n        {({ handleSubmit, setFieldValue }) => (\n          <StyledForm onSubmit={handleSubmit}>\n            <TitleCard type=\"text\" name=\"title\" placeholder=\"Title\" />\n            <ErrMsg component=\"p\" name=\"title\" />\n            <Label>\n              <StyledDescription\n                rows={4}\n                component=\"textarea\"\n                name=\"text\"\n                placeholder=\"Description\"\n              />\n              <ErrMsg component=\"p\" name=\"text\" />\n            </Label>\n            <LabelColorStyle id=\"colorCard-radio-group\">\n              Label color\n            </LabelColorStyle>\n            <RadioInputs\n              defaultChecked={priority}\n              onPriorityChange={priority => {\n                setFieldValue('priority', priority);\n              }}\n            />\n            <DeadlineStyle>Deadline</DeadlineStyle>\n            <div>\n              <Span> Today,</Span>\n              <Calendar\n                selectedDate={selectedDate}\n                onDateChange={date => {\n                  setSelectedDate(date);\n                  setFieldValue('deadline', date);\n                }}\n              />\n            </div>\n            <AddButton type=\"submit\">\n              <StylePlus>\n                <Icon name=\"plus\" width=\"14\" height=\"14\" />\n              </StylePlus>\n              <p>Edit</p>\n            </AddButton>\n          </StyledForm>\n        )}\n      </Formik>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const MoveList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border-radius: 8px;\n  background-color: var(--secondaryBgColor);\n  padding: 10px;\n`;\n","import styled from 'styled-components';\n\nexport const MoveCardItemStyled = styled.li`\n  &.current {\n    color: var(--accent);\n\n    &button {\n      pointer-events: none;\n    }\n  }\n`;\n\nexport const MoveCardItemButtonStyled = styled.button`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  cursor: pointer;\n`;","import { useDispatch } from 'react-redux';\nimport {\n  MoveCardItemButtonStyled,\n  MoveCardItemStyled,\n} from './MoveCardItem.styled';\nimport { chengeColumnsCard } from '../../redux/cards/cardsOperations';\n\nexport const MoveCardItem = ({ column, cardId, currentId }) => {\n  const dispatch = useDispatch();\n  const { _id, title } = column;\n  const current = _id === currentId ? 'current' : '';\n\n  const handleMoveCard = () => {\n    dispatch(chengeColumnsCard({ cardId, toColumnId: _id }));\n  };\n  return (\n    <MoveCardItemStyled className={current}>\n      <MoveCardItemButtonStyled onClick={handleMoveCard}>\n        {title}\n      </MoveCardItemButtonStyled>\n    </MoveCardItemStyled>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { MoveList } from './MoveCardDropdown.styled';\nimport { MoveCardItem } from 'components/MoveCardItem/MoveCardItem';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport const MoveCardDropdown = ({ currColumnId, cardId }) => {\n  const { columns } = useSelector(state => state.columns);\n  \n\n  return (\n    <MoveList>\n      {columns.map(item => {\n        return (\n          <MoveCardItem\n            currentId={currColumnId}\n            key={nanoid()}\n            column={item}\n            cardId={cardId}\n          />\n        );\n      })}\n    </MoveList>\n  );\n};\n","import { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\n\nimport {\n  CardBody,\n  CardDetals,\n  Priority,\n  PriorityDetals,\n  CardColor,\n  CardTitle,\n  CardDescription,\n  CardSolid,\n  PriorityTitle,\n  PriorityTipe,\n  PriorityColor,\n  Deadline,\n  DeadlineTitle,\n  DeadlineDate,\n  CardButtons,\n  CardInformation,\n  Bell,\n  Button,\n} from './Card.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteCard } from '../../redux/cards/cardsOperations';\nimport EditCardModal from 'components/EditCardModal/EditCardModal';\nimport { MoveCardDropdown } from 'components/MoveCardDropdown/MoveCardDropdown';\n\nexport default function Card({ card }) {\n  const [modalCardIsOpen, setmodalCardIsOpen] = useState(false);\n  const [isOpenMoveCardModal, setIsOpenMoveCardModal] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    _id: cardId,\n    title,\n    text,\n    deadline,\n    priority,\n    column: { _id: columnId },\n  } = card;\n  const dateDeadline = new Date(deadline);\n  const formatedDate = `${dateDeadline.getDate()}/${\n    dateDeadline.getMonth() + 1\n  }/${dateDeadline.getFullYear()}`;\n  const cardTextDescription = text.substring(0, 90) + '...';\n\n  const openCardModal = () => {\n    setmodalCardIsOpen(true);\n  };\n\n  const closeCardModal = () => {\n    setmodalCardIsOpen(false);\n  };\n\n  const handleDeleteCard = () => {\n    dispatch(deleteCard({ cardId }));\n  };\n\n  const hendleMoveCardModalOpen = () => {\n    setIsOpenMoveCardModal(true);\n  };\n\n  const hendleMoveCardModalClose = () => {\n    setIsOpenMoveCardModal(false);\n  };\n\n  return (\n    <CardBody>\n      <CardColor $priority={priority}></CardColor>\n      <CardTitle>{title}</CardTitle>\n      <CardDescription>{cardTextDescription}</CardDescription>\n      <CardSolid></CardSolid>\n      <CardDetals>\n        <CardInformation>\n          <Priority>\n            <PriorityTitle>Priority</PriorityTitle>\n            <PriorityDetals>\n              <PriorityColor $priority={priority}></PriorityColor>\n              <PriorityTipe>{priority}</PriorityTipe>\n            </PriorityDetals>\n          </Priority>\n          <Deadline>\n            <DeadlineTitle>Deadline</DeadlineTitle>\n            <DeadlineDate>{formatedDate}</DeadlineDate>\n          </Deadline>\n        </CardInformation>\n        <CardButtons>\n          <Bell type=\"button\">\n            <Icon name=\"bell\" width=\"16\" height=\"16\" />\n          </Bell>\n          <Button type=\"button\" onClick={hendleMoveCardModalOpen}>\n            <Icon name=\"arrow-in-circle\" width=\"16\" height=\"16\" />\n          </Button>\n          <Button type=\"button\" onClick={openCardModal}>\n            <Icon name=\"pencil\" width=\"16\" height=\"16\" />\n          </Button>\n          <Button type=\"button\" onClick={handleDeleteCard}>\n            <Icon name=\"trash\" width=\"16\" height=\"16\" />\n          </Button>\n        </CardButtons>\n      </CardDetals>\n      <Modal\n        isOpen={modalCardIsOpen}\n        onRequestClose={closeCardModal}\n        className={'modal-content'}\n        overlayClassName={'modal-overlay'}\n      >\n        <EditCardModal card={card} onClose={closeCardModal} />\n      </Modal>\n      <Modal\n        isOpen={isOpenMoveCardModal}\n        onRequestClose={hendleMoveCardModalClose}\n        className={'modal-content'}\n        overlayClassName={'modal-overlay'}\n      >\n        <MoveCardDropdown currColumnId={columnId} cardId={cardId} />\n      </Modal>\n    </CardBody>\n  );\n}\n","import styled from 'styled-components';\n\nexport const HeadWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 335px;\n  height: 56px;\n\n  padding: 17px 20px;\n\n  border-radius: 8px;\n\n  background-color: var(--extraBgColor);\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const CardList = styled.ul`\n  > li:not(:last-of-type) {\n    margin-bottom: 10px;\n  }\n  border-radius: 12px;\n\n  @media (min-width: 768px) {\n  }\n\n  @media (min-width: 1440px) {\n  }\n\n  overflow: auto;\n  padding: 0;\n\n  &::-webkit-scrollbar {\n    width: 8px; /* ширина скролбару */\n  }\n\n  &::-webkit-scrollbar-track {\n    background: var(--scroll-col); /* колір фону всієї доріжки скролбару */\n    border-radius: 12px; // заокруглення доріжки скролу\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: var(--scroll-col-bg); // колір самого скролу\n    border-radius: 12px; /* заокруглення самого скролу */\n\n    &:hover {\n      background-color: var(\n        --scroll-col-bg-hover\n      ); // колір самого скролу при наведенні\n    }\n  }\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const IconedBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  border: none;\n  background-color: inherit;\n\n  stroke: var(--secondaryTextColor);\n  transition: opacity var(--transition);\n\n  > svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    stroke: var(--accent);\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  width: 335px;\n  height: 56px;\n\n  padding: 10px 0 11px 0;\n\n  border: none;\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--btnText);\n  background-color: var(--btnBgColor);\n  transition: background-color var(--transition);\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnBgColorHover);\n  }\n`;\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n\n  border-radius: 8px;\n\n  background-color: var(--btnText);\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--plusInBtn);\n  }\n`;\n\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Container = styled.div`\n  border-radius: 8px;\n  height: 522px;\n  position: relative;\n  padding: 24px;\n  width: 100%;\n  background: var(--modalBgColor);\n\n  display: flex;\n  flex-direction: column;\n\n  @media only screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const TitleModal = styled.h2`\n  margin-bottom: 24px;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  line-height: 1.5;\n  color: var(--textColorcalendar);\n`;\n\nexport const CloseModal = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  cursor: pointer;\n\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  color: red;\n  font-size: 12px;\n`;\n\nexport const TitleCard = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 14px;\n  transition: var(--transition);\n  background-color: var(--modalBgColor);\n  color: var(--textColorcalendar);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n\nexport const StyledDescription = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  padding-top: 14px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 154px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 24px;\n\n  resize: none;\n\n  color: var(--textColorcalendar);\n  background: var(--modalBgColor);\n\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const LabelColorStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--textCalendar);\n  margin-bottom: 4px;\n`;\n\nexport const StyleRadioButton = styled.div`\n  height: 18px;\n  display: flex;\n  gap: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const RadioButton = styled(Field)`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n`;\nexport const RadioButtonBlu = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: #8fa1d0;\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid #8fa1d0;\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const RadioButtonRed = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: #e09cb5;\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid #e09cb5;\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const RadioButtonGreen = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: #bedbb0;\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid #bedbb0;\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const RadioButtonGrey = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: rgba(22, 22, 22, 0.3);\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid rgba(22, 22, 22, 0.3);\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const DeadlineStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\n\nexport const AddButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  background-color: var(--accent);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnBgColorHover);\n  }\n  cursor: pointer;\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: var(--btnText);\n  margin-right: 8px;\n  stroke: var(--plusInBtn);\n`;\n\nexport const AddCardButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 335px;\n  height: 56px;\n  background: var(--btnPlus);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Span = styled.span`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--accent);\n`;\n","import { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Calendar } from 'components/Calendar';\nimport { Icon } from 'components/Icon';\n\nimport {\n  Container,\n  TitleModal,\n  StyledDescription,\n  CloseModal,\n  TitleCard,\n  LabelColorStyle,\n  DeadlineStyle,\n  AddButton,\n  StylePlus,\n  StyledForm,\n  ErrMsg,\n  Label,\n  Span,\n} from './AddCardModal.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { addCard } from '../../redux/cards/cardsOperations.js';\nimport { RadioInputs } from 'components/RadioInputs/RadioInputs.jsx';\n\nconst priority = ['without', 'low', 'medium', 'high'];\n\nconst formCardSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(3, `It's can be up to 3 characters long`)\n    .max(100, 'Too Long!')\n    .required(`This field is required.`),\n  text: Yup.string()\n    .min(10, `It's can be up to 10 characters long`)\n    .max(500, 'Too Long!')\n    .required(`This field is required.`),\n  priority: Yup.string().oneOf(priority),\n  deadline: Yup.date(),\n});\n\nexport default function AddCardModal({ title, btnText, onClose, columnId }) {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const dispatch = useDispatch();\n\n  const onSubmit = values => {\n    dispatch(addCard({ values, columnId }));\n    onClose();\n  };\n\n  return (\n    <Container>\n      <TitleModal>{title}</TitleModal>\n      <CloseModal>\n        <button type=\"button\" onClick={onClose}>\n          <Icon\n            name=\"close\"\n            width=\"18\"\n            height=\"18\"\n            stroke=\"var(--textColorcalendar)\"\n          />\n        </button>\n      </CloseModal>\n      <Formik\n        initialValues={{\n          title: '',\n          text: '',\n          priority: 'without',\n          deadline: selectedDate,\n        }}\n        validationSchema={formCardSchema}\n        onSubmit={onSubmit}\n      >\n        {({ handleSubmit, setFieldValue }) => (\n          <StyledForm onSubmit={handleSubmit}>\n            <TitleCard type=\"text\" name=\"title\" placeholder=\"Title\" />\n            <ErrMsg component=\"p\" name=\"title\" />\n            <Label>\n              <StyledDescription\n                rows={4}\n                component=\"textarea\"\n                name=\"text\"\n                placeholder=\"Description\"\n              />\n              <ErrMsg component=\"p\" name=\"text\" />\n            </Label>\n            <LabelColorStyle id=\"colorCard-radio-group\">\n              Label color\n            </LabelColorStyle>\n            <RadioInputs\n              defaultChecked=\"without\"\n              onPriorityChange={priority => {\n                setFieldValue('priority', priority);\n              }}\n            />\n            <DeadlineStyle>Deadline</DeadlineStyle>\n            <div>\n              <Span> Today,</Span>\n              <Calendar\n                selectedDate={selectedDate}\n                onDateChange={date => {\n                  setSelectedDate(date);\n                  setFieldValue('deadline', date);\n                }}\n              />\n            </div>\n            <AddButton type=\"submit\">\n              <StylePlus>\n                <Icon name=\"plus\" width=\"14\" height=\"14\" />\n              </StylePlus>\n              <p>{btnText}</p>\n            </AddButton>\n          </StyledForm>\n        )}\n      </Formik>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const HeadWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 335px;\n  height: 56px;\n\n  margin-bottom: 14px;\n  padding: 17px 20px;\n\n  border-radius: 8px;\n\n  background-color: var(--extraBgColor);\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const IconedBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  border: none;\n  background-color: inherit;\n\n  stroke: var(--secondaryTextColor);\n  transition: opacity var(--transition);\n\n  > svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    stroke: var(--accent);\n  }\n`;\n\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n","import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const customModalStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    // backgroundColor: '#151515',\n    backgroundColor: 'var(--modalBgColor)',\n  },\n//   overlay: {\n//     backgroundColor: 'rgba(0,0,0,0.5)',\n//   },\n};\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid rgba(190, 219, 176, 0.5);\n  border-radius: 8px;\n  width: 350px;\n  height: 221px;\n  /* background: #151515; */\n  background: var(--modalBgColor);\n  gap: 24px;\n`;\n\nexport const StyledField = styled(Field)`\n  font: inherit;\n  cursor: pointer;\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 400; */\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  /* border: 1px solid #bedbb0; */\n  border: 1px solid var(--btnPlus);\n  border-radius: 8px;\n  width: 302px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  /* background: #1f1f1f; */\n  background: var(--secondaryBgColor);\n  opacity: 0.4;\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  /* opacity: 0.5; */\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const Label = styled.label`\n  font-family: 'Poppins-Medium';\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 500; */\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  /* color: #fff; */\n  color: var(--primaryTextColor);\n`;\n\nexport const Button = styled.button`\n  font: inherit;\n  cursor: pointer;\n  border-radius: 8px;\n  width: 302px;\n  height: 49px;\n  /* background: #bedbb0; */\n  background: var(--btnPlus);\n  font-size: 20px;\n`;\n\nexport const ButtonText = styled.span`\n  font-family: 'Poppins-Medium';\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 500; */\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  /* color: #161616; */\n  color: var(--headerBgColor);\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  color: #f5530d;\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: black;\n  margin-right: 8px;\n  stroke: white;\n\n`;","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icon';\nimport {\n  Button,\n  ButtonText,\n  CloseBtn,\n  Label,\n  StylePlus,\n  StyledField,\n  StyledForm,\n} from './EditColumnFormik.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { editColumn } from '../../redux/columns/columnsOperations.js';\n\nconst addColumnFormSchema = Yup.object().shape({\n  title: Yup.string().min(2, 'Too short!').required('This field is required!'),\n});\n\nexport const EditColumnFormik = ({ title, columnId, onClose }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = body => {\n    dispatch(editColumn({ body, columnId }));\n  };\n\n  return (\n    <>\n      <Label>Edit column</Label>\n      <CloseBtn\n        type=\"button\"\n        onClick={onClose}\n        style={{ stroke: 'var(--primaryTextColor)' }}\n      >\n        <Icon name=\"close\" width=\"18\" height=\"18\" />\n      </CloseBtn>\n      <Formik\n        initialValues={{\n          title,\n        }}\n        validationSchema={addColumnFormSchema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <StyledField type=\"text\" name=\"title\" placeholder=\"Title\" />\n          <Button type=\"submit\">\n            <StylePlus>\n              <Icon name=\"plus\" width=\"14\" height=\"14\" />\n            </StylePlus>\n            <ButtonText>Edit</ButtonText>\n          </Button>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n","import { Icon } from 'components/Icon';\nimport {\n  HeadWrap,\n  IconedBtn,\n  Title,\n  Wrap,\n  customStyles,\n} from './ColumnHead.styled';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport { EditColumnFormik } from 'components/EditColumnFormik';\nimport { useDispatch } from 'react-redux';\nimport { deleteColumn } from '../../redux/columns/columnsOperations';\n\nexport const ColumnHead = ({ title, columnId }) => {\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleModalOpen = () => {\n    setIsOpenModal(true);\n  };\n\n  const handleModalClose = () => {\n    setIsOpenModal(false);\n  };\n\n  const handleDeleteColumn = () => {\n    dispatch(deleteColumn({ columnId }));\n  };\n\n  return (\n    <>\n      <HeadWrap>\n        <Title>{title}</Title>\n        <Wrap>\n          <IconedBtn type=\"button\" onClick={handleModalOpen}>\n            <Icon name=\"pencil\" />\n          </IconedBtn>\n          <IconedBtn type=\"button\" onClick={handleDeleteColumn}>\n            <Icon name=\"trash\" />\n          </IconedBtn>\n        </Wrap>\n      </HeadWrap>\n      <Modal\n        isOpen={isOpenModal}\n        onRequestClose={handleModalClose}\n        style={customStyles}\n        contentLabel=\"Column Edit Modal\"\n        ariaHideApp={false}\n      >\n        <EditColumnFormik\n          title={title}\n          columnId={columnId}\n          onClose={handleModalClose}\n        />\n      </Modal>\n    </>\n  );\n};\n","import { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport Card from 'components/Card/Card';\nimport { AddBtn, CardList, IconWrap, customStyles } from './Column.styled';\nimport AddCardModal from 'components/AddCardModal/AddCardModal';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { ColumnHead } from 'components/ColumnHead';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const Column = ({ columnId, title }) => {\n  const [modalCardIsOpen, setmodalCardIsOpen] = useState(false);\n  const { cards } = useSelector(state => state.cards);\n  const [searchParams] = useSearchParams();\n  const priority = searchParams.get('priority');\n\n  let filtredCards = cards?.filter(({ column: { _id } }) => _id === columnId);\n\n  if (priority) {\n    filtredCards = filtredCards?.filter(card => card.priority === priority)\n  };\n\n  const openCardModal = () => {\n    setmodalCardIsOpen(true);\n  };\n\n  const closeCardModal = () => {\n    setmodalCardIsOpen(false);\n  };\n\n  return (\n    <>\n      <ColumnHead title={title} columnId={columnId} />\n      <CardList>\n        {filtredCards.map(card => (\n          <Card key={nanoid()} card={card} />\n        ))}\n      </CardList>\n      <AddBtn type=\"button\" onClick={openCardModal}>\n        <IconWrap>\n          <Icon name=\"plus\" />\n        </IconWrap>{' '}\n        Add another card\n      </AddBtn>\n      <Modal\n        isOpen={modalCardIsOpen}\n        onRequestClose={closeCardModal}\n        style={customStyles}\n        contentLabel=\"Card Add Modal\"\n        ariaHideApp={false}\n      >\n        <AddCardModal\n          columnId={columnId}\n          title={'Add card'}\n          btnText={'Add'}\n          onClose={closeCardModal}\n        />\n      </Modal>\n    </>\n  );\n};\n","import styled from 'styled-components';\n// import 'react-perfect-scrollbar/dist/css/styles.css';\n\nexport const Container = styled.div`\n  max-width: 347px;\n\n  @media (min-width: 768px) {\n    max-width: 718px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 1128px;\n  }\n\n  &.scrollbar-container {\n    height: auto;\n  }\n  overflow: auto;\n  padding: 0 0 8px;\n\n  &::-webkit-scrollbar {\n    width: 12px; /* ширина скролбару */\n    height: 12px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: var(--scroll); /* колір фону всієї доріжки скролбару */\n    border-radius: 12px; // заокруглення доріжки скролу\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: var(--scrollBg); // колір самого скролу\n    border-radius: 12px; /* заокруглення самого скролу */\n\n    &:hover {\n      background-color: var(\n        --scroll-bg-hover\n      ); // колір самого скролу при наведенні\n    }\n  }\n`;\n\nexport const customStyles = { \n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const ColumnList = styled.ul`\n  display: flex;\n  gap: 18px;\n`;\n\nexport const ColumnItem = styled.li`\n  display: grid;\n  grid-template-rows: 56px minmax(0, 1fr) 56px;\n  gap: 14px;\n  width: 347px;\n  height: calc(90vh - 80px);\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  gap: 18px;\n  align-items: flex-start;\n  padding: 0 0 8px;\n`;\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  min-width: 334px;\n  width: 334px;\n\n  padding: 14px 78px;\n\n  border: none;\n  border-radius: 8px;\n\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--secondaryTextColor);\n  background-color: var(--extraBgColor);\n\n  opacity: 1;\n  transition: color background-color var(--transition);\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: var(--btnText);\n    background-color: var(--btnBgColor);\n  }\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n`;\n\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n  border: 1px solid black;\n  border-radius: 8px;\n  stroke: var(--extraBgColor);\n\n  background-color: var(--squareIconColor);\n  transition: background-color stroke var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnText);\n    stroke: var(--plusInBtn);\n  }\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--extraBgColor);\n  }\n`;\n","import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid rgba(190, 219, 176, 0.5);\n  border-radius: 8px;\n  width: 350px;\n  height: 221px;\n  /* background: #151515; */\n  background: var(--modalBgColor);\n  gap: 24px;\n`;\n\nexport const StyledField = styled(Field)`\n  font: inherit;\n  cursor: pointer;\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 400; */\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  /* border: 1px solid #bedbb0; */\n  border: 1px solid var(--btnPlus);\n  border-radius: 8px;\n  width: 302px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  /* background: #1f1f1f; */\n  background: var(--secondaryBgColor);\n  opacity: 0.4;\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  /* opacity: 0.5; */\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const Label = styled.label`\n  font-family: 'Poppins-Medium';\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 500; */\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  /* color: #fff; */\n  color: var(--primaryTextColor);\n`;\n\nexport const Button = styled.button`\n  font: inherit;\n  cursor: pointer;\n  border-radius: 8px;\n  width: 302px;\n  height: 49px;\n  /* background: #bedbb0; */\n  background: var(--btnPlus);\n  font-size: 20px;\n`;\n\nexport const ButtonText = styled.span`\n  font-family: 'Poppins-Medium';\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 500; */\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  /* color: #161616; */\n  color: var(--headerBgColor);\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  color: #f5530d;\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: black;\n  margin-right: 8px;\n  stroke: white;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icon';\nimport {\n  Button,\n  ButtonText,\n  CloseBtn,\n  Label,\n  StylePlus,\n  StyledField,\n  StyledForm,\n} from './AddColumnFormik.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { addColumn } from '../../redux/columns/columnsOperations.js';\n\nconst addColumnFormSchema = Yup.object().shape({\n  title: Yup.string().min(2, 'Too short!').required('This field is required!'),\n});\n\nexport const AddColumnFormik = ({ boardId, onClose }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = body => {\n    dispatch(addColumn({ body, boardId }));\n  };\n\n  return (\n    <>\n      <Label>Add column</Label>\n      <CloseBtn\n        type=\"button\"\n        onClick={onClose}\n        style={{ stroke: 'var(--primaryTextColor)' }}\n      >\n        <Icon name=\"close\" width=\"18\" height=\"18\" />\n      </CloseBtn>\n      <Formik\n        initialValues={{\n          title: '',\n        }}\n        validationSchema={addColumnFormSchema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <StyledField type=\"text\" name=\"title\" placeholder=\"Title\" />\n          <Button type=\"submit\">\n            <StylePlus>\n              <Icon name=\"plus\" width=\"14\" height=\"14\" />\n            </StylePlus>\n            <ButtonText>Add</ButtonText>\n          </Button>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n","import { Column } from 'components/Column';\nimport {\n  IconWrap,\n  AddBtn,\n  Wrap,\n  ColumnItem,\n  Container,\n  ColumnList,\n  customStyles,\n} from './Board.styled';\nimport { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { AddColumnFormik } from 'components/AddColumnFormik/AddColumnFormik';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useParams } from 'react-router-dom';\n\nexport const Board = () => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const { columns } = useSelector(state => state.columns);\n  const { boardId } = useParams();\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n  return (\n    <>\n      <Container>\n        <Wrap>\n          <ColumnList>\n            {columns.map(({ _id, title }) => {\n              return (\n                <ColumnItem key={nanoid()}>\n                  <Column title={title} columnId={_id} />\n                </ColumnItem>\n              );\n            })}\n          </ColumnList>\n          <AddBtn type=\"button\" onClick={openModal}>\n            <IconWrap>\n              <Icon name=\"plus\" />\n            </IconWrap>{' '}\n            Add another column\n          </AddBtn>\n        </Wrap>\n      </Container>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Column Edit Modal\"\n        ariaHideApp={false}\n      >\n        <AddColumnFormik onClose={closeModal} boardId={boardId} />\n      </Modal>\n    </>\n  );\n};\n","import { HeaderDashboard } from 'components/HeaderDashboard';\nimport { Board } from 'components/Board';\n\nexport const ScreensPage = ({ boardTitle }) => {\n  return (\n    <>\n      <HeaderDashboard boardTitle={boardTitle} />\n      <Board />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StartContainer = styled.div`\n  height: 80vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const StartText = styled.p`\n  min-width: 280px;\n\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  line-height: 1.33;\n\n  color: var(--secondaryTextColor);\n\n  @media (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media (min-width: 768px) {\n    line-height: 1.29;\n    width: 486px;\n    margin: auto;\n  }\n`;\n\n\n\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const BoardCreationBtn = styled.button`\n  margin: 0;\n  padding: 0;\n\n  border: none;\n  outline: none;\n\n  background-color: inherit;\n  color: var(--btnPlus);\n  cursor: pointer;\n  transition: color var(--transition);\n  &:hover,\n  &:focus {\n    color: var(--btnPlusHover);\n  }\n`;\n","import {\n  StartText,\n  BoardCreationBtn,\n  customStyles,\n  StartContainer,\n} from './StartScreen.styled';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { BoardCreatingModal } from 'components/BoardCreatingModal';\n\nexport const StartScreen = () => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <StartContainer>\n      <StartText>\n        Before starting your project, it is essential{' '}\n        <BoardCreationBtn type=\"button\" onClick={openModal}>\n          to create a board\n        </BoardCreationBtn>{' '}\n        to visualize and track all the necessary tasks and milestones. This\n        board serves as a powerful tool to organize the workflow and ensure\n        effective collaboration among team members.\n      </StartText>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Board Creation Modal\"\n        ariaHideApp={false}\n      >\n        <BoardCreatingModal onClose={closeModal} />\n      </Modal>\n    </StartContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SidebarWrapper = styled.aside`\n  @media screen and (max-width: 1439px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 14px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    grid-column: 1 / 2;\n    grid-row-start: 1;\n    grid-row-end: 3;\n  }\n`;\n\nexport const Main = styled.main`\n  grid-column: 1 / 2;\n  grid-row: 2 / 3;\n  padding: 10px 24px;\n  min-height: 812px;\n  background-color: var(--secondaryBgColor);\n  background-image: url(${props => props.$backgroundImg}_375x812.webp);\n  background-repeat: no-repeat;\n  max-width: 375px;\n  height: auto;\n  background-position: center;\n  background-size: cover;\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${props => props.$backgroundImg}_750x1624.webp);\n  }\n  @media (min-width: 768px) {\n    background-image: url(${props => props.$backgroundImg}_768x956.webp);\n    max-width: 768px;\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${props => props.$backgroundImg}_1536x1912.webp);\n    }\n  }\n\n  @media (min-width: 1440px) {\n    background-image: url(${props => props.$backgroundImg}_1180x770.webp);\n    max-width: 1180px;\n    grid-column: 2 / 3;\n    grid-row: 2 / 3;\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${props => props.$backgroundImg}_2360x1540.webp);\n    }\n  }\n`;\n","import { useEffect } from 'react';\nimport { Header } from 'components/Header';\nimport { Sidebar } from 'components/SideBar';\nimport { ScreensPage } from 'components/ScreensPage';\nimport { StartScreen } from 'components/StartScreen';\nimport { Main, SidebarWrapper } from './HomePage.styled';\nimport { useSelector } from 'react-redux';\nimport { Outlet, useNavigate, useParams } from 'react-router-dom';\nimport { fetchBoardById } from '../../redux/boards/boardsOperations';\nimport { fetchColumnsByBoardId } from '../../redux/columns/columnsOperations';\nimport { fetchCards } from '../../redux/cards/cardsOperations';\nimport {\n  selectCurrentBoard,\n  selectBoards,\n} from '../../redux/boards/boardsSelectors';\nimport { useDispatch } from 'react-redux';\nimport { useAuth } from 'hooks';\n\nexport default function HomePage() {\n  const { boardId } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const boardFromLS = localStorage.getItem('lastBoard');\n  const { isLoggedIn } = useAuth();\n  const boards = useSelector(selectBoards);\n\n  useEffect(() => {\n    const setLastBoard = () => {\n      if (boards.length === 0) {\n        localStorage.removeItem('lastBoard');\n        navigate(`/`);\n        return;\n      }\n\n      if (boardFromLS) {\n        navigate(`/${boardFromLS}`);\n      }\n    };\n    \n    setLastBoard();\n    return () => {\n      setLastBoard();\n    };\n  }, [boardFromLS, navigate, boards]);\n\n  useEffect(() => {\n    if (boardId && isLoggedIn) {\n      dispatch(fetchBoardById(boardId));\n      dispatch(fetchColumnsByBoardId(boardId));\n      dispatch(fetchCards(boardId));\n    }\n    return () => {};\n  }, [boardId, dispatch, isLoggedIn]);\n\n  const { background = 'diego', title } = useSelector(selectCurrentBoard);\n  const baseUrl =\n    'https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/';\n  const backgroundImgUrl = baseUrl + background;\n  return (\n    <>\n      <Header />\n      <SidebarWrapper>\n        <Sidebar />\n      </SidebarWrapper>\n      {boardId ? (\n        <Main $backgroundImg={backgroundImgUrl}>\n          <ScreensPage boardTitle={title} />\n          <Outlet />\n        </Main>\n      ) : (\n        <StartScreen />\n      )}\n    </>\n  );\n}\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Name","_templateObject2","Avatar","_templateObject3","Button","_templateObject4","ButtonSvg","_templateObject5","Title","StyledForm","Form","StyledField","Field","LastField","_templateObject6","ErrMsg","ErrorMessage","_templateObject7","Label","_templateObject8","StyledLabel","_templateObject9","ContainerAvatar","Input","UpdateAvatar","user","useAuth","showSvg","showImage","dispatch","useDispatch","filePicker","useRef","_jsxs","children","_jsx","Icon","name","fill","stroke","width","height","src","avatarURL","alt","onClick","current","click","type","ref","onChange","event","selectedFile","target","files","updateAvatar","accept","EditProfileSchema","Yup","shape","min","max","matches","required","email","password","EditProfile","_ref","closeModal","Formik","initialValues","validationSchema","onSubmit","values","actions","update","id","component","placeholder","customStyles","content","top","left","right","bottom","padding","transform","boxShadow","borderRadius","overlay","background","UserInfo","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","openModal","Modal","isOpen","style","contentLabel","selectBoards","state","boards","selectCurrentBoard","_state$boards","currentBoard","sendDataEmail","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","axios","toast","t0","stop","_x","apply","arguments","ContainerForModal","TitleForModal","StyledFormInModal","StyledFieldInModal","StyledTextareaInModal","ButtonForModal","ButtonClose","emailForSupport","textMessage","builderSchema","SendEmail","onClose","form","resetForm","rows","NeedHelpBlock","NeedHelpBtn","NeedHelp","srcSet","color","onRequestClose","BoardCreationBlock","BtnCreate","ModalWrap","ModalTitle","CloseBtn","FormWrap","Text","IconsListWrap","InvisibleInput","BackgroundsPallet","_templateObject10","LabelPic","_templateObject11","Div","_templateObject12","AddBtn","_templateObject13","IconWrap","_templateObject14","iconsArr","backgroundsArr","schema","title","icon","oneOf","BoardCreatingModal","navigate","useNavigate","_d","useSelector","addBoard","concat","map","el","value","srcSetPath","srcDefault","BoardCreation","btnText","ControlIconsContainer","BoardItemContainer","BoardEditModal","board","boardId","_id","editBoard","BoardItem","tagName","localStorage","setItem","handleSelectBoard","selected","opacity","deleteBoard","Logo","BoardContainer","BoardList","LogOut","Sidebar","useEffect","fetchBoards","_Fragment","logOut","DrpdwnBtn","ThemesList","visibility","_ref2","_ref3","ThemeItem","ThemeSwitcher","setIsOpen","menuRef","callback","handleClick","evnt","contains","document","addEventListener","removeEventListener","useClickOutside","setTimeout","heigth","changeTheme","theme","HeaderStyled","MenuBtn","HeaderWrapper","customStylesForModal","inset","Header","isMenuOpen","setIsOpenMenu","FiltersTytle","FiltersWrap","FilterLabel","ShowAllBtn","StyledRadioGroup","RadioLabel","$priority","FiltersSpan","RadioFilters","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","currValue","get","handleFilter","priority","role","item","className","checked","str","charAt","toUpperCase","slice","nanoid","FilterModal","Wrap","border","BoardTitle","FilterBtn","HeaderDashboard","boardTitle","CardBody","CardColor","CardTitle","CardDescription","CardSolid","CardDetals","CardInformation","Priority","PriorityDetals","PriorityTitle","PriorityColor","PriorityTipe","Deadline","DeadlineTitle","DeadlineDate","_templateObject15","CardButtons","_templateObject16","Bell","_templateObject17","_templateObject18","Calendar","selectedDate","onDateChange","DatePicker","date","dateFormat","minDate","Date","locale","enGB","weekStartsOn","TitleModal","CloseModal","TitleCard","StyledDescription","LabelColorStyle","DeadlineStyle","AddButton","StylePlus","Span","RadioButton","RadioInputs","defaultChecked","onPriorityChange","setCurrValue","handleInput","formCardSchema","text","deadline","EditCardModal","card","cardId","setSelectedDate","editCard","handleSubmit","setFieldValue","MoveList","MoveCardItemStyled","MoveCardItemButtonStyled","MoveCardItem","column","currentId","chengeColumnsCard","toColumnId","MoveCardDropdown","currColumnId","columns","Card","modalCardIsOpen","setmodalCardIsOpen","_useState3","_useState4","isOpenMoveCardModal","setIsOpenMoveCardModal","columnId","dateDeadline","formatedDate","getDate","getMonth","getFullYear","cardTextDescription","substring","closeCardModal","deleteCard","overlayClassName","CardList","_templateObject19","_templateObject20","AddCardModal","addCard","HeadWrap","IconedBtn","ButtonText","addColumnFormSchema","EditColumnFormik","body","editColumn","ColumnHead","isOpenModal","setIsOpenModal","handleModalClose","deleteColumn","ariaHideApp","Column","_filtredCards","cards","filtredCards","filter","ColumnList","ColumnItem","AddColumnFormik","addColumn","Board","modalIsOpen","useParams","ScreensPage","StartContainer","StartText","BoardCreationBtn","StartScreen","SidebarWrapper","Main","props","$backgroundImg","HomePage","boardFromLS","getItem","isLoggedIn","setLastBoard","length","removeItem","fetchBoardById","fetchColumnsByBoardId","fetchCards","_useSelector","_useSelector$backgrou","backgroundImgUrl","Outlet"],"sourceRoot":""}