{"version":3,"file":"static/js/411.ecb9bb3a.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/AuthPage/AuthPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const LabelStyled = styled.label`\n  position: relative;\n`;\nexport const LoginStyledSection = styled.div`\n  background: linear-gradient(rgba(255, 255, 255, 1) 30%, #bedbb0 92.19%);\n  width: 100vw;\n  height: 812px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  @media only screen and (min-width: 768px) {\n    height: 1024px;\n  }\n  @media only screen and (min-width: 1440px) {\n    height: 770px;\n  }\n`;\nexport const LogInputStyled = styled.input`\n  display: flex;\n  width: 287px;\n  height: 49px;\n  color: rgba(255, 255, 255, 0.3);\n  background: inherit;\n  padding: 15px;\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  border-radius: 8px;\n  outline: none;\n  &:hover,\n  &:focus,\n  &:active {\n    color: white;\n    border-color: rgba(190, 219, 176, 1);\n  }\n  @media only screen and (min-width: 768px) {\n    width: 344px;\n  }\n`;\nexport const IconStyledEye = styled.i`\n  position: absolute;\n  top: 33%;\n  right: 5%;\n`;\n\nexport const StyledNavLinkLogin = styled(NavLink)`\n  font-family: 'Poppins-medium', sans-serif;\n  color: rgba(255, 255, 255, 0.3);\n  font-size: 18px;\n  cursor: pointer;\n  &:hover,\n  &:focus,\n  &:active {\n    color: white;\n  }\n  &.active {\n    color: white;\n  }\n`;\nexport const FormLoginStyled = styled.form`\n  width: 335px;\n  height: 300px;\n  padding: 20px 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  background: rgba(21, 21, 21, 1);\n  border-radius: 8px;\n  gap: 10px;\n  @media only screen and (min-width: 768px) {\n    width: 424px;\n    height: 332px;\n    padding: 40px 38px;\n  }\n`;\nexport const WrapForLoginNav = styled.div`\n  display: flex;\n  align-items: start;\n  width: 100%;\n  gap: 15px;\n  margin-bottom: 25px;\n`;\nexport const ButtonLogin = styled.button`\n  font-family: 'Poppins-medium', sans-serif;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  cursor: pointer;\n  color: black;\n  width: 287px;\n  height: 49px;\n  background: rgba(190, 219, 176, 1);\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  border-radius: 8px;\n  &:hover,\n  &:focus {\n    background: rgba(157, 200, 136, 1);\n  }\n  @media only screen and (min-width: 768px) {\n    width: 344px;\n  }\n`;\n","import { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\n// import { NavLink } from 'react-router-dom';\nimport { logInUser } from '../../redux/auth/authOperation';\nimport { useState } from 'react';\nimport { Icon } from 'components/Icon';\nimport {\n  ButtonLogin,\n  FormLoginStyled,\n  IconStyledEye,\n  LabelStyled,\n  LogInputStyled,\n  LoginStyledSection,\n  StyledNavLinkLogin,\n  WrapForLoginNav,\n} from './LoginForm.styled';\n\nexport const LoginForm = () => {\n  const [passwordShown, setPasswordShown] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors, isValid },\n  } = useForm({ mode: 'onBlur' });\n  const onSubmit = data => {\n    dispatch(logInUser(data));\n    reset();\n  };\n\n  return (\n    <LoginStyledSection>\n      <FormLoginStyled onSubmit={handleSubmit(onSubmit)}>\n        <WrapForLoginNav>\n          <StyledNavLinkLogin to=\"/auth/register\">\n            Registration\n          </StyledNavLinkLogin>\n          <StyledNavLinkLogin to=\"/auth/login\">Login</StyledNavLinkLogin>\n        </WrapForLoginNav>\n        <LogInputStyled\n          placeholder=\"Enter your email\"\n          name=\"email\"\n          type=\"email\"\n          {...register('email', {\n            required: 'Required field',\n            pattern: /^\\S+@\\S+$/i,\n          })}\n        ></LogInputStyled>\n        <div>\n          {errors?.email && (\n            <p style={{ color: 'red' }}>{errors?.email?.message || 'Error'}</p>\n          )}\n        </div>\n        <LabelStyled>\n          <LogInputStyled\n            placeholder=\"Confirm a password\"\n            name=\"password\"\n            type={passwordShown ? 'text' : 'password'}\n            {...register('password', {\n              required: 'Required field',\n              minLength: {\n                value: 8,\n                message: 'Password must include minimum 8 characters',\n              },\n            })}\n          ></LogInputStyled>\n          <IconStyledEye\n            onClick={() => {\n              setPasswordShown(!passwordShown);\n            }}\n          >\n            <Icon\n              name=\"eye\"\n              stroke={passwordShown ? 'white' : 'rgba(255, 255, 255, 0.3)'}\n            />\n          </IconStyledEye>\n        </LabelStyled>\n        <div>\n          {errors?.password && (\n            <p style={{ color: 'red' }}>\n              {errors?.password?.message || 'Error'}\n            </p>\n          )}\n        </div>\n\n        <ButtonLogin type=\"submit\" disabled={!isValid}>\n          Login Now\n        </ButtonLogin>\n      </FormLoginStyled>\n    </LoginStyledSection>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const LabelStyled = styled.label`\n  position: relative;\n`;\nexport const RegisterStyledSection = styled.div`\n  background: linear-gradient(rgba(255, 255, 255, 1) 30%, #bedbb0 92.19%);\n  width: 100vw;\n  height: 812px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  @media only screen and (min-width: 768px) {\n    height: 1024px;\n  }\n  @media only screen and (min-width: 1440px) {\n    height: 770px;\n  }\n`;\nexport const RegInputStyled = styled.input`\n  display: flex;\n  width: 287px;\n  height: 49px;\n  color: rgba(255, 255, 255, 0.3);\n  background: inherit;\n  padding: 15px;\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  border-radius: 8px;\n  outline: none;\n  &:hover,\n  &:focus,\n  &:active {\n    color: white;\n    border-color: rgba(190, 219, 176, 1);\n  }\n  @media only screen and (min-width: 768px) {\n    width: 344px;\n  }\n`;\nexport const IconStyledEye = styled.i`\n  position: absolute;\n  top: 33%;\n  right: 5%;\n  &:hover {\n    stroke: white;\n  }\n`;\n\nexport const StyledNavLinkRegister = styled(NavLink)`\n  font-family: 'Poppins-medium', sans-serif;\n  color: rgba(255, 255, 255, 0.3);\n  font-size: 18px;\n  cursor: pointer;\n  &:hover,\n  &:focus,\n  &:active {\n    color: white;\n  }\n  &.active {\n    color: white;\n  }\n`;\nexport const FormRegisterStyled = styled.form`\n  width: 335px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  background: rgba(21, 21, 21, 1);\n  border-radius: 8px;\n  gap: 18px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 30px 24px;\n  @media only screen and (min-width: 768px) {\n    width: 424px;\n    padding: 50px 42px;\n  }\n`;\nexport const WrapForRegNav = styled.div`\n  display: flex;\n  align-items: start;\n  width: 100%;\n  gap: 15px;\n  margin-bottom: 30px;\n`;\nexport const ButtonRegister = styled.button`\n  font-family: 'Poppins-medium', sans-serif;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  cursor: pointer;\n  color: black;\n  width: 287px;\n  height: 49px;\n  background: rgba(190, 219, 176, 1);\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  border-radius: 8px;\n  &:hover,\n  &:focus {\n    background: rgba(157, 200, 136, 1);\n  }\n  @media only screen and (min-width: 768px) {\n    width: 344px;\n  }\n`;\n","import { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from '../../redux/auth/authOperation';\n\nimport { useState } from 'react';\nimport { Icon } from 'components/Icon';\nimport {\n  ButtonRegister,\n  FormRegisterStyled,\n  IconStyledEye,\n  LabelStyled,\n  // IconStyledEye,\n  RegInputStyled,\n  RegisterStyledSection,\n  StyledNavLinkRegister,\n  WrapForRegNav,\n} from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    reset,\n    formState: { errors, isValid },\n  } = useForm({ mode: 'all' });\n\n  const onSubmit = data => {\n    dispatch(\n      registerUser({\n        name: data.name,\n        email: data.email,\n        password: data.password,\n      })\n    );\n    reset();\n  };\n\n  return (\n    <RegisterStyledSection>\n      <FormRegisterStyled onSubmit={handleSubmit(onSubmit)}>\n        <WrapForRegNav>\n          <StyledNavLinkRegister to=\"/auth/register\">\n            Registration\n          </StyledNavLinkRegister>\n          <StyledNavLinkRegister to=\"/auth/login\">Login</StyledNavLinkRegister>\n        </WrapForRegNav>\n        <RegInputStyled\n          placeholder=\"Enter your name\"\n          {...register('name', {\n            required: 'Required field',\n            minLength: {\n              value: 2,\n              message: 'Name is too short',\n            },\n          })}\n        ></RegInputStyled>\n        <div>\n          {errors?.name && (\n            <p style={{ color: 'red' }}>{errors?.name?.message || 'Error'}</p>\n          )}\n        </div>\n        <RegInputStyled\n          placeholder=\"Enter your email\"\n          name=\"email\"\n          type=\"email\"\n          {...register('email', {\n            required: 'Required field',\n            pattern: {\n              value: /^\\S+@\\S+$/i,\n              message: 'Email must include @ and .',\n            },\n          })}\n        ></RegInputStyled>\n        <div>\n          {errors?.email && (\n            <p style={{ color: 'red' }}>{errors?.email?.message || 'Error'}</p>\n          )}\n        </div>\n        <LabelStyled>\n          <RegInputStyled\n            placeholder=\"Create a password\"\n            name=\"password\"\n            type={passwordShown ? 'text' : 'password'}\n            {...register('password', {\n              required: 'Required field',\n              minLength: {\n                value: 8,\n                message: 'Password must include minimum 8 characters',\n              },\n            })}\n          ></RegInputStyled>\n          <IconStyledEye\n            onClick={() => {\n              setPasswordShown(!passwordShown);\n            }}\n          >\n            <Icon\n              name=\"eye\"\n              stroke={passwordShown ? 'white' : 'rgba(255, 255, 255, 0.3)'}\n            />\n          </IconStyledEye>\n        </LabelStyled>\n        <div>\n          {errors?.password && (\n            <p style={{ color: 'red' }}>\n              {errors?.password?.message || 'Error'}\n            </p>\n          )}\n        </div>\n        <RegInputStyled\n          placeholder=\"Confirm your password\"\n          name=\"confirmPassword\"\n          type=\"password\"\n          {...register('confirm_password', {\n            required: true,\n            validate: val => {\n              if (watch('password') !== val) {\n                return 'Your passwords do no match';\n              }\n            },\n          })}\n        />\n        <div>\n          {errors?.confirm_password && (\n            <p style={{ color: 'red' }}>\n              {errors?.confirm_password?.message || 'Error'}\n            </p>\n          )}\n        </div>\n        <ButtonRegister type=\"submit\" disabled={!isValid}>\n          Register Now\n        </ButtonRegister>\n      </FormRegisterStyled>\n    </RegisterStyledSection>\n  );\n};\n","import { LoginForm } from 'components/LoginForm';\nimport { RegisterForm } from 'components/RegisterForm';\nimport { useParams } from 'react-router-dom';\n\nexport default function AuthPage() {\n  let { id } = useParams();\n  return <div>{id === 'login' ? <LoginForm /> : <RegisterForm />}</div>;\n}"],"names":["LabelStyled","styled","_templateObject","_taggedTemplateLiteral","LoginStyledSection","_templateObject2","LogInputStyled","_templateObject3","IconStyledEye","_templateObject4","StyledNavLinkLogin","NavLink","_templateObject5","FormLoginStyled","_templateObject6","WrapForLoginNav","_templateObject7","ButtonLogin","_templateObject8","LoginForm","_errors$email","_errors$password","_useState","useState","_useState2","_slicedToArray","passwordShown","setPasswordShown","dispatch","useDispatch","_useForm","useForm","mode","register","handleSubmit","reset","_useForm$formState","formState","errors","isValid","_jsx","children","_jsxs","onSubmit","data","logInUser","to","_objectSpread","placeholder","name","type","required","pattern","email","style","color","message","minLength","value","onClick","Icon","stroke","password","disabled","RegisterStyledSection","RegInputStyled","StyledNavLinkRegister","FormRegisterStyled","WrapForRegNav","ButtonRegister","RegisterForm","_errors$name","_errors$confirm_passw","watch","registerUser","validate","val","confirm_password","AuthPage","id","useParams"],"sourceRoot":""}