{"version":3,"file":"static/js/473.c88fce24.chunk.js","mappings":"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","sources":["components/UserInfo/UserInfo.styled.js","components/EditProfile/EditProfile.styled.js","components/UpdateAvatar/UpdateAvatar.styled.js","components/UpdateAvatar/UpdateAvatar.jsx","schemas/editProfileSchema.js","components/EditProfile/EditProfile.jsx","components/UserInfo/UserInfo.jsx","redux/boards/boardsSelectors.js","services/sendDataEmail.js","components/SendEmail/SendEmail.styled.js","components/SendEmail/SendEmail.jsx","components/NeedHelp/NeedHelp.styled.js","components/NeedHelp/NeedHelp.jsx","components/SidebarBoardCreation/BoardCreation.styled.js","components/BoardCreatingModal/BoardCreatingModal.styled.js","components/BoardCreatingModal/BoardCreatingModal.jsx","components/SidebarBoardCreation/BoardCreation.jsx","components/BoardItem/BoardItem.styled.js","components/BoardEditModal/BoardEditModal.styled.js","components/BoardEditModal/BoardEditModal.jsx","components/BoardItem/BoardItem.jsx","components/SideBar/SideBar.styled.js","components/SideBar/SideBar.jsx","components/ThemeSwitcher/ThemeSwitcher.styled.js","components/ThemeSwitcher/ThemeSwitcher.jsx","hooks/useClickOutside.js","helpers/scrollSwitcher.js","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/FilterModal/FilterModal.styled.js","components/RadioFiltres/RadioFiltres.styled.js","components/RadioFiltres/RadioFiltres.jsx","helpers/capitalizer.js","components/FilterModal/FilterModal.jsx","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/HeaderDashboard/HeaderDashboard.jsx","components/Card/Card.styled.js","components/Calendar/Calendar.js","components/EditCardModal/EditCardModal.styled.js","components/RadioInputs/RadioInputs.styled.js","components/RadioInputs/RadioInputs.jsx","components/EditCardModal/EditCardModal.jsx","components/MoveCardDropdown/MoveCardDropdown.styled.js","components/MoveCardItem/MoveCardItem.styled.js","components/MoveCardItem/MoveCardItem.jsx","components/MoveCardDropdown/MoveCardDropdown.jsx","components/Card/Card.jsx","components/Column/Column.styled.js","components/AddCardModal/AddCardModal.styled.js","components/AddCardModal/AddCardModal.jsx","components/ColumnHead/ColumnHead.styled.js","components/EditColumnFormik/EditColumnFormik.styled.js","components/EditColumnFormik/EditColumnFormik.jsx","components/ColumnHead/ColumnHead.jsx","components/Column/Column.jsx","components/Board/Board.styled.js","components/AddColumnFormik/AddColumnFormik.styled.js","components/AddColumnFormik/AddColumnFormik.jsx","components/Board/Board.jsx","components/ScreensPage/ScreensPage.jsx","components/StartScreen/StartScreen.styled.js","components/StartScreen/StartScreen.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const Name = styled.p`\n  margin: 5px 0;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -2;\n  color: var(--secondaryTextColor);\n`;\n\nexport const Avatar = styled.img`\n  border-radius: 8px;\n  cursor: pointer;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 10px;\n  color: var(--primaryTextColor);\n  background: var(--modalBgColor);\n  border: 0;\n  cursor: pointer;\n`;\n\nexport const ButtonSvg = styled.button`\n  line-height: 0;\n  padding: 0;\n  margin: 0;\n  border: 0;\n  border-radius: 8px;\n  background-color: var(--primaryBgColor);\n  cursor: pointer;\n`;\n\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Container = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 100%;\n  height: 440px;\n  border-radius: 8px;\n  background: var(--modalBgColor);\n\n  @media only screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin: 0 0 24px 0;\n  font-family: 'Poppins-Medium';\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledField = styled(Field)`\n  position: relative;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  width: 100%;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  opacity: 0.4;\n  border-radius: 8px;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  background-color: var(--modalBgColor);\n  color: var(--secondaryTextColor);\n  transition: opacity var(--transition);\n\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n`;\n\nexport const LastField = styled(Field)`\n  margin-bottom: 24px;\n  padding: 14px 18px;\n  width: 100%;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  opacity: 0.4;\n  border-radius: 8px;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  background: var(--modalBgColor);\n  color: var(--secondaryTextColor);\n  transition: opacity var(--transition);\n\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  background: var(--accent);\n  border: 0;\n  border-radius: 8px;\n  padding: 14px 126px;\n  color: var(--btnText);\n  font-family: 'Poppins-Medium';\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0, 02em;\n  transition: background-color var(--transition);\n  &:hover,\n  &:focus {\n    background: var(--hover);\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  font-size: 12px;\n  font-style: italic;\n  color: red;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n\nexport const StyledLabel = styled.label`\n  position: relative;\n  display: block;\n\n  svg {\n    position: absolute;\n    top: 16px;\n    right: 15px;\n    opacity: 0, 5;\n\n    &:active {\n      opacity: 1;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ContainerAvatar = styled.div`\n  margin-bottom: 25px;\n  position: relative;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Avatar = styled.img`\n  border-radius: 8px;\n`;\n\nexport const Input = styled.input`\n  opacity: 0;\n  height: 0;\n  width: 0;\n  line-height: 0;\n  overfow: hidden;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 56px;\n  left: 46%;\n\n  width: 24px;\n  height: 24px;\n  background: var(--accent);\n  border-radius: 8px;\n  border: 0;\n  transition: background-color var(--transition);\n\n  &:hover,\n  &:focus {\n    background: var(--hover);\n  }\n\n  @media only screen and (min-width: 768px) {\n    left: 47%;\n  }\n`;\n","import { useRef } from 'react';\nimport { Input, Button, ContainerAvatar, Avatar } from './UpdateAvatar.styled';\n\nimport { useAuth } from 'hooks';\nimport { useDispatch } from 'react-redux';\nimport { updateAvatar } from '../../redux/auth/authOperation';\n\nimport { Icon } from 'components/Icon';\nimport { toast } from 'react-hot-toast';\n\nconst cloudinaryBaseURL =\n  'https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707503119/';\n\nexport const UpdateAvatar = () => {\n  const { user } = useAuth();\n  const { showImage } = useAuth();\n\n  const dispatch = useDispatch();\n\n  const filePicker = useRef(null);\n\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n    toast.promise(dispatch(updateAvatar(selectedFile)), {\n      loading: 'Saving...',\n      success: <b>Settings saved!</b>,\n      error: <b>Opps, something went wrong...</b>,\n    });\n  };\n\n  const handlePick = () => {\n    filePicker.current.click();\n  };\n\n  return (\n    <ContainerAvatar>\n      {showImage ? (\n        <Avatar\n          src={cloudinaryBaseURL + user.avatarURL}\n          width=\"68\"\n          height=\"68\"\n          alt=\"user photo\"\n        />\n      ) : (\n        <Icon name=\"user\" width=\"68\" height=\"68\" />\n      )}\n\n      <Button onClick={handlePick}>\n        <Icon name=\"plus\" width=\"10px\" height=\"10px\" stroke=\"#161616\" />\n      </Button>\n      <Input\n        type=\"file\"\n        ref={filePicker}\n        onChange={handleFileChange}\n        accept=\"image/*,.jpg,.png,.gif,.web,\"\n      />\n    </ContainerAvatar>\n  );\n};\n","import * as Yup from 'yup';\n\nexport const EditProfileSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, '2 chars minimum')\n    .max(32, '32 chars maximum')\n    .matches(/^[a-zA-Z0-9!@#$%^&*(),.?\":{}|<>]+$/, 'Invalin name ')\n    .required('this field is required'),\n  email: Yup.string().email('Invalid email').required('this field is required'),\n  password: Yup.string()\n    .min(8, '8 chars minimum')\n    .max(64, '64 chars maximum')\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*(),.?\":{}|<>]+$/,\n      'only latin letters, numbers and symbols'\n    )\n    .matches(/^\\S*$/, 'password must not contain spaces')\n    .required('this field is required '),\n});","import {\n  Container,\n  Title,\n  Button,\n  StyledForm,\n  StyledField,\n  LastField,\n  ErrMsg,\n  StyledLabel,\n  Label,\n} from './EditProfile.styled';\nimport { Formik } from 'formik';\n\nimport { useAuth } from 'hooks';\nimport { update } from '../../redux/auth/authOperation';\nimport { useDispatch } from 'react-redux';\nimport { UpdateAvatar } from 'components/UpdateAvatar';\nimport { Icon } from 'components/Icon';\nimport { EditProfileSchema } from 'schemas/editProfileSchema';\n\nexport const EditProfile = ({ closeModal }) => {\n  const { user } = useAuth();\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <Title>Edit profile</Title>\n      <UpdateAvatar />\n\n      <Formik\n        initialValues={{\n          name: user.name,\n          email: user.email,\n          password: '',\n        }}\n        validationSchema={EditProfileSchema}\n        onSubmit={(values, actions) => {\n          dispatch(update(values));\n          closeModal();\n        }}\n      >\n        <StyledForm>\n          <Label>\n            <StyledField id=\"name\" name=\"name\" />\n            <ErrMsg name=\"name\" component=\"p\" />\n          </Label>\n\n          <Label>\n            <StyledField id=\"email\" name=\"email\" type=\"email\" />\n            <ErrMsg name=\"email\" component=\"p\" />\n          </Label>\n\n          <StyledLabel>\n            <Icon name=\"eye\" stroke=\"var(--secondaryTextColor)\" />\n            <LastField\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Enter or update your password\"\n            />\n            <ErrMsg name=\"password\" component=\"p\" />\n          </StyledLabel>\n\n          <Button type=\"submit\">Submit</Button>\n        </StyledForm>\n      </Formik>\n    </Container>\n  );\n};\n","import { Container, Name, Avatar, Button, ButtonSvg } from './UserInfo.styled';\nimport { EditProfile } from 'components/EditProfile';\nimport { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\n\nimport { useAuth } from 'hooks';\n\nconst cloudinaryBaseURL =\n  'https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707503119/';\n\nexport const UserInfo = () => {\n  const { user } = useAuth();\n  const { showImage } = useAuth();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <Container>\n      <Name>{user.name}</Name>\n      <ButtonSvg onClick={openModal}>\n        {showImage ? (\n          <Avatar\n            src={cloudinaryBaseURL + user.avatarURL}\n            width=\"32\"\n            height=\"32\"\n            alt=\"user photo\"\n            onClick={openModal}\n          />\n        ) : (\n          <Icon name=\"user\" width=\"32px\" height=\"32px\" />\n        )}\n      </ButtonSvg>\n\n      <Modal\n        isOpen={isModalOpen}\n        className=\"modal-content\"\n        overlayClassName=\"modal-overlay\"\n        contentLabel=\"Modal\"\n        onRequestClose={closeModal}\n      >\n        <EditProfile closeModal={closeModal} />\n        <Button onClick={closeModal}>\n          <Icon name=\"close\" stroke=\"var(--secondaryTextColor)\" />\n        </Button>\n      </Modal>\n    </Container>\n  );\n};\n","export const selectBoards = state => state.boards?.boards;\nexport const selectCurrentBoard = state => state.boards?.currentBoard;","import axios from 'axios';\nimport toast from 'react-hot-toast';\n\nexport const sendDataEmail = async data => {\n  try {\n    await axios.post('/support', data);\n    toast.success('Successfully sent!');\n  } catch (error) {\n    toast.error('Oops. Something went wrong.');\n  }\n};\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const ContainerForModal = styled.div`\n  position: relative;\n  padding: 24px 34px 50px 24px;\n  width: 320px;\n  height: 381px;\n\n  background-color: var(--modalBgColor);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.05);\n\n  @media only screen and (min-width: 375px) {\n    width: 345px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 400px;\n    height: 355px;\n    padding: 24px;\n  }\n`;\n\nexport const TitleForModal = styled.h2`\n  margin-bottom: 24px;\n\n  text-align: start;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--textColorcalendar);\n`;\nexport const StyledFormInModal = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledFieldInModal = styled(Field)`\n  position: relative;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  width: 100%;\n\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  resize: none;\n  opacity: 0.4;\n\n  font-size: 14px;\n  line-height: 1.4;\n\n  background: var(--modalBgColor);\n  color: var(--textColorcalendar);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n\n  transition: opacity var(--transition);\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: 19px;\n    width: 100%;\n  }\n  @media only screen and (min-width: 1440px) {\n    margin-bottom: 14px;\n  }\n`;\n\nexport const StyledTextareaInModal = styled(Field)`\n  position: relative;\n  margin-bottom: 24px;\n  padding: 14px 18px;\n  width: 100%;\n\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  resize: none;\n  opacity: 0.4;\n\n  font-size: 14px;\n  height: calc(30px * 4);\n  line-height: 1.5;\n  color: var(--textColorcalendar);\n  background: var(--modalBgColor);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n\n  transition: opacity var(--transition);\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 100%;\n  }\n`;\n\nexport const ButtonForModal = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 49px;\n  width: 100%;\n\n  background-color: var(--accent);\n  border: 0;\n  border-radius: 8px;\n\n  color: var(--btnText);\n  font-size: 14px;\n  line-height: 1.5;\n  cursor: pointer;\n\n  transition: background-color var(--transition);\n\n  &:hover,\n  :focus {\n    background-color: var(--btnBgColorHover);\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 100%;\n  }\n`;\n\nexport const ButtonClose = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  padding: 0;\n  border: none;\n  background: none;\n\n  cursor: pointer;\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  font-size: 12px;\n  font-style: italic;\n  color: red;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { sendDataEmail } from 'services/sendDataEmail';\nimport {\n  ButtonClose,\n  ButtonForModal,\n  ContainerForModal,\n  ErrMsg,\n  Label,\n  StyledFieldInModal,\n  StyledFormInModal,\n  StyledTextareaInModal,\n  TitleForModal,\n} from './SendEmail.styled';\nimport { Icon } from 'components/Icon';\n\nconst initialValues = {\n  emailForSupport: '',\n  textMessage: '',\n};\n\nconst builderSchema = Yup.object().shape({\n  emailForSupport: Yup.string().email().required('This field is required'),\n  textMessage: Yup.string()\n    .min(5, `It's can be up to 5 characters long`)\n    .required(`This field is required`),\n});\n\nexport const SendEmail = ({ onClose }) => {\n  const onSubmit = (data, form) => {\n    sendDataEmail(data);\n    form.resetForm();\n    onClose();\n  };\n\n  return (\n    <ContainerForModal>\n      <TitleForModal>Need help</TitleForModal>\n      <ButtonClose type=\"button\" onClick={onClose}>\n        <Icon\n          stroke=\"var(--textColorcalendar)\"\n          name=\"close\"\n          width=\"18\"\n          height=\"18\"\n        />\n      </ButtonClose>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={builderSchema}\n        onSubmit={onSubmit}\n      >\n        <StyledFormInModal>\n          <Label>\n            <StyledFieldInModal\n              type=\"email\"\n              name=\"emailForSupport\"\n              placeholder=\"Email address\"\n            />\n            <ErrMsg component=\"p\" name=\"emailForSupport\" />\n          </Label>\n\n          <Label>\n            <StyledTextareaInModal\n              rows={4}\n              component=\"textarea\"\n              type=\"text\"\n              name=\"textMessage\"\n              placeholder=\"Comment\"\n            />\n            <ErrMsg component=\"p\" name=\"textMessage\" />\n          </Label>\n\n          <ButtonForModal type=\"submit\">Send</ButtonForModal>\n        </StyledFormInModal>\n      </Formik>\n    </ContainerForModal>\n  );\n};\n","import styled from 'styled-components';\n\nexport const NeedHelpBlock = styled.div`\n  margin-bottom: 24px;\n  font-size: 12px;\n  border-radius: 8px;\n  background-color: var(--needHelpBg);\n  padding: 14px;\n  margin: 0 14px;\n\n  p {\n    margin-top: 14px;\n    margin-bottom: 18px;\n    line-height: 1.33333;\n    letter-spacing: 0;\n  }\n\n  @media only screen and (min-width: 768px) {\n    padding: 20px;\n    \n    p {\n      font-size: 14px;\n    }\n  }\n`;\n\nexport const NeedHelpBtn = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  background: none;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  span {\n    margin-left: 8px;\n    color: var(--primaryTextColor);\n    font-family: 'Poppins-Medium';\n  }\n`;","import { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { SendEmail } from 'components/SendEmail';\nimport { NeedHelpBlock, NeedHelpBtn } from './NeedHelp.styled';\n\nexport const NeedHelp = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <NeedHelpBlock>\n      <picture>\n        <source\n          srcSet=\"\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-1x.webp 1x,\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-2x.webp 2x\n            \"\n        />\n        <img\n          src=\"https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-1x.webp\"\n          width=\"54\"\n          height=\"78\"\n          alt=\"little cute cactus\"\n        />\n      </picture>\n      <p>\n        If you need help with{' '}\n        <span style={{ color: 'var(--accent)' }}>TaskPro</span>, check out our\n        support resources or reach out to our customer support team.\n      </p>\n      <NeedHelpBtn type=\"button\" onClick={openModal}>\n        <Icon\n          name=\"help\"\n          width=\"20\"\n          height=\"20\"\n          stroke=\"var(--primaryTextColor)\"\n        />\n        <span>Need help?</span>\n      </NeedHelpBtn>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        contentLabel=\"Need help modal\"\n        className=\"modal-content\"\n        overlayClassName=\"modal-overlay\"\n      >\n        <SendEmail onClose={closeModal} />\n      </Modal>\n    </NeedHelpBlock>\n  );\n};\n","import styled from 'styled-components';\n\nexport const BoardCreationBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-top: 1px solid var(--cardsLine);\n  border-bottom: 1px solid var(--cardsLine);\n  font-family: 'Poppins-Medium';\n  padding: 14px;\n  margin-bottom: 40px;\n\n  @media only screen and (min-width: 768px) {\n    padding: 14px 24px 14px 16px;\n  }\n`;\n\nexport const BoardText = styled.p`\n  width: 77px;\n`;\n\nexport const BtnCreate = styled.button`\n  width: 40px;\n  height: 36px;\n  background-color: var(--btnPlus);\n  border: none;\n  border-radius: 6px;\n  transition: var(--transition);\n  cursor: pointer;\n  stroke: var(--btnText);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnPlusHover);\n  }\n`;","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 335px;\n  height: 433px;\n\n  border-radius: 8px;\n\n  background-color: var(--modalBgColor);\n\n  stroke: var(--primaryTextColor);\n\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const ModalTitle = styled.h3`\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Medium';\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--textColorcalendar);\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--textColorcalendar);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const FormWrap = styled(Form)`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const Input = styled(Field)`\n  width: 287px;\n  height: 49px;\n  padding: 14px 0 14px 18px;\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Regular';\n  font-size: 14px;\n\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n\n  color: var(--textColorcalendar);\n  background-color: var(--modalBgColor);\n  opacity: 0.4;\n  transition: opacity var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 14px;\n\n  color: var(--textColorcalendar);\n`;\n\nexport const IconsListWrap = styled.ul`\n  display: flex;\n  gap: 8px;\n\n  margin-bottom: 24px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 0;\n\n  border: none;\n  background-color: inherit;\n\n  width: 18px;\n  height: 18px;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  cursor: pointer;\n  > svg {\n    stroke: var(--secondaryTextColor);\n  }\n\n  &:focus,\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const InvisibleInput = styled(Field)`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n\nexport const BackgroundsPallet = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  width: 252px;\n  height: 60px;\n  margin-bottom: 40px;\n`;\n\nexport const LabelPic = styled.label``;\n\nexport const Div = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  transition: transform var(--transition);\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  min-width: 287px;\n  height: 49px;\n\n  padding: 10px 0 11px 0;\n  border: none;\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--btnText);\n  background-color: var(--accent);\n  transition: background-color var(--transition);\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnBgColorHover);\n  }\n`;\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n\n  border-radius: 8px;\n\n  background-color: var(--btnText);\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--plusInBtn);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport { addBoard } from '../../redux/boards/boardsOperations';\nimport { Icon } from 'components/Icon';\nimport * as Yup from 'yup';\nimport {\n  FormWrap,\n  Input,\n  Text,\n  AddBtn,\n  IconWrap,\n  ModalWrap,\n  CloseBtn,\n  ModalTitle,\n  IconsListWrap,\n  InvisibleInput,\n  BackgroundsPallet,\n  Label,\n  LabelPic,\n  Div,\n} from './BoardCreatingModal.styled.js';\n\n\nconst iconsArr = [\n  'four-circles',\n  'star',\n  'loading',\n  'puzzle',\n  'container',\n  'lightning',\n  'colors',\n  'hexagon',\n];\n\nconst backgroundsArr = [\n  'noBack',\n  'miklos',\n  'eberhard',\n  'diego',\n  'vino',\n  'vickholius',\n  'romello',\n  'kace',\n  'milad',\n  'gaetan',\n  'florian',\n  'tony',\n  'nicolas',\n  'gabriella',\n  'igor',\n  'zhou',\n];\n\nconst schema = Yup.object({\n  title: Yup.string().required(),\n  icon: Yup.string().oneOf(iconsArr).required(),\n  background: Yup.string().oneOf(backgroundsArr).required(),\n});\n\nexport const BoardCreatingModal = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const initialValues = {\n    title: '',\n    icon: 'four-circles',\n    background: 'noBack',\n  };\n\n  const onSubmit = async values => {\n    const { payload: { _id } } = await dispatch(addBoard(values));\n    \n    localStorage.setItem('lastBoard', _id);\n    navigate(`/${_id}`);\n    onClose();\n  };\n\n  return (\n    <ModalWrap>\n      <ModalTitle>New board</ModalTitle>\n      <CloseBtn type=\"button\" onClick={onClose}>\n        <Icon name=\"close\" />\n      </CloseBtn>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={onSubmit}\n      >\n        <FormWrap>\n          <Input type=\"text\" placeholder=\"Title\" name=\"title\" />\n          <Text>Icons</Text>\n\n          <IconsListWrap>\n            {iconsArr.map(el => (\n              <li key={el}>\n                <Label>\n                  <Icon name={el} />\n                  <InvisibleInput type=\"radio\" name=\"icon\" value={el} />\n                </Label>\n              </li>\n            ))}\n          </IconsListWrap>\n\n          <Text>Backgrounds</Text>\n          <BackgroundsPallet>\n            {backgroundsArr.map(el => {\n              const srcSetPath = ` https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp 1x,\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_56x56.webp 2x`;\n              const srcDefault = `https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp`;\n              return (\n                <li key={el}>\n                  <LabelPic>\n                    <Div>\n                      <picture>\n                        <source srcSet={srcSetPath} />\n                        <img src={srcDefault} alt=\"background example\" />\n                      </picture>\n                    </Div>\n                    <InvisibleInput type=\"radio\" name=\"background\" value={el} />\n                  </LabelPic>\n                </li>\n              );\n            })}\n          </BackgroundsPallet>\n\n          <AddBtn type=\"submit\">\n            <IconWrap>\n              <Icon name=\"plus\" />\n            </IconWrap>{' '}\n            Create\n          </AddBtn>\n        </FormWrap>\n      </Formik>\n    </ModalWrap>\n  );\n};\n","import { useState } from \"react\";\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport {\n  BoardCreationBlock,\n  BtnCreate,\n  BoardText,\n} from './BoardCreation.styled';\nimport { BoardCreatingModal } from \"components/BoardCreatingModal\";\n\n\nexport const BoardCreation = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <BoardCreationBlock>\n      <BoardText>\n        Create a{' '}new board\n      </BoardText>\n      <BtnCreate type=\"button\" onClick={openModal}>\n        <Icon name=\"plus\" width=\"20\" height=\"20\" />\n      </BtnCreate>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        className=\"modal-content\"\n        overlayClassName=\"modal-overlay\"\n        contentLabel=\"Creation board modal\"\n      >\n        <BoardCreatingModal\n          onClose={closeModal}\n          title=\"New board\"\n          btnText=\"Create\"\n        />\n      </Modal>\n    </BoardCreationBlock>\n  );\n};","import styled from 'styled-components';\n\nexport const ControlIconsContainer = styled.div`\n  margin-left: auto;\n  margin-right: 0px;\n  display: none;\n  gap: 8px;\n\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\n\nexport const BoardItemContainer = styled.li`\n  min-height: 61px;\n  max-height: 61px;\n  padding: 0 14px 0 14px;\n  display: flex;\n  align-items: center;\n  stroke: var(--primaryTextColor);\n  opacity: 0.5;\n  transition: var(--transition);\n  width: 100%;\n  cursor: pointer;\n\n  p {\n    max-width: 120px;\n    margin-left: 8px;\n    font-family: 'Poppins-Medium';\n    font-size: 14px;\n    word-wrap: break-word;\n  }\n\n  ${props =>\n    props.selected &&\n    `\n  opacity: 1;  \n  &:after {\n    content: '';\n    display: block;\n    border-radius: 4px 0 0 4px;\n    width: 4px;\n    height: 61px;\n    margin-right: -14px;\n    margin-left: auto;\n    background-color: var(--borderInThemeModal);\n  }\n`}\n\n  &:hover,\n  &:focus,\n  &.active {\n    background-color: var(--needHelpBg);\n    opacity: 1;\n\n    > ${ControlIconsContainer} {\n      display: flex;\n      opacity: 0.5;\n    }\n\n    &:after {\n      margin-left: 10px;\n    }\n  }\n\n  @media only screen and (min-width: 768px) {\n    margin: 0 -24px 0 -24px;\n    p {\n      max-width: 140px;\n    }\n  }\n`;","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 335px;\n  height: 433px;\n\n  border-radius: 8px;\n\n  background-color: var(--modalBgColor);\n\n  stroke: var(--primaryTextColor);\n\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const ModalTitle = styled.h3`\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Medium';\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--textColorcalendar);\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--textColorcalendar);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const FormWrap = styled(Form)`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const Input = styled(Field)`\n  width: 287px;\n  height: 49px;\n  padding: 14px 0 14px 18px;\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Regular';\n  font-size: 14px;\n\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n\n  color: var(--textColorcalendar);\n  background-color: var(--modalBgColor);\n  opacity: 0.4;\n\n  transition: opacity var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 14px;\n\n  color: var(--textColorcalendar);\n`;\n\nexport const IconsListWrap = styled.ul`\n  display: flex;\n  gap: 8px;\n\n  margin-bottom: 24px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 0;\n\n  border: none;\n  background-color: inherit;\n\n  width: 18px;\n  height: 18px;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  cursor: pointer;\n  \n\n  &:focus,\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const InvisibleInput = styled(Field)`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n\nexport const BackgroundsPallet = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  width: 252px;\n  height: 60px;\n  margin-bottom: 40px;\n`;\n\nexport const LabelPic = styled.label``;\n\nexport const Div = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  transition: transform var(--transition);\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  min-width: 287px;\n  height: 49px;\n\n  padding: 10px 0 11px 0;\n  border: none;\n\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--btnText);\n  background-color: var(--accent);\n  transition: background-color var(--transition);\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnBgColorHover);\n  }\n`;\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n\n  border-radius: 8px;\n\n  background-color: var(--btnText);\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--plusInBtn);\n  }\n`;\n","import { Icon } from 'components/Icon';\nimport * as Yup from 'yup';\nimport {\n  FormWrap,\n  Input,\n  Text,\n  AddBtn,\n  IconWrap,\n  ModalWrap,\n  CloseBtn,\n  ModalTitle,\n  IconsListWrap,\n  InvisibleInput,\n  BackgroundsPallet,\n  Label,\n  LabelPic,\n  Div,\n} from './BoardEditModal.styled';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { editBoard } from '../../redux/boards/boardsOperations';\n\nconst iconsArr = [\n  'four-circles',\n  'star',\n  'loading',\n  'puzzle',\n  'container',\n  'lightning',\n  'colors',\n  'hexagon',\n];\n\nconst backgroundsArr = [\n  'noBack',\n  'miklos',\n  'eberhard',\n  'diego',\n  'vino',\n  'vickholius',\n  'romello',\n  'kace',\n  'milad',\n  'gaetan',\n  'florian',\n  'tony',\n  'nicolas',\n  'gabriella',\n  'igor',\n  'zhou',\n];\n\nconst schema = Yup.object({\n  title: Yup.string().required(),\n  icon: Yup.string().oneOf(iconsArr).required(),\n  background: Yup.string().oneOf(backgroundsArr).required(),\n});\n\nexport const BoardEditModal = ({ onClose, board }) => {\n  const dispatch = useDispatch();\n\n  const { _id: boardId, title, icon, background } = board;\n\n  const initialValues = {\n    title,\n    icon,\n    background,\n  };\n\n  const onSubmit = board => {\n    dispatch(editBoard({ boardId, board }));\n    onClose();\n  };\n  return (\n    <ModalWrap>\n      <ModalTitle>Edit board</ModalTitle>\n      <CloseBtn type=\"button\" onClick={onClose}>\n        <Icon name=\"close\" />\n      </CloseBtn>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={onSubmit}\n      >\n        <FormWrap>\n          <Input type=\"text\" placeholder=\"Title\" name=\"title\" />\n          <Text>Icons</Text>\n\n          <IconsListWrap>\n            {iconsArr.map(el => (\n              <li key={el}>\n                <Label>\n                  <Icon name={el} stroke= \"var(--secondaryTextColor)\" />\n                  <InvisibleInput type=\"radio\" name=\"icon\" value={el} />\n                </Label>\n              </li>\n            ))}\n          </IconsListWrap>\n\n          <Text>Backgrounds</Text>\n          <BackgroundsPallet>\n            {backgroundsArr.map(el => {\n              const srcSetPath = ` https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp 1x,\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_56x56.webp 2x`;\n              const srcDefault = `https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp`;\n              return (\n                <li key={el}>\n                  <LabelPic>\n                    <Div>\n                      <picture>\n                        <source srcSet={srcSetPath} />\n                        <img src={srcDefault} alt=\"background example\" />\n                      </picture>\n                    </Div>\n                    <InvisibleInput type=\"radio\" name=\"background\" value={el} />\n                  </LabelPic>\n                </li>\n              );\n            })}\n          </BackgroundsPallet>\n\n          <AddBtn type=\"submit\">\n            <IconWrap>\n              <Icon name=\"plus\" />\n            </IconWrap>{' '}\n            Edit\n          </AddBtn>\n        </FormWrap>\n      </Formik>\n    </ModalWrap>\n  );\n};\n","import { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { BoardItemContainer, ControlIconsContainer } from './BoardItem.styled';\nimport { BoardEditModal } from 'components/BoardEditModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteBoard } from '../../redux/boards/boardsOperations';\nimport { selectBoards, selectCurrentBoard } from '../../redux/boards/boardsSelectors';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { clearCurrentBoard } from '../../redux/boards/boardsSlice';\n\nexport const BoardItem = ({ board, isActive }) => {\n  const dispatch = useDispatch();\n  const currentBoard = useSelector(selectCurrentBoard);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const navigate = useNavigate();\n  const boards = useSelector(selectBoards);\n  const { boardId: currBoardId } = useParams();\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleSelectBoard = (event, boardId) => {\n    if (event.target.tagName === 'BUTTON' || event.target.closest('button')) {\n      return;\n    }\n\n    navigate(`/${boardId}`);\n    localStorage.setItem('lastBoard', boardId);\n  };\n\n  const handleDelete = boardId => {\n    dispatch(deleteBoard(boardId));\n\n    if (boardId !== currBoardId) {\n      return;\n    }\n\n    dispatch(clearCurrentBoard());\n    \n    localStorage.removeItem('lastBoard');\n\n    const filteredBoards = boards.filter(board => board._id !== boardId);\n\n    if (filteredBoards.length === 0) {\n      navigate(`/`);\n      return;\n    }\n\n    const lastBoardObj = filteredBoards[filteredBoards.length - 1];\n\n    navigate(`/${lastBoardObj._id}`);\n  };\n\n  return (\n    <BoardItemContainer\n      className={isActive ? 'active' : ''}\n      onClick={event => handleSelectBoard(event, board._id)}\n      selected={currentBoard && currentBoard._id === board._id}\n    >\n      <Icon name={board.icon} width=\"18\" height=\"18\" style={{ opacity: 0.5 }} />\n      <p>{board.title}</p>\n      <ControlIconsContainer>\n        <button type=\"button\" style={{ cursor: 'pointer' }} onClick={openModal}>\n          <Icon name=\"pencil\" width=\"16\" height=\"16\" />\n        </button>\n        <button\n          type=\"button\"\n          style={{ cursor: 'pointer' }}\n          onClick={() => handleDelete(board._id)}\n        >\n          <Icon name=\"trash\" width=\"16\" height=\"16\" />\n        </button>\n      </ControlIconsContainer>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        className=\"modal-content\"\n        overlayClassName=\"modal-overlay\"\n        contentLabel=\"Edition board modal\"\n      >\n        <BoardEditModal onClose={closeModal} board={board} />\n      </Modal>\n    </BoardItemContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SidebarStylesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 225px;\n  padding: 14px 0 0;\n  color: var(--primaryTextColor);\n  overflow-y: scroll;\n  max-height: 100vh;\n\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 260px;\n    padding: 24px 0 0;\n  }\n\n  @media only screen and (max-width: 1439px) {\n    padding: 24px 0;\n  }\n`;\n\nexport const Logo = styled.div`\n  font-family: 'Poppins-SemiBold';\n  font-size: 16px;\n  letter-spacing: -0.04em;\n  display: flex;\n  column-gap: 8px;\n  align-items: center;\n  margin-bottom: 70px;\n  margin-left: 16px;\n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: 60px;\n  }\n`;\n\nexport const BoardContainer = styled.div`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n\n  h3 {\n    margin-bottom: 8px;\n    font-size: 12px;\n    font-family: 'Poppins-Regular';\n    opacity: 50%;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 8px;\n  margin-left: 16px;\n  font-size: 12px;\n  opacity: 50%;\n`;\n\nexport const BoardList = styled.ul`\n  margin-bottom: 40px;\n  font-family: 'Poppins-Medium';\n  overflow-y: scroll;\n  min-height: 17vh;\n  max-height: 17vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nexport const LogOut = styled.button`\n  margin: 0;\n  padding: 16px 0 0 16px;\n  border: none;\n  background: none;\n  display: flex;\n  align-items: center;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  stroke: var(--borderInThemeModal);\n  transition: var(--transition);\n  cursor: pointer;\n\n  p {\n    margin-left: 14px;\n    color: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    stroke: var(--hover);\n  }\n\n  @media only screen and (min-width: 1440px) {\n    font-size: 16px;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectBoards } from '../../redux/boards/boardsSelectors.js';\nimport { fetchBoards } from '../../redux/boards/boardsOperations.js';\nimport { logOut } from '../../redux/auth/authOperation.js';\nimport { NeedHelp } from 'components/NeedHelp';\nimport { BoardCreation } from 'components/SidebarBoardCreation';\nimport { clearCurrentBoard } from '../../redux/boards/boardsSlice';\nimport { BoardItem } from 'components/BoardItem';\nimport { Icon } from 'components/Icon';\nimport { SidebarStylesWrapper, Logo, BoardContainer, BoardList, LogOut, Title } from './SideBar.styled';\nimport { useParams } from 'react-router-dom';\n\nexport const Sidebar = () => {\n  const dispatch = useDispatch();\n  const boards = useSelector(selectBoards);\n  const {boardId} = useParams();\n\n  useEffect(() => {\n    dispatch(fetchBoards());\n  }, [dispatch]);\n\n  const handleLogOut = () => {\n    dispatch(logOut());\n    localStorage.removeItem('lastBoard');\n    dispatch(clearCurrentBoard());\n  };\n\n  return (\n    <SidebarStylesWrapper>\n      <div>\n        <Logo>\n          <Icon name=\"logo\" width=\"32\" height=\"32\" />\n          <h1>TaskPro</h1>\n        </Logo>\n        <BoardContainer>\n          <Title>My boards</Title>\n          <BoardCreation />\n          <BoardList>\n            {boards.map(board => (\n              <BoardItem\n                key={board._id}\n                board={board}\n                isActive={boardId === board._id}\n              />\n            ))}\n          </BoardList>\n        </BoardContainer>\n      </div>\n      <div>\n        <NeedHelp />\n        <LogOut type=\"button\" onClick={handleLogOut}>\n          <Icon name=\"login\" width=\"32\" height=\"32\" />\n          <p>Log out</p>\n        </LogOut>\n      </div>\n    </SidebarStylesWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const DrpdwnBtn = styled.button`\n  position: relative;\n  display: flex;\n  gap: 4px;\n  background: none;\n  border: none;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  opacity: var(--secondaryOpacity);\n`;\n\nexport const ThemesList = styled.ul`\n  position: absolute;\n  top: 65%;\n  right: 52%;\n  padding: 18px 44px 18px 18px;\n  border: 1px solid var(--borderInThemeModal);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(17, 17, 17, 0.1);\n  background-color: var(--modalBgColor);\n  visibility: ${({ visibility }) => visibility};\n  opacity: ${({ opacity }) => opacity};\n  transform: ${({ transform }) => transform};\n  transition: 0.3s;\n`;\n\nexport const ThemeItem = styled.li`\n  font-family: 'Poppins-Regular';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  opacity: var(--opacityInThemeModal);\n  cursor: pointer;\n  &:hover,\n  :focus {\n    color: var(--accent);\n  }\n  &:not(:last-child) {\n    margin-bottom: 4px;\n  }\n`;\n","import { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeTheme } from '../../redux/auth/authOperation';\n\nimport { useClickOutside } from 'hooks/useClickOutside';\nimport { Icon } from 'components/Icon';\nimport { DrpdwnBtn, ThemesList, ThemeItem } from './ThemeSwitcher.styled';\n\nexport const ThemeSwitcher = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const menuRef = useRef(null);\n  const dispatch = useDispatch();\n\n  const visibility = isOpen ? 'visible' : 'hidden';\n  const opacity = isOpen ? '1' : '0';\n  const transform = isOpen ? 'translateY(10px)' : 'translateY(0)';\n\n  useClickOutside(menuRef, () => {\n    if (isOpen) {\n      setTimeout(() => setIsOpen(false), 50);\n    }\n  });\n\n  return (\n    <div ref={menuRef}>\n      <DrpdwnBtn type=\"button\" onClick={() => setIsOpen(!isOpen)}>\n        Theme\n        <Icon\n          name=\"chevron-down\"\n          width=\"16\"\n          heigth=\"16\"\n          stroke=\"var(--secondaryTextColor)\"\n        />\n      </DrpdwnBtn>\n      <ThemesList\n        visibility={visibility}\n        opacity={opacity}\n        transform={transform}\n      >\n        <ThemeItem onClick={() => dispatch(changeTheme({ theme: 'light' }))}>\n          Light\n        </ThemeItem>\n        <ThemeItem onClick={() => dispatch(changeTheme({ theme: 'dark' }))}>\n          Dark\n        </ThemeItem>\n        <ThemeItem onClick={() => dispatch(changeTheme({ theme: 'violet' }))}>\n          Violet\n        </ThemeItem>\n      </ThemesList>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\n\nexport const useClickOutside = (ref, callback) => {\n  const handleClick = evnt => {\n    if (ref.current && !ref.current.contains(evnt.target)) {\n      callback();\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClick);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    };\n  });\n};\n","export function scrollSwitcher(bool) {\n  bool\n    ? (document.body.style.position = 'fixed')\n    : (document.body.style.position = 'relative');\n};","import styled from 'styled-components';\n\nexport const HeaderStyled = styled.header`\n  position: relative;\n\n  max-width: 375px;\n  display: flex;\n  justify-content: space-between;\n\n  background-color: var(--headerBgColor);\n\n  padding: 14px 20px;\n\n  @media (min-width: 768px) {\n    max-width: 768px;\n    padding: 18px 32px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 1180px;\n    justify-content: flex-end;\n    padding: 18px 24px;\n  }\n`;\n\nexport const MenuBtn = styled.button`\n  border: none;\n  background-color: inherit;\n\n  svg {\n    width: 24px;\n    height: 24px;\n\n    @media (min-width: 768px) {\n      width: 32px;\n      height: 32px;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const HeaderWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: baseline;\n  gap: 14px;\n`;\n\nexport const customStylesForModal = {\n  content: {\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    right: 'auto',\n    bottom: 'auto',\n    padding: '0',\n    border: 'none',\n    background: 'var(--primaryBgColor)',\n  },\n  overlay: {\n    position: 'fixed',\n    top: '0',\n    left: '0',\n    width: '100%',\n    height: '100vh',\n    background: 'rgba(0,0,0,0.5)',\n  },\n};","import { UserInfo } from 'components/UserInfo';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { Sidebar } from 'components/SideBar';\nimport { ThemeSwitcher } from 'components/ThemeSwitcher';\nimport { Icon } from 'components/Icon';\nimport { scrollSwitcher } from 'helpers/scrollSwitcher';\n\nimport {\n  HeaderStyled,\n  HeaderWrapper,\n  MenuBtn,\n  customStylesForModal,\n} from './Header.styled';\n\nexport const Header = () => {\n  const [isMenuOpen, setIsOpenMenu] = useState(false);\n\n  const openMenu = () => {\n    setIsOpenMenu(true);\n    scrollSwitcher(true);\n  };\n\n  const closeMenu = () => {\n    setIsOpenMenu(false);\n    scrollSwitcher(false);\n  };\n\n  return (\n    <HeaderStyled>\n      <MenuBtn type=\"button\" onClick={openMenu}>\n        <Icon name=\"menu\" stroke=\"var(--secondaryTextColor)\" />\n      </MenuBtn>\n\n      <HeaderWrapper>\n        <ThemeSwitcher />\n        <UserInfo />\n      </HeaderWrapper>\n      <Modal\n        isOpen={isMenuOpen}\n        onRequestClose={closeMenu}\n        style={customStylesForModal}\n        contentLabel=\"Sidebar\"\n      >\n        <Sidebar />\n      </Modal>\n    </HeaderStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 300px;\n  height: 234px;\n  border: var(--borderModal);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.05);\n  background: var(--modalBgColor);\n`;\n\nexport const FiltersTytle = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  margin-bottom: 28px;\n  color: var(--secondaryTextColor);\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  transition: opacity var(--transition);\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const LabelName = styled.p`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  margin-bottom: 14px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: var(--primaryTextColor);\n`;\n","import styled from 'styled-components';\n\nexport const FiltersWrap = styled.div`\n  position: relative;\n  display: flex;\n  gap: 119px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: -14px;\n    left: 0;\n    width: 252px;\n    height: 1px;\n    background-color: var(--cardsLine);\n  }\n`;\n\nexport const FilterLabel = styled.p`\n  margin-bottom: 14px;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  white-space: nowrap;\n`;\n\nexport const ShowAllBtn = styled.button`\n  padding: 0;\n  margin: 0;\n  height: 0;\n  width: 0;\n\n  border: none;\n  background-color: inherit;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  text-decoration: underline;\n  color: var(--secondaryTextColor);\n  opacity: 0.5;\n  cursor: pointer;\n  white-space: nowrap;\n`;\n\nexport const StyledRadioGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const RadioLabel = styled.label`\n  display: flex;\n  \n  border-radius: 50%;\n  width: 14px;\n  height: 14px;\n  background-color: var(--priority-${({ $priority }) => $priority});\n  transition: var(--transition);\n  cursor: pointer;\n  position: relative;\n\n  > input {\n    display: none;\n  }\n\n  &.checked {\n    &::after {\n      content: '';\n      position: absolute;\n      width: 8px;\n      height: 8px;\n      top: 21%;\n      left: 22%;\n      border-radius: 50%;\n      border: 2px solid var(--primaryBgColor);\n    }\n  }\n`;\n\nexport const FiltersSpan = styled.span`\n  margin-left: 22px;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  opacity: 0.5;\n  white-space: nowrap;\n`;\n","import { nanoid } from '@reduxjs/toolkit';\nimport { useSearchParams } from 'react-router-dom';\nimport { capitalizer } from 'helpers/capitalizer';\nimport {\n  FiltersWrap,\n  FilterLabel,\n  RadioLabel,\n  StyledRadioGroup,\n  ShowAllBtn,\n  FiltersSpan,\n} from './RadioFiltres.styled';\n\nexport const RadioFilters = () => {\n  const listParams = ['without', 'low', 'medium', 'high'];\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currValue = searchParams.get('priority');\n\n  const handleFilter = ({ target: { value } }) => {\n    setSearchParams({ priority: value });\n  };\n\n  const handleShowAll = () => {\n    setSearchParams({});\n  };\n\n  return (\n    <>\n      <FiltersWrap>\n        <FilterLabel>Label color</FilterLabel>\n        <ShowAllBtn type=\"button\" onClick={handleShowAll}>\n          Show all\n        </ShowAllBtn>\n      </FiltersWrap>\n      <StyledRadioGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n        {listParams.map(item => {\n          const text = capitalizer(item);\n          return (\n            <RadioLabel\n              key={nanoid()}\n              $priority={item}\n              className={currValue === item ? 'checked' : ''}\n            >\n              <input\n                type=\"radio\"\n                name=\"priority\"\n                value={item}\n                checked={currValue === item}\n                onChange={handleFilter}\n              />\n              <FiltersSpan>{text}</FiltersSpan>\n            </RadioLabel>\n          );\n        })}\n      </StyledRadioGroup>\n    </>\n  );\n};\n","export const capitalizer = str => {\n  const text = str === 'without' ? `${str} priority` : str;\n  return text.charAt(0).toUpperCase() + text.slice(1);  \n};\n","import { FiltersTytle, ModalWrap, CloseBtn } from './FilterModal.styled';\n\nimport { Icon } from 'components/Icon';\nimport { RadioFilters } from 'components/RadioFiltres';\n\nexport const FilterModal = ({ closeModal }) => {\n  return (\n    <ModalWrap>\n      <FiltersTytle>Filters</FiltersTytle>\n      <CloseBtn type=\"button\" onClick={closeModal}>\n        <Icon name=\"close\" stroke=\"var(--secondaryTextColor)\" />\n      </CloseBtn>\n      <RadioFilters />\n    </ModalWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 14px 0px;\n  margin-bottom: 26px;\n\n  @media (min-width: 768px) {\n    padding: 26px 0px;\n  }\n\n  @media (min-width: 1440px) {\n    padding: 10px 0px;\n  }\n`;\n\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    padding: '0',\n    transform: 'translate(-50%, -50%)',\n    borderRadius: '8px',\n    border: '1 px solid var(--borderModal)',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const BoardTitle = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  filter: drop-shadow(0 0 3px var(--primaryBgColor));\n\n  color: var(--secondaryTextColor);\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const FilterBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  font-family: 'Poppins-Medium';\n\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  border: none;\n\n  color: var(--secondaryTextColor);\n  background-color: inherit;\n  filter: drop-shadow(0 0 3px var(--primaryBgColor));\n\n  stroke: var(--secondaryTextColor);\n  transition: opacity var(--transition);\n  > svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: var(--accent);\n    stroke: var(--accent);\n  }\n`;\n","import { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { FilterModal } from 'components/FilterModal';\nimport {\n  FilterBtn,\n  BoardTitle,\n  Wrap,\n  customStyles,\n} from './HeaderDashboard.styled';\n\nexport const HeaderDashboard = ({ boardTitle }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <Wrap>\n      {boardTitle && <BoardTitle>{boardTitle}</BoardTitle>}\n      <FilterBtn type=\"button\" onClick={openModal}>\n        <Icon name=\"filter\" />\n        Filters{' '}\n      </FilterBtn>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Filters Modal\"\n      >\n        <FilterModal closeModal={closeModal} />\n      </Modal>\n    </Wrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const CardBody = styled.li`\n  border-radius: 8px;\n  width: 335px; // змінити на /* width: 100%; */ коли стане у колонкуи\n  height: 154px;\n  background-color: var(--extraBgColor);\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  position: relative;\n  padding: 14px 20px 14px 24px;\n`;\nexport const CardColor = styled.div`\n  position: absolute;\n  border-radius: 4px 0 0 4px;\n  width: 4px;\n  height: 154px;\n  top: 0px;\n  left: 0px;\n  background-color: var(--priority-${({ $priority }) => $priority});\n`;\nexport const CardTitle = styled.h4`\n  text-align: left;\n  font-family: 'Poppins-SemiBold';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--textColorcalendar);\n  margin-bottom: 8px;\n`;\nexport const CardDescription = styled.p`\n  text-align: left;\n  font-size: 12px;\n  line-height: 1.33333;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  width: 290px;\n  height: 38px;\n  overflow: hidden; /* скрывает текст, который не помещается в контейнер */\n  text-overflow: ellipsis; /* отображает многоточие для обрезанного текста */\n  margin-bottom: 14px;\n`;\n\nexport const CardSolid = styled.div`\n  border: 1px solid var(--cards-line);\n  margin-bottom: 14px;\n`;\n\nexport const CardDetals = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const CardInformation = styled.div`\n  display: flex;\n`;\n\nexport const Priority = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 14px;\n`;\n\nexport const PriorityDetals = styled.div`\n  display: flex;\n`;\n\nexport const PriorityTitle = styled.p`\n  text-align: left;\n  font-size: 8px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\nexport const PriorityColor = styled.div`\n  border-radius: 100%;\n  width: 12px;\n  height: 12px;\n  margin-right: 4px;\n  background-color: var(--priority-${({ $priority }) => $priority});\n`;\n\nexport const PriorityTipe = styled.p`\n  font-size: 10px;\n  letter-spacing: -0.02em;\n  color: var(--textColorcalendar);\n  &:first-letter {\n    text-transform: uppercase;\n}\n`;\n\nexport const Deadline = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 14px;\n`;\n\nexport const DeadlineTitle = styled.p`\n  text-align: left;\n  font-size: 8px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\n\nexport const DeadlineDate = styled.p`\n  text-align: left;\n  font-size: 10px;\n  letter-spacing: -0.02em;\n  color: var(--textColorcalendar);\n`;\nexport const CardButtons = styled.div`\n  display: flex;\n  gap: 8px;\n  stroke: var(--secondaryTextColor); //не змінюється в темах\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\nexport const Bell = styled.button`\n  stroke: ${({$bell}) => ($bell ? 'var(--accent)' : 'none')}\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  transition: var(--transition);\n  stroke: var(--secondaryTextColor);\n  &:is(:hover, :focus) {\n    stroke: var(--accent);\n  }\n`;\n","import DatePicker from 'react-datepicker';\nimport { enGB } from 'date-fns/locale';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'components/Calendar/Calendar.css';\n\nexport function Calendar({ selectedDate, onDateChange }) {\n  const handleDateChange = date => {\n    onDateChange(date);\n  };\n\n  return (\n    <DatePicker\n      selected={selectedDate}\n      onChange={handleDateChange}\n      dateFormat=\"MMMM d\"\n      minDate={new Date()}\n      locale={enGB}\n      weekStartsOn={1}\n    />\n  );\n}\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Container = styled.div`\n  border-radius: 8px;\n  height: 522px;\n  position: relative;\n  padding: 24px;\n  width: 100%;\n  background: var(--modalBgColor);\n\n  @media only screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const TitleModal = styled.h2`\n  margin-bottom: 24px;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  line-height: 1.5;\n  color: var(--textColorcalendar);\n`;\n\nexport const CloseModal = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  cursor: pointer;\n\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  color: red;\n  font-size: 12px;\n`;\n\nexport const TitleCard = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 14px;\n\n  background-color: var(--modalBgColor);\n  color: var(--textColorcalendar);\n\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n\nexport const StyledDescription = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  padding-top: 14px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 154px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 24px;\n\n  resize: none;\n\n  color: var(--textColorcalendar);\n  background: var(--modalBgColor);\n\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const LabelColorStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--textCalendar);\n  margin-bottom: 4px;\n`;\n\nexport const StyleRadioButton = styled.div`\n  height: 18px;\n  display: flex;\n  gap: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const DeadlineStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\n\nexport const AddButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  background: var(--accent);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnBgColorHover);\n  }\n  cursor: pointer;\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: var(--btnText);\n  margin-right: 8px;\n  \n`;\n\nexport const AddCardButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 335px;\n  height: 56px;\n  background: var(--btnPlus);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Span = styled.span`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--accent);\n`;\n\nexport const ButtonText = styled.span`\n  font-family: 'Poppins-Medium';\n\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n\n  color: var(--btnText);\n`;\n","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const StyledRadioGroup = styled.div`\n  height: 18px;\n  display: flex;\n  gap: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const RadioButton = styled(Field)`\n  display: none;\n`;\n\nexport const RadioLabel = styled.label`\n  border-radius: 50%;\n  width: 14px;\n  height: 14px;\n  background-color: var(--priority-${({ $priority }) => $priority});\n  transition: var(--transition);\n  cursor: pointer;\n  box-sizing: border-box;\n  position: relative;\n\n  &.checked {\n    &::after {\n      content: '';\n      position: absolute;\n      width: 12px;\n      height: 12px;\n      top: 1px;\n      left: 1px;\n      border-radius: 50%;\n      border: 2px solid var(--extraBgColor);\n    }\n  }\n`;\n","import { nanoid } from '@reduxjs/toolkit';\nimport {\n  RadioButton,\n  RadioLabel,\n  StyledRadioGroup,\n} from './RadioInputs.styled';\nimport { useState } from 'react';\n\nexport const RadioInputs = ({ defaultChecked, onPriorityChange }) => {\n  const list = ['low', 'medium', 'high', 'without'];\n  const [currValue, setCurrValue] = useState(defaultChecked);\n\n  const handleInput = ({ target: { value } }) => {\n    onPriorityChange(value);\n    setCurrValue(value);\n  };\n\n  return (\n    <StyledRadioGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n      {list.map(item => (\n        <RadioLabel\n          key={nanoid()}\n          $priority={item}\n          className={currValue === item ? 'checked' : ''}\n        >\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value={item}\n            checked={currValue === item}\n            onChange={handleInput}\n          />\n        </RadioLabel>\n      ))}\n    </StyledRadioGroup>\n  );\n};\n","import { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Calendar } from 'components/Calendar';\nimport { Icon } from 'components/Icon';\n\nimport {\n  Container,\n  TitleModal,\n  StyledDescription,\n  CloseModal,\n  TitleCard,\n  LabelColorStyle,\n  DeadlineStyle,\n  AddButton,\n  StylePlus,\n  StyledForm,\n  ErrMsg,\n  Label,\n  Span,\n  ButtonText,\n} from './EditCardModal.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { editCard } from '../../redux/cards/cardsOperations.js';\nimport { RadioInputs } from 'components/RadioInputs/RadioInputs.jsx';\n\nconst priority = ['without', 'low', 'medium', 'high'];\n\nconst formCardSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(3, `It's can be up to 3 characters long`)\n    .max(100, 'Too Long!')\n    .required(`This field is required.`),\n  text: Yup.string()\n    .min(10, `It's can be up to 10 characters long`)\n    .max(500, 'Too Long!')\n    .required(`This field is required.`),\n  priority: Yup.string().oneOf(priority),\n  deadline: Yup.date(),\n});\n\nexport default function EditCardModal({ card, onClose }) {\n  const { _id: cardId, title, text, deadline, priority } = card;\n  const [selectedDate, setSelectedDate] = useState(deadline);\n  const dispatch = useDispatch();\n\n  const onSubmit = values => {\n    dispatch(editCard({ values, cardId }));\n    onClose();\n  };\n\n  return (\n    <Container>\n      <TitleModal>Edit card</TitleModal>\n      <CloseModal>\n        <button type=\"button\" onClick={onClose}>\n          <Icon\n            name=\"close\"\n            width=\"18\"\n            height=\"18\"\n            stroke=\"var(--secondaryTextColor)\"\n          />\n        </button>\n      </CloseModal>\n      <Formik\n        initialValues={{\n          title,\n          text,\n          priority,\n          deadline: selectedDate,\n        }}\n        validationSchema={formCardSchema}\n        onSubmit={onSubmit}\n      >\n        {({ handleSubmit, setFieldValue }) => (\n          <StyledForm onSubmit={handleSubmit}>\n            <TitleCard type=\"text\" name=\"title\" placeholder=\"Title\" />\n            <ErrMsg component=\"p\" name=\"title\" />\n            <Label>\n              <StyledDescription\n                rows={4}\n                component=\"textarea\"\n                name=\"text\"\n                placeholder=\"Description\"\n              />\n              <ErrMsg component=\"p\" name=\"text\" />\n            </Label>\n            <LabelColorStyle id=\"colorCard-radio-group\">\n              Label color\n            </LabelColorStyle>\n            <RadioInputs\n              defaultChecked={priority}\n              onPriorityChange={priority => {\n                setFieldValue('priority', priority);\n              }}\n            />\n            <DeadlineStyle>Deadline</DeadlineStyle>\n            <div>\n              <Span> Today,</Span>\n              <Calendar\n                selectedDate={selectedDate}\n                onDateChange={date => {\n                  setSelectedDate(date);\n                  setFieldValue('deadline', date);\n                }}\n              />\n            </div>\n            <AddButton type=\"submit\">\n              <StylePlus>\n                <Icon name=\"plus\" width=\"14\" height=\"14\" stroke = \"var(--plusInBtn)\"/>\n              </StylePlus>\n              <ButtonText>Edit</ButtonText>\n            </AddButton>\n          </StyledForm>\n        )}\n      </Formik>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const MoveList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border-radius: 8px;\n  background-color: var(--secondaryBgColor);\n  padding: 10px;\n`;\n","import styled from 'styled-components';\n\nexport const MoveCardItemStyled = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 18px;\n  color: var(--secondaryTextColor);\n  &.current {\n    color: var(--accent);\n\n    &button {\n      pointer-events: none;\n    }\n    &.current svg {\n      stroke: var(--accent);\n    }\n  }\n\n  svg {\n    &.current {\n      stroke: var(--accent);\n    }\n  }\n`;\n\nexport const MoveCardItemButtonStyled = styled.button`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  cursor: pointer;\n`;\n","import { useDispatch } from 'react-redux';\nimport {\n  MoveCardItemButtonStyled,\n  MoveCardItemStyled,\n} from './MoveCardItem.styled';\nimport { chengeColumnsCard } from '../../redux/cards/cardsOperations';\nimport { Icon } from 'components/Icon';\n\nexport const MoveCardItem = ({ column, cardId, currentId }) => {\n  const dispatch = useDispatch();\n  const { _id, title } = column;\n  const current = _id === currentId ? 'current' : '';\n\n  const handleMoveCard = () => {\n    dispatch(chengeColumnsCard({ cardId, toColumnId: _id }));\n  };\n  return (\n    <MoveCardItemStyled className={current}>\n      <MoveCardItemButtonStyled onClick={handleMoveCard}>\n        {title}\n      </MoveCardItemButtonStyled>\n      <Icon\n        name=\"arrow-in-circle\"\n        width=\"16px\"\n        height=\"16px\"\n        stroke=\"var(--secondaryTextColor)\"\n      />\n    </MoveCardItemStyled>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { MoveList } from './MoveCardDropdown.styled';\nimport { MoveCardItem } from 'components/MoveCardItem/MoveCardItem';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport const MoveCardDropdown = ({ currColumnId, cardId }) => {\n  const { columns } = useSelector(state => state.columns);\n  \n\n  return (\n    <MoveList>\n      {columns.map(item => {\n        return (\n          <MoveCardItem\n            currentId={currColumnId}\n            key={nanoid()}\n            column={item}\n            cardId={cardId}\n          />\n        );\n      })}\n    </MoveList>\n  );\n};\n","import { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\n\nimport {\n  CardBody,\n  CardDetals,\n  Priority,\n  PriorityDetals,\n  CardColor,\n  CardTitle,\n  CardDescription,\n  CardSolid,\n  PriorityTitle,\n  PriorityTipe,\n  PriorityColor,\n  Deadline,\n  DeadlineTitle,\n  DeadlineDate,\n  CardButtons,\n  CardInformation,\n  Bell,\n  Button,\n} from './Card.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteCard } from '../../redux/cards/cardsOperations';\nimport EditCardModal from 'components/EditCardModal/EditCardModal';\nimport { MoveCardDropdown } from 'components/MoveCardDropdown/MoveCardDropdown';\n\nexport default function Card({ card }) {\n  const [modalCardIsOpen, setmodalCardIsOpen] = useState(false);\n  const [isOpenMoveCardModal, setIsOpenMoveCardModal] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    _id: cardId,\n    title,\n    text,\n    deadline,\n    priority,\n    column: { _id: columnId },\n  } = card;\n  const dateDeadline = new Date(deadline);\n  const formatedDate = `${dateDeadline.getUTCDate()}/${(\n    dateDeadline.getUTCMonth() + 1\n  )\n    .toString()\n    .padStart(2, '0')}/${dateDeadline.getFullYear()}`;\n  const cardTextDescription = text.substring(0, 90) + '...';\n\n  const bell = new Date() > dateDeadline;\n  \n  const openCardModal = () => {\n    setmodalCardIsOpen(true);\n  };\n\n  const closeCardModal = () => {\n    setmodalCardIsOpen(false);\n  };\n\n  const handleDeleteCard = () => {\n    dispatch(deleteCard({ cardId }));\n  };\n\n  const hendleMoveCardModalOpen = () => {\n    setIsOpenMoveCardModal(true);\n  };\n\n  const hendleMoveCardModalClose = () => {\n    setIsOpenMoveCardModal(false);\n  };\n\n  return (\n    <CardBody>\n      <CardColor $priority={priority}></CardColor>\n      <CardTitle>{title}</CardTitle>\n      <CardDescription>{cardTextDescription}</CardDescription>\n      <CardSolid></CardSolid>\n      <CardDetals>\n        <CardInformation>\n          <Priority>\n            <PriorityTitle>Priority</PriorityTitle>\n            <PriorityDetals>\n              <PriorityColor $priority={priority}></PriorityColor>\n              <PriorityTipe>{priority}</PriorityTipe>\n            </PriorityDetals>\n          </Priority>\n          <Deadline>\n            <DeadlineTitle>Deadline</DeadlineTitle>\n            <DeadlineDate>{formatedDate}</DeadlineDate>\n          </Deadline>\n        </CardInformation>\n        <CardButtons>\n          <Bell type=\"button\" $bell={bell}>\n            <Icon name=\"bell\" width=\"16\" height=\"16\" />\n          </Bell>\n          <Button type=\"button\" onClick={hendleMoveCardModalOpen}>\n            <Icon name=\"arrow-in-circle\" width=\"16\" height=\"16\" />\n          </Button>\n          <Button type=\"button\" onClick={openCardModal}>\n            <Icon name=\"pencil\" width=\"16\" height=\"16\" />\n          </Button>\n          <Button type=\"button\" onClick={handleDeleteCard}>\n            <Icon name=\"trash\" width=\"16\" height=\"16\" />\n          </Button>\n        </CardButtons>\n      </CardDetals>\n      <Modal\n        isOpen={modalCardIsOpen}\n        onRequestClose={closeCardModal}\n        className={'modal-content'}\n        overlayClassName={'modal-overlay'}\n      >\n        <EditCardModal card={card} onClose={closeCardModal} />\n      </Modal>\n      <Modal\n        isOpen={isOpenMoveCardModal}\n        onRequestClose={hendleMoveCardModalClose}\n        className={'modal-content'}\n        overlayClassName={'modal-overlay'}\n      >\n        <MoveCardDropdown currColumnId={columnId} cardId={cardId} />\n      </Modal>\n    </CardBody>\n  );\n}\n","import styled from 'styled-components';\n\nexport const HeadWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 335px;\n  height: 56px;\n\n  padding: 17px 20px;\n\n  border-radius: 8px;\n\n  background-color: var(--extraBgColor);\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const CardList = styled.ul`\n  > li:not(:last-of-type) {\n    margin-bottom: 10px;\n  }\n  border-radius: 12px;\n\n  @media (min-width: 768px) {\n  }\n\n  @media (min-width: 1440px) {\n  }\n\n  overflow: auto;\n  padding: 0;\n\n  &::-webkit-scrollbar {\n    width: 8px; /* ширина скролбару */\n  }\n\n  &::-webkit-scrollbar-track {\n    background: var(--scroll-col); /* колір фону всієї доріжки скролбару */\n    border-radius: 12px; // заокруглення доріжки скролу\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: var(--scroll-col-bg); // колір самого скролу\n    border-radius: 12px; /* заокруглення самого скролу */\n\n    &:hover {\n      background-color: var(\n        --scroll-col-bg-hover\n      ); // колір самого скролу при наведенні\n    }\n  }\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const IconedBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  border: none;\n  background-color: inherit;\n\n  stroke: var(--secondaryTextColor);\n  transition: opacity var(--transition);\n\n  > svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    stroke: var(--accent);\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  width: 335px;\n  height: 56px;\n\n  padding: 10px 0 11px 0;\n\n  border: none;\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--btnText);\n  background-color: var(--btnBgColor);\n  transition: background-color var(--transition);\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnBgColorHover);\n  }\n`;\n\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n\n  border-radius: 8px;\n\n  background-color: var(--btnText);\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--plusInBtn);\n  }\n`;\n\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Container = styled.div`\n  border-radius: 8px;\n  height: 522px;\n  position: relative;\n  padding: 24px;\n  width: 100%;\n  background: var(--modalBgColor);\n\n  display: flex;\n  flex-direction: column;\n\n  @media only screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const TitleModal = styled.h2`\n  margin-bottom: 24px;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  line-height: 1.5;\n  color: var(--textColorcalendar);\n`;\n\nexport const CloseModal = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  cursor: pointer;\n\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  color: red;\n  font-size: 12px;\n`;\n\nexport const TitleCard = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 14px;\n  transition: var(--transition);\n  background-color: var(--modalBgColor);\n  color: var(--textColorcalendar);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n\nexport const StyledDescription = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  padding-top: 14px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 154px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 24px;\n\n  resize: none;\n\n  color: var(--textColorcalendar);\n  background: var(--modalBgColor);\n\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const LabelColorStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--textCalendar);\n  margin-bottom: 4px;\n`;\n\nexport const StyleRadioButton = styled.div`\n  height: 18px;\n  display: flex;\n  gap: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const RadioButton = styled(Field)`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n`;\nexport const RadioButtonBlu = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: #8fa1d0;\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid #8fa1d0;\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const RadioButtonRed = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: #e09cb5;\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid #e09cb5;\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const RadioButtonGreen = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: #bedbb0;\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid #bedbb0;\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const RadioButtonGrey = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: rgba(22, 22, 22, 0.3);\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid rgba(22, 22, 22, 0.3);\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const DeadlineStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\n\nexport const AddButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  background-color: var(--accent);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnBgColorHover);\n  }\n  cursor: pointer;\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: var(--btnText);\n  margin-right: 8px;\n  stroke: var(--plusInBtn);\n`;\n\nexport const AddCardButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 335px;\n  height: 56px;\n  background: var(--btnPlus);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Span = styled.span`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--accent);\n`;\n","import { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Calendar } from 'components/Calendar';\nimport { Icon } from 'components/Icon';\n\nimport {\n  Container,\n  TitleModal,\n  StyledDescription,\n  CloseModal,\n  TitleCard,\n  LabelColorStyle,\n  DeadlineStyle,\n  AddButton,\n  StylePlus,\n  StyledForm,\n  ErrMsg,\n  Label,\n  Span,\n} from './AddCardModal.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { addCard } from '../../redux/cards/cardsOperations.js';\nimport { RadioInputs } from 'components/RadioInputs/RadioInputs.jsx';\n\nconst priority = ['without', 'low', 'medium', 'high'];\n\nconst formCardSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(3, `It's can be up to 3 characters long`)\n    .max(100, 'Too Long!')\n    .required(`This field is required.`),\n  text: Yup.string()\n    .min(10, `It's can be up to 10 characters long`)\n    .max(500, 'Too Long!')\n    .required(`This field is required.`),\n  priority: Yup.string().oneOf(priority),\n  deadline: Yup.date(),\n});\n\nexport default function AddCardModal({ title, btnText, onClose, columnId }) {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const dispatch = useDispatch();\n\n  const onSubmit = values => {\n    dispatch(addCard({ values, columnId }));\n    onClose();\n  };\n\n  return (\n    <Container>\n      <TitleModal>{title}</TitleModal>\n      <CloseModal>\n        <button type=\"button\" onClick={onClose}>\n          <Icon\n            name=\"close\"\n            width=\"18\"\n            height=\"18\"\n            stroke=\"var(--textColorcalendar)\"\n          />\n        </button>\n      </CloseModal>\n      <Formik\n        initialValues={{\n          title: '',\n          text: '',\n          priority: 'without',\n          deadline: selectedDate,\n        }}\n        validationSchema={formCardSchema}\n        onSubmit={onSubmit}\n        \n      >\n        {({ handleSubmit, setFieldValue }) => (\n          <StyledForm onSubmit={handleSubmit}>\n            <TitleCard type=\"text\" name=\"title\" placeholder=\"Title\" />\n            <ErrMsg component=\"p\" name=\"title\" />\n            <Label>\n              <StyledDescription\n                rows={4}\n                component=\"textarea\"\n                name=\"text\"\n                placeholder=\"Description\"\n              />\n              <ErrMsg component=\"p\" name=\"text\" />\n            </Label>\n            <LabelColorStyle id=\"colorCard-radio-group\">\n              Label color\n            </LabelColorStyle>\n            <RadioInputs\n              defaultChecked=\"without\"\n              onPriorityChange={priority => {\n                setFieldValue('priority', priority);\n              }}\n            />\n            <DeadlineStyle>Deadline</DeadlineStyle>\n            <div>\n              <Span> Today,</Span>\n              <Calendar\n                selectedDate={selectedDate}\n                onDateChange={date => {\n                  setSelectedDate(date);\n                  setFieldValue('deadline', date);\n                }}\n              />\n            </div>\n            <AddButton type=\"submit\">\n              <StylePlus>\n                <Icon name=\"plus\" width=\"14\" height=\"14\" />\n              </StylePlus>\n              <p>{btnText}</p>\n            </AddButton>\n          </StyledForm>\n        )}\n      </Formik>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const HeadWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 335px;\n  height: 56px;\n\n  margin-bottom: 14px;\n  padding: 17px 20px;\n\n  border-radius: 8px;\n  background-color: var(--extraBgColor);\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  color: var(--textColorcalendar);\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const IconedBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  border: none;\n  background-color: inherit;\n\n  stroke: var(--secondaryTextColor);\n  transition: opacity var(--transition);\n\n  > svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    stroke: var(--accent);\n  }\n`;\n\n","import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 8px;\n  height: 221px;\n  position: relative;\n  padding: 24px;\n  min-width: 320px;\n  background: var(--modalBgColor);\n\n  @media only screen and (max-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-radius: 8px;\n  background: var(--modalBgColor);\n`;\n\nexport const StyledField = styled(Field)`\n  font: inherit;\n  cursor: pointer;\n  padding-left: 18px;\n  margin-top: 24px;\n  margin-bottom: 24px;\n  width: 287px;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  background: var(--modalBgColor);\n  color: var(--textColorcalendar);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  transition: opacity var(--transition);\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n  cursor: pointer;\n`;\n\nexport const Label = styled.h3`\n  font-family: 'Poppins-Medium';\n\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--textColorcalendar);\n`;\n\nexport const Button = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  background: var(--accent);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: var(--transition);\n  cursor: pointer;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnBgColorHover);\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const ButtonText = styled.span`\n  font-family: 'Poppins-Medium';\n\n  font-size: 14px;\n  letter-spacing: -0.02em;\n\n  color: var(--btnText);\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  color: red;\n  font-size: 12px;\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: var(--btnText);\n  margin-right: 8px;\n  stroke: white;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icon';\nimport {\n  Button,\n  ButtonText,\n  CloseBtn,\n  Container,\n  Label,\n  StylePlus,\n  StyledField,\n  StyledForm,\n} from './EditColumnFormik.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { editColumn } from '../../redux/columns/columnsOperations.js';\n\nconst addColumnFormSchema = Yup.object().shape({\n  title: Yup.string().min(2, 'Too short!').required('This field is required!'),\n});\n\nexport const EditColumnFormik = ({ title, columnId, onClose }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = body => {\n    dispatch(editColumn({ body, columnId }));\n  };\n\n  return (\n    <Container>\n      <Label>Edit column</Label>\n      <CloseBtn\n        type=\"button\"\n        onClick={onClose}\n      >\n        <Icon name=\"close\" width=\"18\" height=\"18\" stroke=\"var(--textColorcalendar)\"/>\n      </CloseBtn>\n      <Formik\n        initialValues={{\n          title,\n        }}\n        validationSchema={addColumnFormSchema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <StyledField type=\"text\" name=\"title\" placeholder=\"To Do\" />\n          <Button type=\"submit\">\n            <StylePlus>\n              <Icon name=\"plus\" width=\"14\" height=\"14\" stroke = \"var(--plusInBtn)\"/>\n            </StylePlus>\n            <ButtonText>Edit</ButtonText>\n          </Button>\n        </StyledForm>\n      </Formik>\n    </Container>\n  );\n};\n","import { Icon } from 'components/Icon';\nimport { HeadWrap, IconedBtn, Title, Wrap } from './ColumnHead.styled';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport { EditColumnFormik } from 'components/EditColumnFormik';\nimport { useDispatch } from 'react-redux';\nimport { deleteColumn } from '../../redux/columns/columnsOperations';\n\nexport const ColumnHead = ({ title, columnId }) => {\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleModalOpen = () => {\n    setIsOpenModal(true);\n  };\n\n  const handleModalClose = () => {\n    setIsOpenModal(false);\n  };\n\n  const handleDeleteColumn = () => {\n    dispatch(deleteColumn({ columnId }));\n  };\n\n  return (\n    <>\n      <HeadWrap>\n        <Title>{title}</Title>\n        <Wrap>\n          <IconedBtn type=\"button\" onClick={handleModalOpen}>\n            <Icon name=\"pencil\" />\n          </IconedBtn>\n          <IconedBtn type=\"button\" onClick={handleDeleteColumn}>\n            <Icon name=\"trash\" />\n          </IconedBtn>\n        </Wrap>\n      </HeadWrap>\n      <Modal\n        isOpen={isOpenModal}\n        onRequestClose={handleModalClose}\n        className=\"modal-content\"\n        overlayClassName=\"modal-overlay\"\n        contentLabel=\"Column Edit Modal\"\n        ariaHideApp={false}\n      >\n        <EditColumnFormik\n          title={title}\n          columnId={columnId}\n          onClose={handleModalClose}\n        />\n      </Modal>\n    </>\n  );\n};\n","import { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport Card from 'components/Card/Card';\nimport { AddBtn, CardList, IconWrap } from './Column.styled';\nimport AddCardModal from 'components/AddCardModal/AddCardModal';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { ColumnHead } from 'components/ColumnHead';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const Column = ({ columnId, title }) => {\n  const [modalCardIsOpen, setmodalCardIsOpen] = useState(false);\n  const { cards } = useSelector(state => state.cards);\n  const [searchParams] = useSearchParams();\n  const priority = searchParams.get('priority');\n\n  let filtredCards = cards?.filter(({ column: { _id } }) => _id === columnId);\n\n  if (priority) {\n    filtredCards = filtredCards?.filter(card => card.priority === priority);\n  }\n\n  const openCardModal = () => {\n    setmodalCardIsOpen(true);\n  };\n\n  const closeCardModal = () => {\n    setmodalCardIsOpen(false);\n  };\n\n  return (\n    <>\n      <ColumnHead title={title} columnId={columnId} />\n      <CardList>\n        {filtredCards.map(card => (\n          <Card key={nanoid()} card={card} />\n        ))}\n      </CardList>\n      <AddBtn type=\"button\" onClick={openCardModal}>\n        <IconWrap>\n          <Icon name=\"plus\" />\n        </IconWrap>{' '}\n        Add another card\n      </AddBtn>\n      <Modal\n        isOpen={modalCardIsOpen}\n        onRequestClose={closeCardModal}\n        className={'modal-content'}\n        overlayClassName={'modal-overlay'}\n        contentLabel=\"Card Add Modal\"\n        ariaHideApp={false}\n      >\n        <AddCardModal\n          columnId={columnId}\n          title={'Add card'}\n          btnText={'Add'}\n          onClose={closeCardModal}\n        />\n      </Modal>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  /* max-width: 347px; */\n\n  @media (min-width: 768px) {\n    max-width: 718px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 1128px;\n  }\n\n  &.scrollbar-container {\n    height: auto;\n  }\n  overflow: auto;\n  padding: 0 0 8px;\n\n  &::-webkit-scrollbar {\n    width: 12px; /* ширина скролбару */\n    height: 12px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: var(--scroll); /* колір фону всієї доріжки скролбару */\n    border-radius: 12px; // заокруглення доріжки скролу\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: var(--scrollBg); // колір самого скролу\n    border-radius: 12px; /* заокруглення самого скролу */\n\n    &:hover {\n      background-color: var(\n        --scroll-bg-hover\n      ); // колір самого скролу при наведенні\n    }\n  }\n`;\n\nexport const ColumnList = styled.ul`\n  display: flex;\n  gap: 18px;\n`;\n\nexport const ColumnItem = styled.li`\n  display: grid;\n  grid-template-rows: 56px minmax(0, 1fr) 56px;\n  gap: 14px;\n  width: 347px;\n  height: calc(83vh - 80px);\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  gap: 18px;\n  align-items: flex-start;\n  padding: 0 0 8px;\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  max-width: 100%;\n  \n  padding: 14px 42px;\n\n  border: none;\n  border-radius: 8px;\n\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--secondaryTextColor);\n  background-color: var(--btnBoardBg);\n\n  opacity: 1;\n  transition: color background-color var(--transition);\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: var(--btnText);\n    background-color: var(--btnBgColor);\n\n    > div {\n      background-color: var(--btnPlusHover);\n    }\n  }\n\n  @media (min-width: 375px) {\n    width: 334px;\n    min-width: 334px;\n    max-width: 0;\n    padding: 14px 78px;\n  }\n`;\n\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n\n  border-radius: 8px;\n\n  background-color: var(--squareIconColor);\n  transition: background-color stroke var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnPlusHover);\n    stroke: var(--plusInBtn);\n  }\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--extraBgColor);\n  }\n`;\n","import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 8px;\n  height: 221px;\n  position: relative;\n  padding: 24px;\n  min-width: 320px;\n  background: var(--modalBgColor);\n\n  @media only screen and (max-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  border-radius: 8px;\n  background: var(--modalBgColor);\n`;\n\nexport const StyledField = styled(Field)`\n  font: inherit;\n  cursor: pointer;\n  padding-left: 18px;\n  margin-top: 24px;\n  margin-bottom: 24px;\n  width: 287px;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  background: var(--modalBgColor);\n  color: var(--textColorcalendar);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  transition: opacity var(--transition);\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  cursor: pointer;\n`;\n\nexport const Label = styled.h3`\n  \n  font-family: 'Poppins-Medium';\n \n  font-weight: 500; */\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  \n  color: var(--textColorcalendar);\n`;\n\nexport const Button = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  background: var(--accent);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: var(--transition);\n  cursor: pointer;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnBgColorHover);\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const ButtonText = styled.span`\n  font-family: 'Poppins-Medium';\n\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n\n  color: var(--btnText);\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  color: red;\n  font-size: 12px;\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: var(--btnText);\n  margin-right: 8px;\n  stroke: white;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icon';\nimport {\n  Button,\n  ButtonText,\n  CloseBtn,\n  Container,\n  Label,\n  StylePlus,\n  StyledField,\n  StyledForm,\n} from './AddColumnFormik.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { addColumn } from '../../redux/columns/columnsOperations.js';\n\nconst addColumnFormSchema = Yup.object().shape({\n  title: Yup.string().min(2, 'Too short!').required('This field is required!'),\n});\n\nexport const AddColumnFormik = ({ boardId, onClose }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = body => {\n    dispatch(addColumn({ body, boardId }));\n    onClose();\n  };\n\n  return (\n    <Container>\n      <Label>Add column</Label>\n      <CloseBtn\n        type=\"button\"\n        onClick={onClose}\n      >\n        <Icon name=\"close\" width=\"18\" height=\"18\" stroke=\"var(--textColorcalendar)\"/>\n      </CloseBtn>\n      <Formik\n        initialValues={{\n          title: '',\n        }}\n        validationSchema={addColumnFormSchema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <StyledField type=\"text\" name=\"title\" placeholder=\"Title\" />\n          <Button type=\"submit\">\n            <StylePlus>\n              <Icon name=\"plus\" width=\"14\" height=\"14\" stroke= \"var(--plusInBtn)\"/>\n            </StylePlus>\n            <ButtonText>Add</ButtonText>\n          </Button>\n        </StyledForm>\n      </Formik>\n    </Container>\n  );\n};\n","import { Column } from 'components/Column';\nimport {\n  IconWrap,\n  AddBtn,\n  Wrap,\n  ColumnItem,\n  Container,\n  ColumnList,\n} from './Board.styled';\nimport { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { AddColumnFormik } from 'components/AddColumnFormik/AddColumnFormik';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useParams } from 'react-router-dom';\n\nexport const Board = () => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const { columns } = useSelector(state => state.columns);\n  const { boardId } = useParams();\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <Container>\n        <Wrap>\n          {columns.length !== 0 && (\n            <ColumnList>\n              {columns.map(({ _id, title }) => {\n                return (\n                  <ColumnItem key={nanoid()}>\n                    <Column title={title} columnId={_id} />\n                  </ColumnItem>\n                );\n              })}\n            </ColumnList>\n          )}\n          <AddBtn type=\"button\" onClick={openModal}>\n            <IconWrap>\n              <Icon name=\"plus\" stroke=\"var(--btnBoardBg)\" />\n            </IconWrap>{' '}\n            Add another column\n          </AddBtn>\n        </Wrap>\n      </Container>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        className=\"modal-content\"\n        overlayClassName=\"modal-overlay\"\n        contentLabel=\"Column Edit Modal\"\n        ariaHideApp={false}\n      >\n        <AddColumnFormik onClose={closeModal} boardId={boardId} />\n      </Modal>\n    </>\n  );\n};\n","import { HeaderDashboard } from 'components/HeaderDashboard';\nimport { Board } from 'components/Board';\n\nexport const ScreensPage = ({ boardTitle }) => {\n  return (\n    <>\n      <HeaderDashboard boardTitle={boardTitle} />\n      <Board />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StartContainer = styled.main`\n  height: calc(100vh - 80px);\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 15px;\n  background-color: var(--secondaryBgColor);\n`;\n\nexport const StartText = styled.p`\n  min-width: 280px;\n  text-align: center;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  line-height: 1.33;\n  \n\n  color: var(--secondaryTextColor);\n\n  @media (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media (min-width: 768px) {\n    line-height: 1.29;\n    width: 486px;\n    margin: auto;\n  }\n`;\n\n\n\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const BoardCreationBtn = styled.button`\n  margin: 0;\n  padding: 0;\n\n  border: none;\n  outline: none;\n\n  background-color: inherit;\n  color: var(--btnPlus);\n  cursor: pointer;\n  transition: color var(--transition);\n  &:hover,\n  &:focus {\n    color: var(--btnPlusHover);\n  }\n`;\n","import {\n  StartText,\n  BoardCreationBtn,\n  customStyles,\n  StartContainer,\n} from './StartScreen.styled';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { BoardCreatingModal } from 'components/BoardCreatingModal';\n\nexport const StartScreen = () => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <StartContainer>\n      <StartText>\n        Before starting your project, it is essential{' '}\n        <BoardCreationBtn type=\"button\" onClick={openModal}>\n          to create a board\n        </BoardCreationBtn>{' '}\n        to visualize and track all the necessary tasks and milestones. This\n        board serves as a powerful tool to organize the workflow and ensure\n        effective collaboration among team members.\n      </StartText>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Board Creation Modal\"\n        ariaHideApp={false}\n      >\n        <BoardCreatingModal onClose={closeModal} />\n      </Modal>\n    </StartContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SidebarWrapper = styled.aside`\n  @media screen and (max-width: 1439px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-column: 1 / 2;\n    grid-row-start: 1;\n    grid-row-end: 3;\n  }\n`;\n\nexport const Main = styled.main`\n  grid-column: 1 / 2;\n  grid-row: 2 / 3;\n  padding: 10px 20px;\n  min-height: 80vh;\n  background-color: var(--secondaryBgColor);\n  background-image: ${({ $isBackground, $backgroundImg }) =>\n    $isBackground ? `url(${$backgroundImg}_375x812.webp)` : 'none'};\n\n  background-repeat: no-repeat;\n  max-width: 375px;\n  height: auto;\n  background-position: center;\n  background-size: cover;\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: ${({ $isBackground, $backgroundImg }) =>\n      $isBackground ? `url(${$backgroundImg}_750x1624.webp)` : 'none'};\n  }\n\n  @media (min-width: 768px) {\n    background-image: ${({ $isBackground, $backgroundImg }) =>\n      $isBackground ? `url(${$backgroundImg}_768x956.webp)` : 'none'};\n    max-width: 768px;\n  }\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: ${({ $isBackground, $backgroundImg }) =>\n      $isBackground ? `url(${$backgroundImg}_1536x1912.webp)` : 'none'};\n  }\n\n  @media (min-width: 1440px) {\n    background-image: ${({ $isBackground, $backgroundImg }) =>\n      $isBackground ? `url(${$backgroundImg}_1180x770.webp)` : 'none'};\n\n    max-width: 1180px;\n    grid-column: 2 / 3;\n    grid-row: 2 / 3;\n  }\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: ${({ $isBackground, $backgroundImg }) =>\n      $isBackground ? `url(${$backgroundImg}_2360x1540.webp)` : 'none'};\n  }\n`;\n\n","import { useEffect } from 'react';\nimport { Header } from 'components/Header';\nimport { Sidebar } from 'components/SideBar';\nimport { ScreensPage } from 'components/ScreensPage';\nimport { StartScreen } from 'components/StartScreen';\nimport { Main, SidebarWrapper } from './HomePage.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Outlet, useNavigate, useParams } from 'react-router-dom';\nimport { selectCurrentBoard } from '../../redux/boards/boardsSelectors';\nimport { fetchBoardById } from '../../redux/boards/boardsOperations';\nimport { fetchColumnsByBoardId } from '../../redux/columns/columnsOperations';\nimport { fetchCards } from '../../redux/cards/cardsOperations';\nimport { useAuth } from 'hooks';\n\nexport default function HomePage() {\n  const dispatch = useDispatch();\n  const { boardId } = useParams();\n  const { isLoggedIn } = useAuth();\n  const navigate = useNavigate();\n  const currBoard = useSelector(selectCurrentBoard);\n\n  useEffect(() => {\n    const boardFromLS = localStorage.getItem('lastBoard');\n    if (!boardFromLS) return;\n    if (boardFromLS === boardId) return;\n    navigate(`/${boardFromLS}`);\n    return () => {};\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (!boardId) return;\n    if (!isLoggedIn) return;\n    dispatch(fetchBoardById(boardId));\n    dispatch(fetchColumnsByBoardId(boardId));\n    dispatch(fetchCards(boardId));\n\n    return () => {};\n  }, [boardId, dispatch, isLoggedIn]);\n\n\n  const background = currBoard?.background || 'diego';\n  const title = currBoard?.title;\n  const baseUrl =\n    'https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/';\n  const backgroundImgUrl = baseUrl + background;\n\n  return (\n    <>\n      <Header />\n      <SidebarWrapper>\n        <Sidebar />\n      </SidebarWrapper>\n      {currBoard ? (\n        <Main\n          $backgroundImg={backgroundImgUrl}\n          $isBackground={background !== 'noBack'}\n        >\n          <ScreensPage boardTitle={title} />\n          <Outlet />\n        </Main>\n      ) : (\n        <StartScreen />\n      )}\n    </>\n  );\n}\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Name","_templateObject2","Avatar","_templateObject3","Button","_templateObject4","ButtonSvg","_templateObject5","Title","StyledForm","Form","StyledField","Field","LastField","_templateObject6","ErrMsg","ErrorMessage","_templateObject7","Label","_templateObject8","StyledLabel","_templateObject9","ContainerAvatar","Input","UpdateAvatar","user","useAuth","showImage","dispatch","useDispatch","filePicker","useRef","_jsxs","children","_jsx","src","avatarURL","width","height","alt","Icon","name","onClick","current","click","stroke","type","ref","onChange","event","selectedFile","target","files","toast","updateAvatar","loading","success","error","accept","EditProfileSchema","Yup","shape","min","max","matches","required","email","password","EditProfile","_ref","closeModal","Formik","initialValues","validationSchema","onSubmit","values","actions","update","id","component","placeholder","UserInfo","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","openModal","Modal","isOpen","className","overlayClassName","contentLabel","onRequestClose","selectBoards","state","_state$boards","boards","selectCurrentBoard","_state$boards2","currentBoard","sendDataEmail","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","axios","t0","stop","_x","apply","arguments","ContainerForModal","TitleForModal","StyledFormInModal","StyledFieldInModal","StyledTextareaInModal","ButtonForModal","ButtonClose","emailForSupport","textMessage","builderSchema","SendEmail","onClose","form","resetForm","rows","NeedHelpBlock","NeedHelpBtn","NeedHelp","srcSet","style","color","BoardCreationBlock","BoardText","BtnCreate","ModalWrap","ModalTitle","CloseBtn","FormWrap","Text","IconsListWrap","InvisibleInput","BackgroundsPallet","_templateObject10","LabelPic","_templateObject11","Div","_templateObject12","AddBtn","_templateObject13","IconWrap","_templateObject14","iconsArr","backgroundsArr","schema","title","icon","oneOf","background","BoardCreatingModal","navigate","useNavigate","_ref2","_yield$dispatch","_id","addBoard","sent","payload","localStorage","setItem","concat","map","el","value","srcSetPath","srcDefault","BoardCreation","btnText","ControlIconsContainer","BoardItemContainer","props","selected","BoardEditModal","board","boardId","editBoard","BoardItem","isActive","useSelector","currBoardId","useParams","tagName","closest","handleSelectBoard","opacity","cursor","deleteBoard","clearCurrentBoard","removeItem","filteredBoards","filter","length","lastBoardObj","handleDelete","SidebarStylesWrapper","Logo","BoardContainer","BoardList","LogOut","Sidebar","useEffect","fetchBoards","logOut","DrpdwnBtn","ThemesList","visibility","_ref3","transform","ThemeItem","ThemeSwitcher","setIsOpen","menuRef","callback","handleClick","evnt","contains","document","addEventListener","removeEventListener","useClickOutside","setTimeout","heigth","changeTheme","theme","scrollSwitcher","bool","body","position","HeaderStyled","MenuBtn","HeaderWrapper","customStylesForModal","content","top","left","right","bottom","padding","border","overlay","Header","isMenuOpen","setIsOpenMenu","FiltersTytle","FiltersWrap","FilterLabel","ShowAllBtn","StyledRadioGroup","RadioLabel","$priority","FiltersSpan","RadioFilters","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","currValue","get","handleFilter","priority","_Fragment","role","item","text","str","charAt","toUpperCase","slice","capitalizer","checked","nanoid","FilterModal","Wrap","customStyles","borderRadius","BoardTitle","FilterBtn","HeaderDashboard","boardTitle","CardBody","CardColor","CardTitle","CardDescription","CardSolid","CardDetals","CardInformation","Priority","PriorityDetals","PriorityTitle","PriorityColor","PriorityTipe","Deadline","DeadlineTitle","DeadlineDate","_templateObject15","CardButtons","_templateObject16","Bell","_templateObject17","$bell","_templateObject18","Calendar","selectedDate","onDateChange","DatePicker","date","dateFormat","minDate","Date","locale","enGB","weekStartsOn","TitleModal","CloseModal","TitleCard","StyledDescription","LabelColorStyle","DeadlineStyle","AddButton","StylePlus","Span","ButtonText","RadioButton","RadioInputs","defaultChecked","onPriorityChange","setCurrValue","handleInput","formCardSchema","deadline","EditCardModal","card","cardId","setSelectedDate","editCard","handleSubmit","setFieldValue","MoveList","MoveCardItemStyled","MoveCardItemButtonStyled","MoveCardItem","column","currentId","chengeColumnsCard","toColumnId","MoveCardDropdown","currColumnId","columns","Card","modalCardIsOpen","setmodalCardIsOpen","_useState3","_useState4","isOpenMoveCardModal","setIsOpenMoveCardModal","columnId","dateDeadline","formatedDate","getUTCDate","getUTCMonth","toString","padStart","getFullYear","cardTextDescription","substring","bell","closeCardModal","deleteCard","CardList","_templateObject19","_templateObject20","AddCardModal","addCard","HeadWrap","IconedBtn","addColumnFormSchema","EditColumnFormik","editColumn","ColumnHead","isOpenModal","setIsOpenModal","handleModalClose","deleteColumn","ariaHideApp","Column","_filtredCards","cards","filtredCards","ColumnList","ColumnItem","AddColumnFormik","addColumn","Board","modalIsOpen","ScreensPage","StartContainer","StartText","boxShadow","BoardCreationBtn","StartScreen","SidebarWrapper","Main","$isBackground","$backgroundImg","_ref4","_ref5","_ref6","HomePage","isLoggedIn","currBoard","boardFromLS","getItem","fetchBoardById","fetchColumnsByBoardId","fetchCards","backgroundImgUrl","Outlet"],"sourceRoot":""}