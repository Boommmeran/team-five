{"version":3,"file":"static/js/411.820738fb.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/AuthPage/AuthPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const LabelStyled = styled.label`\n  position: relative;\n`;\nexport const LoginStyledSection = styled.div`\n  background: linear-gradient(rgba(255, 255, 255, 1) 30%, #bedbb0 92.19%);\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const LogInputStyled = styled.input`\n  @media only screen and (max-width: 320px) {\n    width: 100%;\n  }\n  display: flex;\n  width: 287px;\n  height: 49px;\n  color: rgba(255, 255, 255, 0.3);\n  background: inherit;\n  padding: 15px;\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  border-radius: 8px;\n  transition: var(--transition);\n  outline: none;\n  &:hover,\n  &:focus,\n  &:active {\n    color: white;\n    border-color: rgba(190, 219, 176, 1);\n  }\n  @media only screen and (min-width: 768px) {\n    width: 344px;\n  }\n`;\nexport const IconStyledEye = styled.i`\n  position: absolute;\n  top: 33%;\n  right: 5%;\n`;\n\nexport const StyledNavLinkLogin = styled(NavLink)`\n  font-family: 'Poppins-medium', sans-serif;\n  color: rgba(255, 255, 255, 0.3);\n  font-size: 18px;\n  cursor: pointer;\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    color: white;\n  }\n  &.active {\n    color: white;\n  }\n  @media only screen and (max-width: 375px) {\n    font-size: 12px;\n  }\n`;\nexport const FormLoginStyled = styled.form`\n  @media only screen and (max-width: 320px) {\n    width: 100%;\n  }\n  width: 335px;\n  height: 300px;\n  padding: 20px 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  background: rgba(21, 21, 21, 1);\n  border-radius: 8px;\n  gap: 10px;\n  @media only screen and (min-width: 768px) {\n    width: 424px;\n    height: 332px;\n    padding: 40px 38px;\n  }\n`;\nexport const WrapForLoginNav = styled.div`\n  display: flex;\n  align-items: start;\n  width: 100%;\n  gap: 15px;\n  margin-bottom: 25px;\n`;\nexport const ButtonLogin = styled.button`\n  @media only screen and (max-width: 320px) {\n    width: 100%;\n  }\n  font-family: 'Poppins-medium', sans-serif;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  cursor: pointer;\n  color: black;\n  width: 287px;\n  height: 49px;\n  background: rgba(190, 219, 176, 1);\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  border-radius: 8px;\n  transition: var(--transition);\n  &:hover,\n  &:focus {\n    background: rgba(157, 200, 136, 1);\n  }\n  \n  @media only screen and (min-width: 768px) {\n    width: 344px;\n  }\n`;\nexport const ErrorLoginMessage = styled.p`\n  position: absolute;\n  top: 2px;\n  right: 4px;\n\n  color: red;\n  font-size: 12px;\n\n  @media only screen and (max-width: 375px) {\n    font-size: 8px;\n  }\n`;\n","import { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { logInUser } from '../../redux/auth/authOperation';\nimport { useState } from 'react';\nimport { Icon } from 'components/Icon';\nimport {\n  ButtonLogin,\n  ErrorLoginMessage,\n  FormLoginStyled,\n  IconStyledEye,\n  LabelStyled,\n  LogInputStyled,\n  LoginStyledSection,\n  StyledNavLinkLogin,\n  WrapForLoginNav,\n} from './LoginForm.styled';\n\nexport const LoginForm = () => {\n  const [passwordShown, setPasswordShown] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors, isValid },\n  } = useForm({ mode: 'onBlur' });\n  const onSubmit = data => {\n    dispatch(logInUser(data));\n    reset();\n  };\n\n  return (\n    <LoginStyledSection>\n      <FormLoginStyled onSubmit={handleSubmit(onSubmit)}>\n        <WrapForLoginNav>\n          <StyledNavLinkLogin to=\"/auth/register\">\n            Registration\n          </StyledNavLinkLogin>\n          <StyledNavLinkLogin to=\"/auth/login\">Login</StyledNavLinkLogin>\n        </WrapForLoginNav>\n        <LabelStyled>\n          {' '}\n          <LogInputStyled\n            placeholder=\"Enter your email\"\n            name=\"email\"\n            type=\"email\"\n            {...register('email', {\n              required: 'Required field',\n              pattern: /^\\S+@\\S+$/i,\n            })}\n          />\n          {errors?.email && (\n            <ErrorLoginMessage style={{ color: 'red' }}>\n              {errors?.email?.message || 'Error'}\n            </ErrorLoginMessage>\n          )}\n        </LabelStyled>\n        <LabelStyled>\n          <LogInputStyled\n            placeholder=\"Confirm a password\"\n            name=\"password\"\n            type={passwordShown ? 'text' : 'password'}\n            {...register('password', {\n              required: 'Required field',\n              minLength: {\n                value: 8,\n                message: 'Password must include minimum 8 characters',\n              },\n            })}\n          />\n          <IconStyledEye\n            onClick={() => {\n              setPasswordShown(!passwordShown);\n            }}\n          >\n            <Icon\n              name=\"eye\"\n              stroke={passwordShown ? 'white' : 'rgba(255, 255, 255, 0.3)'}\n            />\n          </IconStyledEye>\n          {errors?.password && (\n            <ErrorLoginMessage style={{ color: 'red' }}>\n              {errors?.password?.message || 'Error'}\n            </ErrorLoginMessage>\n          )}\n        </LabelStyled>\n        <ButtonLogin type=\"submit\" disabled={!isValid}>\n          Login Now\n        </ButtonLogin>\n      </FormLoginStyled>\n    </LoginStyledSection>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const LabelStyled = styled.label`\n  position: relative;\n`;\nexport const RegisterStyledSection = styled.div`\n  background: linear-gradient(rgba(255, 255, 255, 1) 30%, #bedbb0 92.19%);\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const RegInputStyled = styled.input`\n  @media only screen and (max-width: 320px) {\n    width: 100%;\n  }\n  display: flex;\n  width: 287px;\n  height: 49px;\n  color: rgba(255, 255, 255, 0.3);\n  background: inherit;\n  padding: 15px;\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  border-radius: 8px;\n  outline: none;\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    color: white;\n    border-color: rgba(190, 219, 176, 1);\n  }\n  @media only screen and (min-width: 768px) {\n    width: 344px;\n  }\n`;\nexport const IconStyledEye = styled.i`\n  position: absolute;\n  top: 33%;\n  right: 5%;\n  transition: var(--transition);\n`;\n\nexport const StyledNavLinkRegister = styled(NavLink)`\n  font-family: 'Poppins-medium', sans-serif;\n  color: rgba(255, 255, 255, 0.3);\n  font-size: 18px;\n  transition: var(--transition);\n  cursor: pointer;\n  &:hover,\n  &:focus,\n  &:active {\n    color: white;\n  }\n  &.active {\n    color: white;\n  }\n  @media only screen and (max-width: 375px) {\n    font-size: 12px;\n  }\n`;\nexport const FormRegisterStyled = styled.form`\n  @media only screen and (max-width: 320px) {\n    width: 100%;\n  }\n  width: 335px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  background: rgba(21, 21, 21, 1);\n  border-radius: 8px;\n  gap: 18px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 30px 24px;\n  @media only screen and (min-width: 768px) {\n    width: 424px;\n    padding: 50px 42px;\n  }\n`;\nexport const WrapForRegNav = styled.div`\n  display: flex;\n  align-items: start;\n  width: 100%;\n  gap: 15px;\n  margin-bottom: 30px;\n`;\nexport const ButtonRegister = styled.button`\n  @media only screen and (max-width: 320px) {\n    width: 100%;\n  }\n  font-family: 'Poppins-medium', sans-serif;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  cursor: pointer;\n  color: black;\n  width: 287px;\n  height: 49px;\n  background: rgba(190, 219, 176, 1);\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  border-radius: 8px;\n  transition: var(--transition);\n  &:hover,\n  &:focus {\n    background: rgba(157, 200, 136, 1);\n  }\n  @media only screen and (min-width: 768px) {\n    width: 344px;\n  }\n`;\nexport const ErrorRegistrationMessage = styled.p`\n  position: absolute;\n  top: 2px;\n  right: 4px;\n\n  color: red;\n  font-size: 12px;\n  @media only screen and (max-width: 375px) {\n    font-size: 8px;\n  }\n`;\n","import { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from '../../redux/auth/authOperation';\n\nimport { useState } from 'react';\nimport { Icon } from 'components/Icon';\nimport {\n  ButtonRegister,\n  ErrorRegistrationMessage,\n  FormRegisterStyled,\n  IconStyledEye,\n  LabelStyled,\n  RegInputStyled,\n  RegisterStyledSection,\n  StyledNavLinkRegister,\n  WrapForRegNav,\n} from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const [passwordShown, setPasswordShown] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    reset,\n    formState: { errors, isValid },\n  } = useForm({ mode: 'all' });\n\n  const onSubmit = data => {\n    dispatch(\n      registerUser({\n        name: data.name,\n        email: data.email,\n        password: data.password,\n      })\n    );\n    reset();\n  };\n\n  return (\n    <RegisterStyledSection>\n      <FormRegisterStyled onSubmit={handleSubmit(onSubmit)}>\n        <WrapForRegNav>\n          <StyledNavLinkRegister to=\"/auth/register\">\n            Registration\n          </StyledNavLinkRegister>\n          <StyledNavLinkRegister to=\"/auth/login\">Login</StyledNavLinkRegister>\n        </WrapForRegNav>\n        <LabelStyled>\n          {' '}\n          <RegInputStyled\n            placeholder=\"Enter your name\"\n            {...register('name', {\n              required: 'Required field',\n              minLength: {\n                value: 2,\n                message: 'Name is too short',\n              },\n            })}\n          />\n          {errors?.name && (\n            <ErrorRegistrationMessage>\n              {errors?.name?.message || 'Error'}\n            </ErrorRegistrationMessage>\n          )}\n        </LabelStyled>\n        <LabelStyled>\n          {' '}\n          <RegInputStyled\n            placeholder=\"Enter your email\"\n            name=\"email\"\n            type=\"email\"\n            {...register('email', {\n              required: 'Required field',\n              pattern: {\n                value: /^\\S+@\\S+$/i,\n                message: 'Email must include @ and .',\n              },\n            })}\n          />\n          {errors?.email && (\n            <ErrorRegistrationMessage>\n              {errors?.email?.message || 'Error'}\n            </ErrorRegistrationMessage>\n          )}\n        </LabelStyled>\n        <LabelStyled>\n          <RegInputStyled\n            placeholder=\"Create a password\"\n            name=\"password\"\n            type={passwordShown ? 'text' : 'password'}\n            {...register('password', {\n              required: 'Required field',\n              minLength: {\n                value: 8,\n                message: 'Password must include minimum 8 characters',\n              },\n            })}\n          />\n          <IconStyledEye\n            onClick={() => {\n              setPasswordShown(!passwordShown);\n            }}\n          >\n            <Icon\n              name=\"eye\"\n              stroke={passwordShown ? 'white' : 'rgba(255, 255, 255, 0.3)'}\n            />\n          </IconStyledEye>\n          {errors?.password && (\n            <ErrorRegistrationMessage>\n              {errors?.password?.message || 'Error'}\n            </ErrorRegistrationMessage>\n          )}\n        </LabelStyled>\n        <LabelStyled>\n          {' '}\n          <RegInputStyled\n            placeholder=\"Confirm your password\"\n            type={isActive ? 'text' : 'password'}\n            name=\"confirmPassword\"\n            {...register('confirm_password', {\n              required: 'Required field',\n              validate: val => {\n                if (watch('password') !== val) {\n                  return 'Your passwords do no match';\n                }\n              },\n            })}\n          />{' '}\n          <IconStyledEye\n            onClick={() => {\n              setIsActive(!isActive);\n            }}\n          >\n            <Icon\n              name=\"eye\"\n              stroke={isActive ? 'white' : 'rgba(255, 255, 255, 0.3)'}\n            />\n          </IconStyledEye>\n          {errors?.confirm_password && (\n            <ErrorRegistrationMessage>\n              {errors?.confirm_password?.message || 'Error'}\n            </ErrorRegistrationMessage>\n          )}\n        </LabelStyled>\n        <ButtonRegister type=\"submit\" disabled={!isValid}>\n          Register Now\n        </ButtonRegister>\n      </FormRegisterStyled>\n    </RegisterStyledSection>\n  );\n};\n","import { LoginForm } from 'components/LoginForm';\nimport { RegisterForm } from 'components/RegisterForm';\nimport { useParams } from 'react-router-dom';\n\nexport default function AuthPage() {\n  let { id } = useParams();\n  return <>{id === 'login' ? <LoginForm /> : <RegisterForm />}</>;\n}\n"],"names":["LabelStyled","styled","_templateObject","_taggedTemplateLiteral","LoginStyledSection","_templateObject2","LogInputStyled","_templateObject3","IconStyledEye","_templateObject4","StyledNavLinkLogin","NavLink","_templateObject5","FormLoginStyled","_templateObject6","WrapForLoginNav","_templateObject7","ButtonLogin","_templateObject8","ErrorLoginMessage","_templateObject9","LoginForm","_errors$email","_errors$password","_useState","useState","_useState2","_slicedToArray","passwordShown","setPasswordShown","dispatch","useDispatch","_useForm","useForm","mode","register","handleSubmit","reset","_useForm$formState","formState","errors","isValid","_jsx","children","_jsxs","onSubmit","data","logInUser","to","_objectSpread","placeholder","name","type","required","pattern","email","style","color","message","minLength","value","onClick","Icon","stroke","password","disabled","RegisterStyledSection","RegInputStyled","StyledNavLinkRegister","FormRegisterStyled","WrapForRegNav","ButtonRegister","ErrorRegistrationMessage","RegisterForm","_errors$name","_errors$confirm_passw","_useState3","_useState4","isActive","setIsActive","watch","registerUser","validate","val","confirm_password","AuthPage","id","useParams","_Fragment"],"sourceRoot":""}