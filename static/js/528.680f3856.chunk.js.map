{"version":3,"file":"static/js/528.680f3856.chunk.js","mappings":"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","sources":["components/UserInfo/UserInfo.styled.js","components/EditProfile/EditProfile.styled.js","components/UpdateAvatar/UpdateAvatar.styled.js","components/UpdateAvatar/UpdateAvatar.jsx","schemas/editProfileSchema.js","components/EditProfile/EditProfile.jsx","components/UserInfo/UserInfo.jsx","redux/boards/boardsSelectors.js","services/sendDataEmail.js","components/SendEmail/SendEmail.styled.js","components/SendEmail/SendEmail.jsx","components/NeedHelp/NeedHelp.styled.js","components/NeedHelp/NeedHelp.jsx","components/SidebarBoardCreation/BoardCreation.styled.js","components/BoardCreatingModal/BoardCreatingModal.styled.js","components/BoardCreatingModal/BoardCreatingModal.jsx","components/SidebarBoardCreation/BoardCreation.jsx","components/BoardItem/BoardItem.styled.js","components/BoardEditModal/BoardEditModal.styled.js","components/BoardEditModal/BoardEditModal.jsx","components/BoardItem/BoardItem.jsx","components/SideBar/SideBar.styled.js","components/SideBar/SideBar.jsx","components/ThemeSwitcher/ThemeSwitcher.styled.js","components/ThemeSwitcher/ThemeSwitcher.jsx","hooks/useClickOutside.js","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/FilterModal/FilterModal.styled.jsx","components/RadioFiltres/RadioFiltres.styled.js","components/RadioFiltres/RadioFiltres.jsx","helpers/capitalizer.js","components/FilterModal/FilterModal.jsx","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/HeaderDashboard/HeaderDashboard.jsx","components/Card/Card.styled.js","components/Calendar/Calendar.js","components/EditCardModal/EditCardModal.styled.js","components/RadioInputs/RadioInputs.styled.js","components/RadioInputs/RadioInputs.jsx","components/EditCardModal/EditCardModal.jsx","components/MoveCardDropdown/MoveCardDropdown.styled.js","components/MoveCardItem/MoveCardItem.styled.js","components/MoveCardItem/MoveCardItem.jsx","components/MoveCardDropdown/MoveCardDropdown.jsx","components/Card/Card.jsx","components/Column/Column.styled.js","components/AddCardModal/AddCardModal.styled.js","components/AddCardModal/AddCardModal.jsx","components/ColumnHead/ColumnHead.styled.js","components/EditColumnFormik/EditColumnFormik.styled.js","components/EditColumnFormik/EditColumnFormik.jsx","components/ColumnHead/ColumnHead.jsx","components/Column/Column.jsx","components/Board/Board.styled.js","components/AddColumnFormik/AddColumnFormik.styled.js","components/AddColumnFormik/AddColumnFormik.jsx","components/Board/Board.jsx","components/ScreensPage/ScreensPage.jsx","components/StartScreen/StartScreen.styled.js","components/StartScreen/StartScreen.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const Name = styled.p`\n  margin: 5px 0;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -2;\n  color: var(--secondaryTextColor);\n`;\n\nexport const Avatar = styled.img`\n  border-radius: 8px;\n  cursor: pointer;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 10px;\n  color: var(--primaryTextColor);\n  background: var(--modalBgColor);\n  border: 0;\n  cursor: pointer;\n`;\n\nexport const ButtonSvg = styled.button`\n  padding: 0;\n  margin: 0;\n  border: 0;\n  border-radius: 8px;\n  background-color: var(--primaryBgColor);\n  cursor: pointer;\n`;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Container = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 100%;\n  height: 440px;\n  border-radius: 8px;\n  background: var(--modalBgColor);\n\n  @media only screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin: 0 0 24px 0;\n  font-family: 'Poppins-Medium';\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledField = styled(Field)`\n  position: relative;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  width: 100%;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  opacity: 0.4;\n  border-radius: 8px;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  background-color: var(--modalBgColor);\n  color: var(--secondaryTextColor);\n  transition: opacity var(--transition);\n\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n`;\n\nexport const LastField = styled(Field)`\n  margin-bottom: 24px;\n  padding: 14px 18px;\n  width: 100%;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  opacity: 0.4;\n  border-radius: 8px;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  background: var(--modalBgColor);\n  color: var(--secondaryTextColor);\n  transition: opacity var(--transition);\n\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  background: var(--accent);\n  border: 0;\n  border-radius: 8px;\n  padding: 14px 126px;\n  color: var(--btnText);\n  font-family: 'Poppins-Medium';\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0, 02em;\n  transition: background-color var(--transition);\n  &:hover,\n  &:focus {\n    background: var(--hover);\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  font-size: 12px;\n  font-style: italic;\n  color: red;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n\nexport const StyledLabel = styled.label`\n  position: relative;\n  display: block;\n\n  svg {\n    position: absolute;\n    top: 16px;\n    right: 15px;\n    opacity: 0, 5;\n\n    &:active {\n      opacity: 1;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ContainerAvatar = styled.div`\n  margin-bottom: 25px;\n  position: relative;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Avatar = styled.img`\n  border-radius: 8px;\n`;\n\nexport const Input = styled.input`\n  opacity: 0;\n  height: 0;\n  width: 0;\n  line-height: 0;\n  overfow: hidden;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 56px;\n  left: 46%;\n\n  width: 24px;\n  height: 24px;\n  background: var(--accent);\n  border-radius: 8px;\n  border: 0;\n  transition: background-color var(--transition);\n\n  &:hover,\n  &:focus {\n    background: var(--hover);\n  }\n\n  @media only screen and (min-width: 768px) {\n    left: 47%;\n  }\n`;\n","import { useRef } from 'react';\nimport { Input, Button, ContainerAvatar, Avatar } from './UpdateAvatar.styled';\n\nimport { useAuth } from 'hooks';\nimport { useDispatch } from 'react-redux';\nimport { updateAvatar } from '../../redux/auth/authOperation';\n\nimport { Icon } from 'components/Icon';\n\nconst cloudinaryBaseURL =\n  'https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707503119/';\n\nexport const UpdateAvatar = () => {\n  const { user } = useAuth();\n  const { showSvg } = useAuth();\n  const { showImage } = useAuth();\n\n  const dispatch = useDispatch();\n\n  const filePicker = useRef(null);\n\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n\n    dispatch(updateAvatar(selectedFile));\n  };\n\n  const handlePick = () => {\n    filePicker.current.click();\n  };\n\n  return (\n    <ContainerAvatar>\n      {showSvg && (\n        <Icon\n          name=\"user\"\n          fill=\"var(--secondaryBgColor)\"\n          stroke=\"var(--secondaryTextColor)\"\n          width=\"68px\"\n          height=\"68px\"\n        />\n      )}\n      {showImage && (\n        <Avatar\n          src={cloudinaryBaseURL + user.avatarURL}\n          width=\"68\"\n          height=\"68\"\n          alt=\"user photo\"\n        />\n      )}\n\n      <Button onClick={handlePick}>\n        <Icon name=\"plus\" width=\"10px\" height=\"10px\" stroke=\"#161616\" />\n      </Button>\n      <Input\n        type=\"file\"\n        ref={filePicker}\n        onChange={handleFileChange}\n        accept=\"image/*,.jpg,.png,.gif,.web,\"\n      />\n    </ContainerAvatar>\n  );\n};\n","import * as Yup from 'yup';\n\nexport const EditProfileSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, '2 chars minimum')\n    .max(32, '32 chars maximum')\n    .matches(/^[a-zA-Z0-9!@#$%^&*(),.?\":{}|<>]+$/, 'Invalin name ')\n    .required('this field is required'),\n  email: Yup.string().email('Invalid email').required('this field is required'),\n  password: Yup.string()\n    .min(8, '8 chars minimum')\n    .max(64, '64 chars maximum')\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*(),.?\":{}|<>]+$/,\n      'only latin letters, numbers and symbols'\n    )\n    .matches(/^\\S*$/, 'password must not contain spaces')\n    .required('this field is required '),\n});","import {\n  Container,\n  Title,\n  Button,\n  StyledForm,\n  StyledField,\n  LastField,\n  ErrMsg,\n  StyledLabel,\n  Label,\n} from './EditProfile.styled';\nimport { Formik } from 'formik';\n\nimport { useAuth } from 'hooks';\nimport { update } from '../../redux/auth/authOperation';\nimport { useDispatch } from 'react-redux';\nimport { UpdateAvatar } from 'components/UpdateAvatar';\nimport { Icon } from 'components/Icon';\nimport { EditProfileSchema } from 'schemas/editProfileSchema';\n\nexport const EditProfile = ({ closeModal }) => {\n  const { user } = useAuth();\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <Title>Edit profile</Title>\n      <UpdateAvatar />\n\n      <Formik\n        initialValues={{\n          name: user.name,\n          email: user.email,\n          password: '',\n        }}\n        validationSchema={EditProfileSchema}\n        onSubmit={(values, actions) => {\n          dispatch(update(values));\n          closeModal();\n        }}\n      >\n        <StyledForm>\n          <Label>\n            <StyledField id=\"name\" name=\"name\" />\n            <ErrMsg name=\"name\" component=\"p\" />\n          </Label>\n\n          <Label>\n            <StyledField id=\"email\" name=\"email\" type=\"email\" />\n            <ErrMsg name=\"email\" component=\"p\" />\n          </Label>\n\n          <StyledLabel>\n            <Icon name=\"eye\" stroke=\"var(--secondaryTextColor)\" />\n            <LastField\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Enter or update your password\"\n            />\n            <ErrMsg name=\"password\" component=\"p\" />\n          </StyledLabel>\n\n          <Button type=\"submit\">Submit</Button>\n        </StyledForm>\n      </Formik>\n    </Container>\n  );\n};\n","import { Container, Name, Avatar, Button, ButtonSvg } from './UserInfo.styled';\nimport { EditProfile } from 'components/EditProfile';\nimport { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\n\nimport { useAuth } from 'hooks';\n\nconst cloudinaryBaseURL =\n  'https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707503119/';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    padding: '0',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: ' 0 4px 16px 0 rgba(22, 22, 22, 0.05)',\n    borderRadius: '8px',\n    border: '0',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const UserInfo = () => {\n  const { user } = useAuth();\n  const { showSvg } = useAuth();\n  const { showImage } = useAuth();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <Container>\n      <Name>{user.name}</Name>\n      {showSvg && (\n        <ButtonSvg onClick={openModal}>\n          <Icon\n            name=\"user\"\n            fill=\"var(--primaryBgColor)\"\n            stroke=\"var(--secondaryTextColor)\"\n            width=\"32px\"\n            height=\"32px\"\n          />\n        </ButtonSvg>\n      )}\n\n      {showImage && (\n        <Avatar\n          src={cloudinaryBaseURL + user.avatarURL}\n          width=\"32\"\n          height=\"32\"\n          alt=\"user photo\"\n          onClick={openModal}\n        />\n      )}\n\n      <Modal isOpen={isModalOpen} style={customStyles} contentLabel=\"Modal\">\n        <EditProfile closeModal={closeModal} />\n        <Button onClick={closeModal}>\n          <Icon name=\"close\" stroke=\"var(--secondaryTextColor)\" />\n        </Button>\n      </Modal>\n    </Container>\n  );\n};\n","export const selectBoards = state => state.boards?.boards;\nexport const selectCurrentBoard = state => state.boards?.currentBoard;","import axios from 'axios';\nimport toast from 'react-hot-toast';\n\nexport const sendDataEmail = async data => {\n  try {\n    await axios.post('/support', data);\n    toast.success('Successfully sent!');\n  } catch (error) {\n    toast.error('Oops. Something went wrong.');\n  }\n};\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const ContainerForModal = styled.div`\n  position: relative;\n  padding: 24px 34px 50px 24px;\n  width: 320px;\n  height: 381px;\n\n  background-color: var(--modalBgColor);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.05);\n\n  @media only screen and (min-width: 375px) {\n    width: 345px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 400px;\n    height: 355px;\n    padding: 24px;\n  }\n`;\n\nexport const TitleForModal = styled.h2`\n  margin-bottom: 24px;\n\n  text-align: start;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--textColorcalendar);\n`;\nexport const StyledFormInModal = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledFieldInModal = styled(Field)`\n  position: relative;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  width: 100%;\n\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  resize: none;\n  opacity: 0.4;\n\n  font-size: 14px;\n  line-height: 1.4;\n\n  background: var(--modalBgColor);\n  color: var(--textColorcalendar);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n\n  transition: opacity var(--transition);\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: 19px;\n    width: 100%;\n  }\n  @media only screen and (min-width: 1440px) {\n    margin-bottom: 14px;\n  }\n`;\n\nexport const StyledTextareaInModal = styled(Field)`\n  position: relative;\n  margin-bottom: 24px;\n  padding: 14px 18px;\n  width: 100%;\n\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  resize: none;\n  opacity: 0.4;\n\n  font-size: 14px;\n  height: calc(30px * 4);\n  line-height: 1.5;\n  color: var(--textColorcalendar);\n  background: var(--modalBgColor);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n\n  transition: opacity var(--transition);\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 100%;\n  }\n`;\n\nexport const ButtonForModal = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 49px;\n  width: 100%;\n\n  background-color: var(--accent);\n  border: 0;\n  border-radius: 8px;\n\n  color: var(--btnText);\n  font-size: 14px;\n  line-height: 1.5;\n  cursor: pointer;\n\n  transition: background-color var(--transition);\n\n  &:hover,\n  :focus {\n    background-color: var(--btnBgColorHover);\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 100%;\n  }\n`;\n\nexport const ButtonClose = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  padding: 0;\n  border: none;\n  background: none;\n\n  cursor: pointer;\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  font-size: 12px;\n  font-style: italic;\n  color: red;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { sendDataEmail } from 'services/sendDataEmail';\nimport {\n  ButtonClose,\n  ButtonForModal,\n  ContainerForModal,\n  ErrMsg,\n  Label,\n  StyledFieldInModal,\n  StyledFormInModal,\n  StyledTextareaInModal,\n  TitleForModal,\n} from './SendEmail.styled';\nimport { Icon } from 'components/Icon';\n\nconst initialValues = {\n  emailForSupport: '',\n  textMessage: '',\n};\n\nconst builderSchema = Yup.object().shape({\n  emailForSupport: Yup.string().email().required('This field is required'),\n  textMessage: Yup.string()\n    .min(5, `It's can be up to 5 characters long`)\n    .required(`This field is required`),\n});\n\nexport const SendEmail = ({ onClose }) => {\n  const onSubmit = (data, form) => {\n    sendDataEmail(data);\n    form.resetForm();\n    onClose();\n  };\n\n  return (\n    <ContainerForModal>\n      <TitleForModal>Need help</TitleForModal>\n      <ButtonClose type=\"button\" onClick={onClose}>\n        <Icon\n          stroke=\"var(--textColorcalendar)\"\n          name=\"close\"\n          width=\"18\"\n          height=\"18\"\n        />\n      </ButtonClose>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={builderSchema}\n        onSubmit={onSubmit}\n      >\n        <StyledFormInModal>\n          <Label>\n            <StyledFieldInModal\n              type=\"email\"\n              name=\"emailForSupport\"\n              placeholder=\"Email address\"\n            />\n            <ErrMsg component=\"p\" name=\"emailForSupport\" />\n          </Label>\n\n          <Label>\n            <StyledTextareaInModal\n              rows={4}\n              component=\"textarea\"\n              type=\"text\"\n              name=\"textMessage\"\n              placeholder=\"Comment\"\n            />\n            <ErrMsg component=\"p\" name=\"textMessage\" />\n          </Label>\n\n          <ButtonForModal type=\"submit\">Send</ButtonForModal>\n        </StyledFormInModal>\n      </Formik>\n    </ContainerForModal>\n  );\n};\n","import styled from 'styled-components';\n\nexport const NeedHelpBlock = styled.div`\n  height: 238px;\n  padding: 14px;\n  margin-bottom: 24px;\n  font-size: 12px;\n  border-radius: 8px;\n  background-color: var(--secondaryBgColor);\n\n  p {\n    margin-top: 14px;\n    margin-bottom: 18px;\n    line-height: 1.33333;\n    letter-spacing: 0;\n  }\n`;\n\nexport const NeedHelpBtn = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  background: none;\n  display: flex;\n  align-items: center;\n\n  span {\n    margin-left: 8px;\n    color: var(--primaryTextColor);\n    font-family: 'Poppins-Medium';\n  }\n`;","import { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { SendEmail } from 'components/SendEmail';\nimport { NeedHelpBlock, NeedHelpBtn } from './NeedHelp.styled';\n\nconst customStyles = {\n  content: {\n    width: 'fit-content',\n    height: 'fit-content',\n    padding: 0,\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\n// Modal.setAppElement('#root');\n\nexport const NeedHelp = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <NeedHelpBlock>\n      <picture>\n        <source\n          srcSet=\"\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-1x.webp 1x,\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-2x.webp 2x\n            \"\n        />\n        <img\n          src=\"https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-1x.webp\"\n          width=\"54\"\n          height=\"78\"\n          alt=\"little cute cactus\"\n        />\n      </picture>\n      <p>\n        If you need help with{' '}\n        <span style={{ color: 'var(--accent)' }}>TaskPro</span>, check out our\n        support resources or reach out to our customer support team.\n      </p>\n      <NeedHelpBtn type=\"button\" onClick={openModal}>\n        <Icon\n          name=\"help\"\n          width=\"20\"\n          height=\"20\"\n          stroke=\"var(--primaryTextColor)\"\n        />\n        <span>Need help?</span>\n      </NeedHelpBtn>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Need help modal\"\n      >\n        <SendEmail onClose={closeModal} />\n      </Modal>\n    </NeedHelpBlock>\n  );\n};\n","import styled from 'styled-components';\n\nexport const BoardCreationBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-top: rgba(255, 255, 255, 0.1) solid 1px;\n  border-bottom: rgba(255, 255, 255, 0.1) solid 1px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  margin-bottom: 40px;\n`;\n\nexport const BtnCreate = styled.button`\n  width: 40px;\n  height: 36px;\n  background-color: var(--btnPlus);\n  border: none;\n  border-radius: 6px;\n  stroke: var(--primaryBgColor);\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnPlusHover);\n  }\n`;","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 335px;\n  height: 433px;\n\n  border-radius: 8px;\n\n  background-color: var(--modalBgColor);\n\n  stroke: var(--primaryTextColor);\n\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const ModalTitle = styled.h3`\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Medium';\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--textColorcalendar);\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--textColorcalendar);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const FormWrap = styled(Form)`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const Input = styled(Field)`\n  width: 287px;\n  height: 49px;\n  padding: 14px 0 14px 18px;\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Regular';\n  font-size: 14px;\n\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n\n  color: var(--textColorcalendar);\n  background-color: var(--modalBgColor);\n  opacity: 0.4;\n  transition: opacity var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 14px;\n\n  color: var(--textColorcalendar);\n`;\n\nexport const IconsListWrap = styled.ul`\n  display: flex;\n  gap: 8px;\n\n  margin-bottom: 24px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 0;\n\n  border: none;\n  background-color: inherit;\n\n  width: 18px;\n  height: 18px;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  cursor: pointer;\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:focus,\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const InvisibleInput = styled(Field)`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n\nexport const BackgroundsPallet = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  width: 252px;\n  height: 60px;\n  margin-bottom: 40px;\n`;\n\nexport const LabelPic = styled.label``;\n\nexport const Div = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  transition: transform var(--transition);\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  min-width: 287px;\n  height: 49px;\n\n  padding: 10px 0 11px 0;\n  border: none;\n  /* border: 1px solid black; */\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--btnText);\n  background-color: var(--accent);\n  transition: background-color var(--transition);\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnBgColorHover);\n  }\n`;\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n\n  border-radius: 8px;\n\n  background-color: var(--btnText);\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--plusInBtn);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport { addBoard } from '../../redux/boards/boardsOperations';\nimport { Icon } from 'components/Icon';\nimport * as Yup from 'yup';\nimport {\n  FormWrap,\n  Input,\n  Text,\n  AddBtn,\n  IconWrap,\n  ModalWrap,\n  CloseBtn,\n  ModalTitle,\n  IconsListWrap,\n  InvisibleInput,\n  BackgroundsPallet,\n  Label,\n  LabelPic,\n  Div,\n} from './BoardCreatingModal.styled.js';\n\n\nconst iconsArr = [\n  'four-circles',\n  'star',\n  'loading',\n  'puzzle',\n  'container',\n  'lightning',\n  'colors',\n  'hexagon',\n];\n\nconst backgroundsArr = [\n  'noBack',\n  'miklos',\n  'eberhard',\n  'diego',\n  'vino',\n  'vickholius',\n  'romello',\n  'kace',\n  'milad',\n  'gaetan',\n  'florian',\n  'tony',\n  'nicolas',\n  'gabriella',\n  'igor',\n  'zhou',\n];\n\nconst schema = Yup.object({\n  title: Yup.string().required(),\n  icon: Yup.string().oneOf(iconsArr).required(),\n  background: Yup.string().oneOf(backgroundsArr).required(),\n});\n\nexport const BoardCreatingModal = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const initialValues = {\n    title: '',\n    icon: 'four-circles',\n    background: 'noBack',\n  };\n\n  const onSubmit = async values => {\n    const { payload: { _id } } = await dispatch(addBoard(values));\n    \n    localStorage.setItem('lastBoard', _id);\n    navigate(`/${_id}`);\n    onClose();\n  };\n\n  return (\n    <ModalWrap>\n      <ModalTitle>New board</ModalTitle>\n      <CloseBtn type=\"button\" onClick={onClose}>\n        <Icon name=\"close\" />\n      </CloseBtn>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={onSubmit}\n      >\n        <FormWrap>\n          <Input type=\"text\" placeholder=\"Title\" name=\"title\" />\n          <Text>Icons</Text>\n\n          <IconsListWrap>\n            {iconsArr.map(el => (\n              <li key={el}>\n                <Label>\n                  <Icon name={el} />\n                  <InvisibleInput type=\"radio\" name=\"icon\" value={el} />\n                </Label>\n              </li>\n            ))}\n          </IconsListWrap>\n\n          <Text>Backgrounds</Text>\n          <BackgroundsPallet>\n            {backgroundsArr.map(el => {\n              const srcSetPath = ` https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp 1x,\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_56x56.webp 2x`;\n              const srcDefault = `https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp`;\n              return (\n                <li key={el}>\n                  <LabelPic>\n                    <Div>\n                      <picture>\n                        <source srcSet={srcSetPath} />\n                        <img src={srcDefault} alt=\"background example\" />\n                      </picture>\n                    </Div>\n                    <InvisibleInput type=\"radio\" name=\"background\" value={el} />\n                  </LabelPic>\n                </li>\n              );\n            })}\n          </BackgroundsPallet>\n\n          <AddBtn type=\"submit\">\n            <IconWrap>\n              <Icon name=\"plus\" />\n            </IconWrap>{' '}\n            Create\n          </AddBtn>\n        </FormWrap>\n      </Formik>\n    </ModalWrap>\n  );\n};\n","import { useState } from \"react\";\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { BoardCreationBlock, BtnCreate } from \"./BoardCreation.styled\";\nimport { BoardCreatingModal } from \"components/BoardCreatingModal\";\n\nconst customStyles = {\n  content: {\n    width: 'fit-content',\n    height: 'fit-content',\n    padding: 0,\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const BoardCreation = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <BoardCreationBlock>\n      <p>\n        Create a<br />\n        new board\n      </p>\n      <BtnCreate type=\"button\" onClick={openModal}>\n        <Icon name=\"plus\" width=\"20\" height=\"20\" />\n      </BtnCreate>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Creation board modal\"\n      >\n        <BoardCreatingModal\n          onClose={closeModal}\n          title=\"New board\"\n          btnText=\"Create\"\n        />\n      </Modal>\n    </BoardCreationBlock>\n  );\n};","import styled from 'styled-components';\n\nexport const ControlIconsContainer = styled.div`\n  margin-left: auto;\n  display: none;\n  gap: 8px;\n\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\n\nexport const BoardItemContainer = styled.li`\n  height: 61px;\n  margin: 0 -14px 0 -14px;\n  padding: 0 14px 0 14px;\n  display: flex;\n  align-items: center;\n  stroke: var(--primaryTextColor);\n  opacity: 0.5;\n  transition: var(--transition);\n\n  p {\n    margin-left: 4px;\n    font-family: 'Poppins-Medium';\n    font-size: 14px;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--secondaryBgColor);\n    opacity: 1;\n\n    > ${ControlIconsContainer} {\n      display: flex;\n      opacity: 0.5;\n    }\n  }\n`;","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 335px;\n  height: 433px;\n\n  border-radius: 8px;\n\n  background-color: var(--modalBgColor);\n\n  stroke: var(--primaryTextColor);\n\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const ModalTitle = styled.h3`\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Medium';\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--textColorcalendar);\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--textColorcalendar);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const FormWrap = styled(Form)`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const Input = styled(Field)`\n  width: 287px;\n  height: 49px;\n  padding: 14px 0 14px 18px;\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Regular';\n  font-size: 14px;\n\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n\n  color: var(--textColorcalendar);\n  background-color: var(--modalBgColor);\n  opacity: 0.4;\n\n  transition: opacity var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 14px;\n\n  color: var(--textColorcalendar);\n`;\n\nexport const IconsListWrap = styled.ul`\n  display: flex;\n  gap: 8px;\n\n  margin-bottom: 24px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 0;\n\n  border: none;\n  background-color: inherit;\n\n  width: 18px;\n  height: 18px;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  cursor: pointer;\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:focus,\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const InvisibleInput = styled(Field)`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n\nexport const BackgroundsPallet = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  width: 252px;\n  height: 60px;\n  margin-bottom: 40px;\n`;\n\nexport const LabelPic = styled.label``;\n\nexport const Div = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  transition: transform var(--transition);\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  min-width: 287px;\n  height: 49px;\n\n  padding: 10px 0 11px 0;\n  border: none;\n\n  /* border: 1px solid black; */\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--btnText);\n  background-color: var(--accent);\n  transition: background-color var(--transition);\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnBgColorHover);\n  }\n`;\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n\n  border-radius: 8px;\n\n  background-color: var(--btnText);\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--plusInBtn);\n  }\n`;\n","import { Icon } from 'components/Icon';\nimport * as Yup from 'yup';\nimport {\n  FormWrap,\n  Input,\n  Text,\n  AddBtn,\n  IconWrap,\n  ModalWrap,\n  CloseBtn,\n  ModalTitle,\n  IconsListWrap,\n  InvisibleInput,\n  BackgroundsPallet,\n  Label,\n  LabelPic,\n  Div,\n} from './BoardEditModal.styled';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { editBoard } from '../../redux/boards/boardsOperations';\n\nconst iconsArr = [\n  'four-circles',\n  'star',\n  'loading',\n  'puzzle',\n  'container',\n  'lightning',\n  'colors',\n  'hexagon',\n];\n\nconst backgroundsArr = [\n  'noBack',\n  'miklos',\n  'eberhard',\n  'diego',\n  'vino',\n  'vickholius',\n  'romello',\n  'kace',\n  'milad',\n  'gaetan',\n  'florian',\n  'tony',\n  'nicolas',\n  'gabriella',\n  'igor',\n  'zhou',\n];\n\nconst schema = Yup.object({\n  title: Yup.string().required(),\n  icon: Yup.string().oneOf(iconsArr).required(),\n  background: Yup.string().oneOf(backgroundsArr).required(),\n});\n\nexport const BoardEditModal = ({ onClose, board }) => {\n  const dispatch = useDispatch();\n\n  const { _id: boardId, title, icon, background } = board;\n\n  const initialValues = {\n    title,\n    icon,\n    background,\n  };\n\n  const onSubmit = board => {\n    dispatch(editBoard({ boardId, board }));\n    onClose();\n  };\n  return (\n    <ModalWrap>\n      <ModalTitle>Edit board</ModalTitle>\n      <CloseBtn type=\"button\" onClick={onClose}>\n        <Icon name=\"close\" />\n      </CloseBtn>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={onSubmit}\n      >\n        <FormWrap>\n          <Input type=\"text\" placeholder=\"Title\" name=\"title\" />\n          <Text>Icons</Text>\n\n          <IconsListWrap>\n            {iconsArr.map(el => (\n              <li key={el}>\n                <Label>\n                  <Icon name={el} />\n                  <InvisibleInput type=\"radio\" name=\"icon\" value={el} />\n                </Label>\n              </li>\n            ))}\n          </IconsListWrap>\n\n          <Text>Backgrounds</Text>\n          <BackgroundsPallet>\n            {backgroundsArr.map(el => {\n              const srcSetPath = ` https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp 1x,\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_56x56.webp 2x`;\n              const srcDefault = `https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp`;\n              return (\n                <li key={el}>\n                  <LabelPic>\n                    <Div>\n                      <picture>\n                        <source srcSet={srcSetPath} />\n                        <img src={srcDefault} alt=\"background example\" />\n                      </picture>\n                    </Div>\n                    <InvisibleInput type=\"radio\" name=\"background\" value={el} />\n                  </LabelPic>\n                </li>\n              );\n            })}\n          </BackgroundsPallet>\n\n          <AddBtn type=\"submit\">\n            <IconWrap>\n              <Icon name=\"plus\" />\n            </IconWrap>{' '}\n            Edit\n          </AddBtn>\n        </FormWrap>\n      </Formik>\n    </ModalWrap>\n  );\n};\n","import { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { BoardItemContainer, ControlIconsContainer } from './BoardItem.styled';\nimport { BoardEditModal } from 'components/BoardEditModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteBoard } from '../../redux/boards/boardsOperations';\nimport { selectBoards, selectCurrentBoard } from '../../redux/boards/boardsSelectors';\nimport { useNavigate } from 'react-router-dom';\n\n\nconst customStyles = {\n  content: {\n    width: 'fit-content',\n    height: 'fit-content',\n    padding: 0,\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const BoardItem = ({ board }) => {\n  const dispatch = useDispatch();\n  const currentBoard = useSelector(selectCurrentBoard);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const navigate = useNavigate();\n  const boards = useSelector(selectBoards);\n  \n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleSelectBoard = (event, boardId) => {\n    if (event.target.tagName === 'BUTTON' || event.target.closest('button')) {\n      return;\n    }\n\n    navigate(`/${boardId}`);\n    localStorage.setItem('lastBoard', boardId);\n  };\n\n  const handleDelete = boardId => {\n    dispatch(deleteBoard(boardId));\n    const filteredBoards = boards.filter(board => board._id !== boardId);\n    localStorage.removeItem('lastBoard');\n\n    if (filteredBoards.length === 0) {\n      navigate(`/`);\n      return;\n    }\n\n    const lastBoardObj = filteredBoards[filteredBoards.length - 1];\n\n    navigate(`/${lastBoardObj._id}`);\n  };\n\n\n  return (\n    <BoardItemContainer\n      onClick={event => handleSelectBoard(event, board._id)}\n      selected={currentBoard && currentBoard._id === board._id}\n    >\n      <Icon name={board.icon} width=\"18\" height=\"18\" style={{ opacity: 0.5 }} />\n      <p>{board.title}</p>\n      <ControlIconsContainer>\n        <button type=\"button\" onClick={openModal}>\n          <Icon name=\"pencil\" width=\"16\" height=\"16\" />\n        </button>\n        <button type=\"button\" onClick={() => handleDelete(board._id)}>\n          <Icon name=\"trash\" width=\"16\" height=\"16\" />\n        </button>\n      </ControlIconsContainer>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Edition board modal\"\n      >\n        <BoardEditModal onClose={closeModal} board={board} />\n      </Modal>\n    </BoardItemContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Logo = styled.div`\n  font-family: 'Poppins-SemiBold';\n  letter-spacing: -0.04em;\n  display: flex;\n  column-gap: 8px;\n  align-items: center;\n  margin-bottom: 70px;\n`;\n\nexport const BoardContainer = styled.div`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n\n  h3 {\n    margin-bottom: 8px;\n    font-size: 12px;\n    font-family: 'Poppins-Regular';\n    opacity: 50%;\n  }\n`;\n\nexport const BoardList = styled.ul`\n  margin-bottom: 40px;\n`;\n\nexport const LogOut = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  background: none;\n  display: flex;\n  align-items: center;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  stroke: var(--accent);\n  transition: var(--transition);\n\n  p {\n    margin-left: 14px;\n    color: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    stroke: var(--hover);\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectBoards } from '../../redux/boards/boardsSelectors.js';\nimport { fetchBoards } from '../../redux/boards/boardsOperations.js';\nimport { logOut } from '../../redux/auth/authOperation.js';\nimport { NeedHelp } from 'components/NeedHelp';\nimport { BoardCreation } from 'components/SidebarBoardCreation';\n\nimport { BoardItem } from 'components/BoardItem';\nimport { Icon } from 'components/Icon';\nimport { Logo, BoardContainer, BoardList, LogOut } from './SideBar.styled';\n\nexport const Sidebar = () => {\n  const dispatch = useDispatch();\n  const boards = useSelector(selectBoards);\n\n  useEffect(() => {\n    dispatch(fetchBoards());\n  }, [dispatch]);\n\n  const handleLogOut = () => {\n    dispatch(logOut());\n    localStorage.removeItem('lastBoard');\n  };\n\n  return (\n    <>\n      <div>\n        <Logo>\n          <Icon name=\"logo\" width=\"32\" height=\"32\" />\n          <h2>TaskPro</h2>\n        </Logo>\n        <BoardContainer>\n          <h3>My boards</h3>\n          <BoardCreation />\n          <BoardList>\n            {boards.map(board => (\n              <BoardItem key={board._id} board={board} />\n            ))}\n          </BoardList>\n        </BoardContainer>\n      </div>\n      <div>\n        <NeedHelp />\n        <LogOut type=\"button\" onClick={handleLogOut}>\n          <Icon name=\"login\" width=\"32\" height=\"32\" />\n          <p>Log out</p>\n        </LogOut>\n      </div>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const DrpdwnBtn = styled.button`\n  position: relative;\n  display: flex;\n  gap: 4px;\n  background: none;\n  border: none;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  opacity: var(--secondaryOpacity);\n`;\n\nexport const ThemesList = styled.ul`\n  position: absolute;\n  top: 65%;\n  right: 52%;\n  padding: 18px 44px 18px 18px;\n  border: 1px solid var(--borderInThemeModal);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(17, 17, 17, 0.1);\n  background-color: var(--modalBgColor);\n  visibility: ${({ visibility }) => visibility};\n  opacity: ${({ opacity }) => opacity};\n  transform: ${({ transform }) => transform};\n  transition: 0.3s;\n`;\n\nexport const ThemeItem = styled.li`\n  font-family: 'Poppins-Regular';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  opacity: var(--opacityInThemeModal);\n  cursor: pointer;\n  &:hover,\n  :focus {\n    color: var(--accent);\n  }\n  &:not(:last-child) {\n    margin-bottom: 4px;\n  }\n`;\n","import { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeTheme } from '../../redux/auth/authOperation';\n\nimport { useClickOutside } from 'hooks/useClickOutside';\nimport { Icon } from 'components/Icon';\nimport { DrpdwnBtn, ThemesList, ThemeItem } from './ThemeSwitcher.styled';\n\nexport const ThemeSwitcher = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const menuRef = useRef(null);\n  const dispatch = useDispatch();\n\n  const visibility = isOpen ? 'visible' : 'hidden';\n  const opacity = isOpen ? '1' : '0';\n  const transform = isOpen ? 'translateY(10px)' : 'translateY(0)';\n\n  useClickOutside(menuRef, () => {\n    if (isOpen) {\n      setTimeout(() => setIsOpen(false), 50);\n    }\n  });\n\n  return (\n    <div ref={menuRef}>\n      <DrpdwnBtn type=\"button\" onClick={() => setIsOpen(!isOpen)}>\n        Theme\n        <Icon\n          name=\"chevron-down\"\n          width=\"16\"\n          heigth=\"16\"\n          stroke=\"var(--secondaryTextColor)\"\n        />\n      </DrpdwnBtn>\n      <ThemesList\n        visibility={visibility}\n        opacity={opacity}\n        transform={transform}\n      >\n        <ThemeItem onClick={() => dispatch(changeTheme({ theme: 'light' }))}>\n          Light\n        </ThemeItem>\n        <ThemeItem onClick={() => dispatch(changeTheme({ theme: 'dark' }))}>\n          Dark\n        </ThemeItem>\n        <ThemeItem onClick={() => dispatch(changeTheme({ theme: 'violet' }))}>\n          Violet\n        </ThemeItem>\n      </ThemesList>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\n\nexport const useClickOutside = (ref, callback) => {\n  const handleClick = evnt => {\n    if (ref.current && !ref.current.contains(evnt.target)) {\n      callback();\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClick);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    };\n  });\n};\n","import styled from 'styled-components';\n\nexport const HeaderStyled = styled.header`\n  position: relative;\n\n  max-width: 375px;\n  display: flex;\n  justify-content: space-between;\n\n  background-color: var(--headerBgColor);\n\n  padding: 14px 20px;\n\n  @media (min-width: 768px) {\n    max-width: 768px;\n    padding: 18px 32px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 1180px;\n    justify-content: flex-end;\n    padding: 18px 24px;\n  }\n`;\n\nexport const MenuBtn = styled.button`\n  border: none;\n  background-color: inherit;\n\n  svg {\n    width: 24px;\n    height: 24px;\n\n    @media (min-width: 768px) {\n      width: 32px;\n      height: 32px;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const HeaderWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: baseline;\n  gap: 14px;\n`;\n\nexport const customStylesForModal = {\n  content: {\n    inset: 0,\n    width: 'fit-content',\n    height: 'fit-content',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n","import { UserInfo } from 'components/UserInfo';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { Sidebar } from 'components/SideBar';\nimport { ThemeSwitcher } from 'components/ThemeSwitcher';\nimport { Icon } from 'components/Icon';\nimport {\n  HeaderStyled,\n  HeaderWrapper,\n  MenuBtn,\n  customStylesForModal,\n} from './Header.styled';\n\nexport const Header = () => {\n  const [isMenuOpen, setIsOpenMenu] = useState(false);\n\n  const openMenu = () => {\n    setIsOpenMenu(true);\n  };\n\n  const closeMenu = () => {\n    setIsOpenMenu(false);\n  };\n\n  return (\n    <HeaderStyled>\n      <MenuBtn type=\"button\" onClick={openMenu}>\n        <Icon name=\"menu\" stroke=\"var(--secondaryTextColor)\" />\n      </MenuBtn>\n\n      <HeaderWrapper>\n        <ThemeSwitcher />\n        <UserInfo />\n      </HeaderWrapper>\n      <Modal\n        isOpen={isMenuOpen}\n        onRequestClose={closeMenu}\n        style={customStylesForModal}\n        contentLabel=\"Sidebar\"\n      >\n        <Sidebar />\n      </Modal>\n    </HeaderStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 300px;\n  height: 234px;\n\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.05);\n  background: var(--modalBgColor);\n`;\n\nexport const FiltersTytle = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  margin-bottom: 28px;\n  color: var(--primaryTextColor);\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const LabelName = styled.p`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  margin-bottom: 14px;\n  display: flex;\njustify-content: space-between;\nalign-items: center;\n  /* margin-left: 24px; */\n  color: var(--primaryTextColor);\n`;","import styled from 'styled-components';\n\nexport const FiltersWrap = styled.div`\n  position: relative;\n  display: flex;\n  gap: 119px;\n  margin-bottom: 14px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: -14px;\n    left: 0;\n    width: 252px;\n    height: 1px;\n    background-color: var(--cardsLine);\n  }\n`;\n\nexport const FilterLabel = styled.p`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n`;\n\nexport const ShowAllBtn = styled.button`\n  border: none;\n  background-color: inherit;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  text-decoration: underline;\n  color: var(--secondaryTextColor);\n  opacity: 0.5;\n  cursor: pointer;\n`;\n\nexport const StyledRadioGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const RadioLabel = styled.label`\n  display: flex;\n  border-radius: 50%;\n  width: 14px;\n  height: 14px;\n  background-color: var(--priority-${({ $priority }) => $priority});\n  transition: var(--transition);\n  cursor: pointer;\n  position: relative;\n\n  > input {\n    display: none;\n  }\n\n  &.checked {\n    &::after {\n      content: '';\n      position: absolute;\n      width: 8px;\n      height: 8px;\n      top: 21%;\n      left: 22%;\n      border-radius: 50%;\n      border: 2px solid var(--primaryBgColor);\n    }\n  }\n`;\n\nexport const FiltersSpan = styled.span`\n  margin-left: 22px;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  opacity: 0.5;\n`;\n","import { nanoid } from '@reduxjs/toolkit';\nimport { useSearchParams } from 'react-router-dom';\nimport { capitalizer } from 'helpers/capitalizer';\nimport {\n  FiltersWrap,\n  FilterLabel,\n  RadioLabel,\n  StyledRadioGroup,\n  ShowAllBtn,\n  FiltersSpan,\n} from './RadioFiltres.styled';\n\nexport const RadioFilters = () => {\n  const listParams = ['without','low', 'medium', 'high', ];\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currValue = searchParams.get('priority');\n\n  const handleFilter = ({ target: { value } }) => {\n    setSearchParams({ priority: value });\n  };\n\n  const handleShowAll = () => {\n    setSearchParams({});\n  }\n\n  return (\n    <>\n      <FiltersWrap>\n        <FilterLabel>Label color</FilterLabel>\n        <ShowAllBtn type=\"button\" onClick={handleShowAll}>\n          Show all\n        </ShowAllBtn>\n      </FiltersWrap>\n      <StyledRadioGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n        {listParams.map(item => {\n          const text = capitalizer(item);\n          return <RadioLabel\n            key={nanoid()}\n            $priority={item}\n            className={currValue === item ? 'checked' : ''}\n          >\n            <input\n              type=\"radio\"\n              name=\"priority\"\n              value={item}\n              checked={currValue === item}\n              onChange={handleFilter}\n            />\n            <FiltersSpan>{text}</FiltersSpan>\n          </RadioLabel>;\n        })}\n      </StyledRadioGroup>\n    </>\n  );\n};\n","export const capitalizer = str => {\n  const text = str === 'without' ? `${str} priority` : str;\n  return text.charAt(0).toUpperCase() + text.slice(1);  \n};\n","import {\n  FiltersTytle,\n  ModalWrap,\n  CloseBtn,\n} from './FilterModal.styled';\n\nimport { Icon } from 'components/Icon';\nimport { RadioFilters } from 'components/RadioFiltres';\n\nexport const FilterModal = ({ closeModal }) => {\n  return (\n    <ModalWrap>\n      <FiltersTytle>Filters</FiltersTytle>\n      <CloseBtn type=\"button\" onClick={closeModal}>\n        <Icon name=\"close\" />\n      </CloseBtn>\n      <RadioFilters/>\n    </ModalWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 14px 0px;\n  margin-bottom: 26px;\n\n  @media (min-width: 768px) {\n    padding: 26px 0px;\n  }\n\n  @media (min-width: 1440px) {\n    padding: 10px 0px;\n  }\n`;\n\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0 4px 16px 0 rgba(22, 22, 22, 0.05)',\n    padding: 0,\n    border: 'none',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const BoardTitle = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--primaryTextColor);\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const FilterBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  font-family: 'Poppins-Medium';\n\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  border: none;\n\n  color: var(--secondaryTextColor);\n  background-color: inherit;\n  filter: drop-shadow(0 0 3px var(--primaryBgColor));\n\n  stroke: var(--secondaryTextColor);\n  transition: opacity var(--transition);\n  > svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: var(--accent);\n    stroke: var(--accent);\n  }\n`;\n","import { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { FilterModal } from 'components/FilterModal';\nimport {\n  FilterBtn,\n  BoardTitle,\n  Wrap,\n  customStyles,\n} from './HeaderDashboard.styled';\n\nexport const HeaderDashboard = ({ boardTitle }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <Wrap>\n      {boardTitle && <BoardTitle>{boardTitle}</BoardTitle>}\n      <FilterBtn type=\"button\" onClick={openModal}>\n        <Icon name=\"filter\" />\n        Filters{' '}\n      </FilterBtn>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Filters Modal\"\n      >\n        <FilterModal closeModal={closeModal} />\n      </Modal>\n    </Wrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const CardBody = styled.li`\n  border-radius: 8px;\n  width: 335px; // змінити на /* width: 100%; */ коли стане у колонкуи\n  height: 154px;\n  background-color: var(--extraBgColor);\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  position: relative;\n  padding: 14px 20px 14px 24px;\n`;\nexport const CardColor = styled.div`\n  position: absolute;\n  border-radius: 4px 0 0 4px;\n  width: 4px;\n  height: 154px;\n  top: 0px;\n  left: 0px;\n  background-color: var(--priority-${({ $priority }) => $priority});\n`;\nexport const CardTitle = styled.h4`\n  text-align: left;\n  font-family: 'Poppins-SemiBold';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--textColorcalendar);\n  margin-bottom: 8px;\n`;\nexport const CardDescription = styled.p`\n  text-align: left;\n  font-size: 12px;\n  line-height: 1.33333;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  width: 290px;\n  height: 38px;\n  overflow: hidden; /* скрывает текст, который не помещается в контейнер */\n  text-overflow: ellipsis; /* отображает многоточие для обрезанного текста */\n  margin-bottom: 14px;\n`;\n\nexport const CardSolid = styled.div`\n  border: 1px solid var(--cards-line);\n  margin-bottom: 14px;\n`;\n\nexport const CardDetals = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const CardInformation = styled.div`\n  display: flex;\n`;\n\nexport const Priority = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 14px;\n`;\n\nexport const PriorityDetals = styled.div`\n  display: flex;\n`;\n\nexport const PriorityTitle = styled.p`\n  text-align: left;\n  font-size: 8px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\nexport const PriorityColor = styled.div`\n  border-radius: 100%;\n  width: 12px;\n  height: 12px;\n  margin-right: 4px;\n  background-color: var(--priority-${({ $priority }) => $priority});\n`;\n\nexport const PriorityTipe = styled.p`\n  font-size: 10px;\n  letter-spacing: -0.02em;\n  color: var(--textColorcalendar);\n  &:first-letter {\n    text-transform: uppercase;\n}\n`;\n\nexport const Deadline = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 14px;\n`;\n\nexport const DeadlineTitle = styled.p`\n  text-align: left;\n  font-size: 8px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\n\nexport const DeadlineDate = styled.p`\n  text-align: left;\n  font-size: 10px;\n  letter-spacing: -0.02em;\n  color: var(--textColorcalendar);\n`;\nexport const CardButtons = styled.div`\n  display: flex;\n  gap: 8px;\n  stroke: var(--secondaryTextColor); //не змінюється в темах\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\nexport const Bell = styled.button`\n  stroke: var(--accent); //не змінюється в темах\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  transition: var(--transition);\n  stroke: var(--secondaryTextColor);\n  &:is(:hover, :focus) {\n    stroke: var(--accent);\n  }\n`;\n","import DatePicker from 'react-datepicker';\nimport { enGB } from 'date-fns/locale';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'components/Calendar/Calendar.css';\n\nexport function Calendar({ selectedDate, onDateChange }) {\n  const handleDateChange = date => {\n    onDateChange(date);\n  };\n\n  return (\n    <DatePicker\n      selected={selectedDate}\n      onChange={handleDateChange}\n      dateFormat=\"MMMM d\"\n      minDate={new Date()}\n      locale={enGB}\n      weekStartsOn={1}\n    />\n  );\n}\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Container = styled.div`\n  border-radius: 8px;\n  height: 522px;\n  position: relative;\n  padding: 24px;\n  width: 100%;\n  background: var(--modalBgColor);\n\n  @media only screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const TitleModal = styled.h2`\n  margin-bottom: 24px;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  line-height: 1.5;\n  color: var(--textColorcalendar);\n`;\n\nexport const CloseModal = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  cursor: pointer;\n\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  color: red;\n  font-size: 12px;\n`;\n\nexport const TitleCard = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 14px;\n\n  background-color: var(--modalBgColor);\n  color: var(--textColorcalendar);\n\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n\nexport const StyledDescription = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  padding-top: 14px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 154px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 24px;\n\n  resize: none;\n\n  color: var(--textColorcalendar);\n  background: var(--modalBgColor);\n\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const LabelColorStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--textCalendar);\n  margin-bottom: 4px;\n`;\n\nexport const StyleRadioButton = styled.div`\n  height: 18px;\n  display: flex;\n  gap: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const DeadlineStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\n\nexport const AddButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  background: var(--accent);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnBgColorHover);\n  }\n  cursor: pointer;\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: var(--btnText);\n  margin-right: 8px;\n  stroke: var(--plusInBtn);\n`;\n\nexport const AddCardButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 335px;\n  height: 56px;\n  background: var(--btnPlus);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Span = styled.span`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--accent);\n`;\n","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const StyledRadioGroup = styled.div`\n  height: 18px;\n  display: flex;\n  gap: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const RadioButton = styled(Field)`\n  display: none;\n`;\n\nexport const RadioLabel = styled.label`\n  border-radius: 50%;\n  width: 14px;\n  height: 14px;\n  background-color: var(--priority-${({ $priority }) => $priority});\n  transition: var(--transition);\n  cursor: pointer;\n  box-sizing: border-box;\n  position: relative;\n\n  &.checked {\n    &::after {\n      content: '';\n      position: absolute;\n      width: 12px;\n      height: 12px;\n      top: 1px;\n      left: 1px;\n      border-radius: 50%;\n      border: 2px solid var(--primaryBgColor);\n    }\n  }\n`;\n","import { nanoid } from '@reduxjs/toolkit';\nimport {\n  RadioButton,\n  RadioLabel,\n  StyledRadioGroup,\n} from './RadioInputs.styled';\nimport { useState } from 'react';\n\nexport const RadioInputs = ({ defaultChecked, onPriorityChange }) => {\n  const list = ['low', 'medium', 'high', 'without'];\n  const [currValue, setCurrValue] = useState(defaultChecked);\n\n  const handleInput = ({ target: { value } }) => {\n    onPriorityChange(value);\n    setCurrValue(value);\n  };\n\n  return (\n    <StyledRadioGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n      {list.map(item => (\n        <RadioLabel\n          key={nanoid()}\n          $priority={item}\n          className={currValue === item ? 'checked' : ''}\n        >\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value={item}\n            checked={currValue === item}\n            onChange={handleInput}\n          />\n        </RadioLabel>\n      ))}\n    </StyledRadioGroup>\n  );\n};\n","import { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Calendar } from 'components/Calendar';\nimport { Icon } from 'components/Icon';\n\nimport {\n  Container,\n  TitleModal,\n  StyledDescription,\n  CloseModal,\n  TitleCard,\n  LabelColorStyle,\n  DeadlineStyle,\n  AddButton,\n  StylePlus,\n  StyledForm,\n  ErrMsg,\n  Label,\n  Span,\n} from './EditCardModal.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { editCard } from '../../redux/cards/cardsOperations.js';\nimport { RadioInputs } from 'components/RadioInputs/RadioInputs.jsx';\n\nconst priority = ['without', 'low', 'medium', 'high'];\n\nconst formCardSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(3, `It's can be up to 3 characters long`)\n    .max(100, 'Too Long!')\n    .required(`This field is required.`),\n  text: Yup.string()\n    .min(10, `It's can be up to 10 characters long`)\n    .max(500, 'Too Long!')\n    .required(`This field is required.`),\n  priority: Yup.string().oneOf(priority),\n  deadline: Yup.date(),\n});\n\nexport default function EditCardModal({ card, onClose }) {\n  const { _id: cardId, title, text, deadline, priority } = card;\n  const [selectedDate, setSelectedDate] = useState(deadline);\n  const dispatch = useDispatch();\n\n  const onSubmit = values => {\n    dispatch(editCard({ values, cardId }));\n    onClose();\n  };\n\n  return (\n    <Container>\n      <TitleModal>Edit card</TitleModal>\n      <CloseModal>\n        <button type=\"button\" onClick={onClose}>\n          <Icon\n            name=\"close\"\n            width=\"18\"\n            height=\"18\"\n            stroke=\"var(--primaryTextColor)\"\n          />\n        </button>\n      </CloseModal>\n      <Formik\n        initialValues={{\n          title,\n          text,\n          priority,\n          deadline: selectedDate,\n        }}\n        validationSchema={formCardSchema}\n        onSubmit={onSubmit}\n      >\n        {({ handleSubmit, setFieldValue }) => (\n          <StyledForm onSubmit={handleSubmit}>\n            <TitleCard type=\"text\" name=\"title\" placeholder=\"Title\" />\n            <ErrMsg component=\"p\" name=\"title\" />\n            <Label>\n              <StyledDescription\n                rows={4}\n                component=\"textarea\"\n                name=\"text\"\n                placeholder=\"Description\"\n              />\n              <ErrMsg component=\"p\" name=\"text\" />\n            </Label>\n            <LabelColorStyle id=\"colorCard-radio-group\">\n              Label color\n            </LabelColorStyle>\n            <RadioInputs\n              defaultChecked={priority}\n              onPriorityChange={priority => {\n                setFieldValue('priority', priority);\n              }}\n            />\n            <DeadlineStyle>Deadline</DeadlineStyle>\n            <div>\n              <Span> Today,</Span>\n              <Calendar\n                selectedDate={selectedDate}\n                onDateChange={date => {\n                  setSelectedDate(date);\n                  setFieldValue('deadline', date);\n                }}\n              />\n            </div>\n            <AddButton type=\"submit\">\n              <StylePlus>\n                <Icon name=\"plus\" width=\"14\" height=\"14\" />\n              </StylePlus>\n              <p>Edit</p>\n            </AddButton>\n          </StyledForm>\n        )}\n      </Formik>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const MoveList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border-radius: 8px;\n  background-color: var(--secondaryBgColor);\n  padding: 10px;\n`;\n","import styled from 'styled-components';\n\nexport const MoveCardItemStyled = styled.li`\n  &.current {\n    color: var(--accent);\n\n    &button {\n      pointer-events: none;\n    }\n  }\n`;\n\nexport const MoveCardItemButtonStyled = styled.button`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  cursor: pointer;\n`;","import { useDispatch } from 'react-redux';\nimport {\n  MoveCardItemButtonStyled,\n  MoveCardItemStyled,\n} from './MoveCardItem.styled';\nimport { chengeColumnsCard } from '../../redux/cards/cardsOperations';\n\nexport const MoveCardItem = ({ column, cardId, currentId }) => {\n  const dispatch = useDispatch();\n  const { _id, title } = column;\n  const current = _id === currentId ? 'current' : '';\n\n  const handleMoveCard = () => {\n    dispatch(chengeColumnsCard({ cardId, toColumnId: _id }));\n  };\n  return (\n    <MoveCardItemStyled className={current}>\n      <MoveCardItemButtonStyled onClick={handleMoveCard}>\n        {title}\n      </MoveCardItemButtonStyled>\n    </MoveCardItemStyled>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { MoveList } from './MoveCardDropdown.styled';\nimport { MoveCardItem } from 'components/MoveCardItem/MoveCardItem';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport const MoveCardDropdown = ({ currColumnId, cardId }) => {\n  const { columns } = useSelector(state => state.columns);\n  \n\n  return (\n    <MoveList>\n      {columns.map(item => {\n        return (\n          <MoveCardItem\n            currentId={currColumnId}\n            key={nanoid()}\n            column={item}\n            cardId={cardId}\n          />\n        );\n      })}\n    </MoveList>\n  );\n};\n","import { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\n\nimport {\n  CardBody,\n  CardDetals,\n  Priority,\n  PriorityDetals,\n  CardColor,\n  CardTitle,\n  CardDescription,\n  CardSolid,\n  PriorityTitle,\n  PriorityTipe,\n  PriorityColor,\n  Deadline,\n  DeadlineTitle,\n  DeadlineDate,\n  CardButtons,\n  CardInformation,\n  Bell,\n  Button,\n} from './Card.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteCard } from '../../redux/cards/cardsOperations';\nimport EditCardModal from 'components/EditCardModal/EditCardModal';\nimport { MoveCardDropdown } from 'components/MoveCardDropdown/MoveCardDropdown';\n\nexport default function Card({ card }) {\n  const [modalCardIsOpen, setmodalCardIsOpen] = useState(false);\n  const [isOpenMoveCardModal, setIsOpenMoveCardModal] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    _id: cardId,\n    title,\n    text,\n    deadline,\n    priority,\n    column: { _id: columnId },\n  } = card;\n  const dateDeadline = new Date(deadline);\n  const formatedDate = `${dateDeadline.getUTCDate()}/${(\n    dateDeadline.getUTCMonth() + 1\n  )\n    .toString()\n    .padStart(2, '0')}/${dateDeadline.getFullYear()}`;\n  const cardTextDescription = text.substring(0, 90) + '...';\n\n  const openCardModal = () => {\n    setmodalCardIsOpen(true);\n  };\n\n  const closeCardModal = () => {\n    setmodalCardIsOpen(false);\n  };\n\n  const handleDeleteCard = () => {\n    dispatch(deleteCard({ cardId }));\n  };\n\n  const hendleMoveCardModalOpen = () => {\n    setIsOpenMoveCardModal(true);\n  };\n\n  const hendleMoveCardModalClose = () => {\n    setIsOpenMoveCardModal(false);\n  };\n\n  return (\n    <CardBody>\n      <CardColor $priority={priority}></CardColor>\n      <CardTitle>{title}</CardTitle>\n      <CardDescription>{cardTextDescription}</CardDescription>\n      <CardSolid></CardSolid>\n      <CardDetals>\n        <CardInformation>\n          <Priority>\n            <PriorityTitle>Priority</PriorityTitle>\n            <PriorityDetals>\n              <PriorityColor $priority={priority}></PriorityColor>\n              <PriorityTipe>{priority}</PriorityTipe>\n            </PriorityDetals>\n          </Priority>\n          <Deadline>\n            <DeadlineTitle>Deadline</DeadlineTitle>\n            <DeadlineDate>{formatedDate}</DeadlineDate>\n          </Deadline>\n        </CardInformation>\n        <CardButtons>\n          <Bell type=\"button\">\n            <Icon name=\"bell\" width=\"16\" height=\"16\" />\n          </Bell>\n          <Button type=\"button\" onClick={hendleMoveCardModalOpen}>\n            <Icon name=\"arrow-in-circle\" width=\"16\" height=\"16\" />\n          </Button>\n          <Button type=\"button\" onClick={openCardModal}>\n            <Icon name=\"pencil\" width=\"16\" height=\"16\" />\n          </Button>\n          <Button type=\"button\" onClick={handleDeleteCard}>\n            <Icon name=\"trash\" width=\"16\" height=\"16\" />\n          </Button>\n        </CardButtons>\n      </CardDetals>\n      <Modal\n        isOpen={modalCardIsOpen}\n        onRequestClose={closeCardModal}\n        className={'modal-content'}\n        overlayClassName={'modal-overlay'}\n      >\n        <EditCardModal card={card} onClose={closeCardModal} />\n      </Modal>\n      <Modal\n        isOpen={isOpenMoveCardModal}\n        onRequestClose={hendleMoveCardModalClose}\n        className={'modal-content'}\n        overlayClassName={'modal-overlay'}\n      >\n        <MoveCardDropdown currColumnId={columnId} cardId={cardId} />\n      </Modal>\n    </CardBody>\n  );\n}\n","import styled from 'styled-components';\n\nexport const HeadWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 335px;\n  height: 56px;\n\n  padding: 17px 20px;\n\n  border-radius: 8px;\n\n  background-color: var(--extraBgColor);\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const CardList = styled.ul`\n  > li:not(:last-of-type) {\n    margin-bottom: 10px;\n  }\n  border-radius: 12px;\n\n  @media (min-width: 768px) {\n  }\n\n  @media (min-width: 1440px) {\n  }\n\n  overflow: auto;\n  padding: 0;\n\n  &::-webkit-scrollbar {\n    width: 8px; /* ширина скролбару */\n  }\n\n  &::-webkit-scrollbar-track {\n    background: var(--scroll-col); /* колір фону всієї доріжки скролбару */\n    border-radius: 12px; // заокруглення доріжки скролу\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: var(--scroll-col-bg); // колір самого скролу\n    border-radius: 12px; /* заокруглення самого скролу */\n\n    &:hover {\n      background-color: var(\n        --scroll-col-bg-hover\n      ); // колір самого скролу при наведенні\n    }\n  }\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const IconedBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  border: none;\n  background-color: inherit;\n\n  stroke: var(--secondaryTextColor);\n  transition: opacity var(--transition);\n\n  > svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    stroke: var(--accent);\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  width: 335px;\n  height: 56px;\n\n  padding: 10px 0 11px 0;\n\n  border: none;\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--btnText);\n  background-color: var(--btnBgColor);\n  transition: background-color var(--transition);\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnBgColorHover);\n  }\n`;\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n\n  border-radius: 8px;\n\n  background-color: var(--btnText);\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--plusInBtn);\n  }\n`;\n\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Container = styled.div`\n  border-radius: 8px;\n  height: 522px;\n  position: relative;\n  padding: 24px;\n  width: 100%;\n  background: var(--modalBgColor);\n\n  display: flex;\n  flex-direction: column;\n\n  @media only screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const TitleModal = styled.h2`\n  margin-bottom: 24px;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  line-height: 1.5;\n  color: var(--textColorcalendar);\n`;\n\nexport const CloseModal = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  cursor: pointer;\n\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  color: red;\n  font-size: 12px;\n`;\n\nexport const TitleCard = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 14px;\n  transition: var(--transition);\n  background-color: var(--modalBgColor);\n  color: var(--textColorcalendar);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n\nexport const StyledDescription = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  padding-top: 14px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 154px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 24px;\n\n  resize: none;\n\n  color: var(--textColorcalendar);\n  background: var(--modalBgColor);\n\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const LabelColorStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--textCalendar);\n  margin-bottom: 4px;\n`;\n\nexport const StyleRadioButton = styled.div`\n  height: 18px;\n  display: flex;\n  gap: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const RadioButton = styled(Field)`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n`;\nexport const RadioButtonBlu = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: #8fa1d0;\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid #8fa1d0;\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const RadioButtonRed = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: #e09cb5;\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid #e09cb5;\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const RadioButtonGreen = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: #bedbb0;\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid #bedbb0;\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const RadioButtonGrey = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: rgba(22, 22, 22, 0.3);\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid rgba(22, 22, 22, 0.3);\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const DeadlineStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\n\nexport const AddButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  background-color: var(--accent);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnBgColorHover);\n  }\n  cursor: pointer;\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: var(--btnText);\n  margin-right: 8px;\n  stroke: var(--plusInBtn);\n`;\n\nexport const AddCardButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 335px;\n  height: 56px;\n  background: var(--btnPlus);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Span = styled.span`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--accent);\n`;\n","import { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Calendar } from 'components/Calendar';\nimport { Icon } from 'components/Icon';\n\nimport {\n  Container,\n  TitleModal,\n  StyledDescription,\n  CloseModal,\n  TitleCard,\n  LabelColorStyle,\n  DeadlineStyle,\n  AddButton,\n  StylePlus,\n  StyledForm,\n  ErrMsg,\n  Label,\n  Span,\n} from './AddCardModal.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { addCard } from '../../redux/cards/cardsOperations.js';\nimport { RadioInputs } from 'components/RadioInputs/RadioInputs.jsx';\n\nconst priority = ['without', 'low', 'medium', 'high'];\n\nconst formCardSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(3, `It's can be up to 3 characters long`)\n    .max(100, 'Too Long!')\n    .required(`This field is required.`),\n  text: Yup.string()\n    .min(10, `It's can be up to 10 characters long`)\n    .max(500, 'Too Long!')\n    .required(`This field is required.`),\n  priority: Yup.string().oneOf(priority),\n  deadline: Yup.date(),\n});\n\nexport default function AddCardModal({ title, btnText, onClose, columnId }) {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const dispatch = useDispatch();\n\n  const onSubmit = values => {\n    dispatch(addCard({ values, columnId }));\n    onClose();\n  };\n\n  return (\n    <Container>\n      <TitleModal>{title}</TitleModal>\n      <CloseModal>\n        <button type=\"button\" onClick={onClose}>\n          <Icon\n            name=\"close\"\n            width=\"18\"\n            height=\"18\"\n            stroke=\"var(--textColorcalendar)\"\n          />\n        </button>\n      </CloseModal>\n      <Formik\n        initialValues={{\n          title: '',\n          text: '',\n          priority: 'without',\n          deadline: selectedDate,\n        }}\n        validationSchema={formCardSchema}\n        onSubmit={onSubmit}\n      >\n        {({ handleSubmit, setFieldValue }) => (\n          <StyledForm onSubmit={handleSubmit}>\n            <TitleCard type=\"text\" name=\"title\" placeholder=\"Title\" />\n            <ErrMsg component=\"p\" name=\"title\" />\n            <Label>\n              <StyledDescription\n                rows={4}\n                component=\"textarea\"\n                name=\"text\"\n                placeholder=\"Description\"\n              />\n              <ErrMsg component=\"p\" name=\"text\" />\n            </Label>\n            <LabelColorStyle id=\"colorCard-radio-group\">\n              Label color\n            </LabelColorStyle>\n            <RadioInputs\n              defaultChecked=\"without\"\n              onPriorityChange={priority => {\n                setFieldValue('priority', priority);\n              }}\n            />\n            <DeadlineStyle>Deadline</DeadlineStyle>\n            <div>\n              <Span> Today,</Span>\n              <Calendar\n                selectedDate={selectedDate}\n                onDateChange={date => {\n                  setSelectedDate(date);\n                  setFieldValue('deadline', date);\n                }}\n              />\n            </div>\n            <AddButton type=\"submit\">\n              <StylePlus>\n                <Icon name=\"plus\" width=\"14\" height=\"14\" />\n              </StylePlus>\n              <p>{btnText}</p>\n            </AddButton>\n          </StyledForm>\n        )}\n      </Formik>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const HeadWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 335px;\n  height: 56px;\n\n  margin-bottom: 14px;\n  padding: 17px 20px;\n\n  border-radius: 8px;\n\n  background-color: var(--extraBgColor);\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const IconedBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  border: none;\n  background-color: inherit;\n\n  stroke: var(--secondaryTextColor);\n  transition: opacity var(--transition);\n\n  > svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    stroke: var(--accent);\n  }\n`;\n\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n","import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 8px;\n  height: 221px;\n  position: relative;\n  padding: 24px;\n  min-width: 320px;\n  /* border: 1px solid rgba(190, 219, 176, 0.5); */\n  background: var(--modalBgColor);\n\n  @media only screen and (max-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  /* border: 1px solid rgba(190, 219, 176, 0.5); */\n  border-radius: 8px;\n  background: var(--modalBgColor);\n`;\n\nexport const StyledField = styled(Field)`\n  font: inherit;\n  cursor: pointer;\n  padding-left: 18px;\n  margin-top: 24px;\n  margin-bottom: 24px;\n  width: 287px;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  background: var(--modalBgColor);\n  color: var(--textColorcalendar);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  transition: opacity var(--transition);\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  /* opacity: 0.5; */\n  /* transition: opacity var(--transition); */\n\n  /* &:hover,\n  &:focus {\n    opacity: 1;\n  } */\n\n  cursor: pointer;\n`;\n\nexport const Label = styled.h3`\n  /* margin-top: 24px;\n  margin-left: 24px; */\n  font-family: 'Poppins-Medium';\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 500; */\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  /* color: #fff; */\n  color: var(--textColorcalendar);\n`;\n\nexport const Button = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  background: var(--btnPlus);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: var(--transition);\n  cursor: pointer;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnBgColorHover);\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const ButtonText = styled.span`\n  font-family: 'Poppins-Medium';\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 500; */\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  /* color: #161616; */\n  color: var(--headerBgColor);\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  color: red;\n  font-size: 12px;\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: black;\n  margin-right: 8px;\n  stroke: white;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icon';\nimport {\n  Button,\n  ButtonText,\n  CloseBtn,\n  Container,\n  Label,\n  StylePlus,\n  StyledField,\n  StyledForm,\n} from './EditColumnFormik.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { editColumn } from '../../redux/columns/columnsOperations.js';\n\nconst addColumnFormSchema = Yup.object().shape({\n  title: Yup.string().min(2, 'Too short!').required('This field is required!'),\n});\n\nexport const EditColumnFormik = ({ title, columnId, onClose }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = body => {\n    dispatch(editColumn({ body, columnId }));\n  };\n\n  return (\n    <Container>\n      <Label>Edit column</Label>\n      <CloseBtn\n        type=\"button\"\n        onClick={onClose}\n        // style={{ stroke: 'var(--primaryTextColor)' }}\n      >\n        <Icon name=\"close\" width=\"18\" height=\"18\" stroke=\"var(--textColorcalendar)\"/>\n      </CloseBtn>\n      <Formik\n        initialValues={{\n          title,\n        }}\n        validationSchema={addColumnFormSchema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <StyledField type=\"text\" name=\"title\" placeholder=\"To Do\" />\n          <Button type=\"submit\">\n            <StylePlus>\n              <Icon name=\"plus\" width=\"14\" height=\"14\" />\n            </StylePlus>\n            <ButtonText>Edit</ButtonText>\n          </Button>\n        </StyledForm>\n      </Formik>\n    </Container>\n  );\n};\n","import { Icon } from 'components/Icon';\nimport {\n  HeadWrap,\n  IconedBtn,\n  Title,\n  Wrap,\n  customStyles,\n} from './ColumnHead.styled';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport { EditColumnFormik } from 'components/EditColumnFormik';\nimport { useDispatch } from 'react-redux';\nimport { deleteColumn } from '../../redux/columns/columnsOperations';\n\nexport const ColumnHead = ({ title, columnId }) => {\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleModalOpen = () => {\n    setIsOpenModal(true);\n  };\n\n  const handleModalClose = () => {\n    setIsOpenModal(false);\n  };\n\n  const handleDeleteColumn = () => {\n    dispatch(deleteColumn({ columnId }));\n  };\n\n  return (\n    <>\n      <HeadWrap>\n        <Title>{title}</Title>\n        <Wrap>\n          <IconedBtn type=\"button\" onClick={handleModalOpen}>\n            <Icon name=\"pencil\" />\n          </IconedBtn>\n          <IconedBtn type=\"button\" onClick={handleDeleteColumn}>\n            <Icon name=\"trash\" />\n          </IconedBtn>\n        </Wrap>\n      </HeadWrap>\n      <Modal\n        isOpen={isOpenModal}\n        onRequestClose={handleModalClose}\n        style={customStyles}\n        contentLabel=\"Column Edit Modal\"\n        ariaHideApp={false}\n      >\n        <EditColumnFormik\n          title={title}\n          columnId={columnId}\n          onClose={handleModalClose}\n        />\n      </Modal>\n    </>\n  );\n};\n","import { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport Card from 'components/Card/Card';\nimport { AddBtn, CardList, IconWrap, customStyles } from './Column.styled';\nimport AddCardModal from 'components/AddCardModal/AddCardModal';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { ColumnHead } from 'components/ColumnHead';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const Column = ({ columnId, title }) => {\n  const [modalCardIsOpen, setmodalCardIsOpen] = useState(false);\n  const { cards } = useSelector(state => state.cards);\n  const [searchParams] = useSearchParams();\n  const priority = searchParams.get('priority');\n\n  let filtredCards = cards?.filter(({ column: { _id } }) => _id === columnId);\n\n  if (priority) {\n    filtredCards = filtredCards?.filter(card => card.priority === priority)\n  };\n\n  const openCardModal = () => {\n    setmodalCardIsOpen(true);\n  };\n\n  const closeCardModal = () => {\n    setmodalCardIsOpen(false);\n  };\n\n  return (\n    <>\n      <ColumnHead title={title} columnId={columnId} />\n      <CardList>\n        {filtredCards.map(card => (\n          <Card key={nanoid()} card={card} />\n        ))}\n      </CardList>\n      <AddBtn type=\"button\" onClick={openCardModal}>\n        <IconWrap>\n          <Icon name=\"plus\" />\n        </IconWrap>{' '}\n        Add another card\n      </AddBtn>\n      <Modal\n        isOpen={modalCardIsOpen}\n        onRequestClose={closeCardModal}\n        style={customStyles}\n        contentLabel=\"Card Add Modal\"\n        ariaHideApp={false}\n      >\n        <AddCardModal\n          columnId={columnId}\n          title={'Add card'}\n          btnText={'Add'}\n          onClose={closeCardModal}\n        />\n      </Modal>\n    </>\n  );\n};\n","import styled from 'styled-components';\n// import 'react-perfect-scrollbar/dist/css/styles.css';\n\nexport const Container = styled.div`\n  max-width: 347px;\n\n  @media (min-width: 768px) {\n    max-width: 718px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 1128px;\n  }\n\n  &.scrollbar-container {\n    height: auto;\n  }\n  overflow: auto;\n  padding: 0 0 8px;\n\n  &::-webkit-scrollbar {\n    width: 12px; /* ширина скролбару */\n    height: 12px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: var(--scroll); /* колір фону всієї доріжки скролбару */\n    border-radius: 12px; // заокруглення доріжки скролу\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: var(--scrollBg); // колір самого скролу\n    border-radius: 12px; /* заокруглення самого скролу */\n\n    &:hover {\n      background-color: var(\n        --scroll-bg-hover\n      ); // колір самого скролу при наведенні\n    }\n  }\n`;\n\nexport const customStyles = { \n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const ColumnList = styled.ul`\n  display: flex;\n  gap: 18px;\n`;\n\nexport const ColumnItem = styled.li`\n  display: grid;\n  grid-template-rows: 56px minmax(0, 1fr) 56px;\n  gap: 14px;\n  width: 347px;\n  height: calc(90vh - 80px);\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  gap: 18px;\n  align-items: flex-start;\n  padding: 0 0 8px;\n`;\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  min-width: 334px;\n  width: 334px;\n\n  padding: 14px 78px;\n\n  border: none;\n  border-radius: 8px;\n\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--secondaryTextColor);\n  background-color: var(--extraBgColor);\n\n  opacity: 1;\n  transition: color background-color var(--transition);\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: var(--btnText);\n    background-color: var(--btnBgColor);\n  }\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n`;\n\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n  border: 1px solid black;\n  border-radius: 8px;\n  stroke: var(--extraBgColor);\n\n  background-color: var(--squareIconColor);\n  transition: background-color stroke var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnText);\n    stroke: var(--plusInBtn);\n  }\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--extraBgColor);\n  }\n`;\n","import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 8px;\n  height: 221px;\n  position: relative;\n  padding: 24px;\n  min-width: 320px;\n  /* border: 1px solid rgba(190, 219, 176, 0.5); */\n  background: var(--modalBgColor);\n\n  @media only screen and (max-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  /* border: 1px solid rgba(190, 219, 176, 0.5); */\n  border-radius: 8px;\n  background: var(--modalBgColor);\n`;\n\nexport const StyledField = styled(Field)`\n  font: inherit;\n  cursor: pointer;\n  padding-left: 18px;\n  margin-top: 24px;\n  margin-bottom: 24px;\n  width: 287px;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  background: var(--modalBgColor);\n  color: var(--textColorcalendar);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  transition: opacity var(--transition);\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  /* opacity: 0.5; */\n  /* transition: opacity var(--transition); */\n\n  /* &:hover,\n  &:focus {\n    opacity: 1;\n  } */\n\n  cursor: pointer;\n`;\n\nexport const Label = styled.h3`\n  /* margin-top: 24px;\n  margin-left: 24px; */\n  font-family: 'Poppins-Medium';\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 500; */\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  /* color: #fff; */\n  color: var(--textColorcalendar);\n`;\n\nexport const Button = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  background: var(--btnPlus);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: var(--transition);\n  cursor: pointer;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnBgColorHover);\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const ButtonText = styled.span`\n  font-family: 'Poppins-Medium';\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 500; */\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  /* color: #161616; */\n  color: var(--headerBgColor);\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  color: red;\n  font-size: 12px;\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: black;\n  margin-right: 8px;\n  stroke: white;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icon';\nimport {\n  Button,\n  ButtonText,\n  CloseBtn,\n  Container,\n  Label,\n  StylePlus,\n  StyledField,\n  StyledForm,\n} from './AddColumnFormik.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { addColumn } from '../../redux/columns/columnsOperations.js';\n\nconst addColumnFormSchema = Yup.object().shape({\n  title: Yup.string().min(2, 'Too short!').required('This field is required!'),\n});\n\nexport const AddColumnFormik = ({ boardId, onClose }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = body => {\n    dispatch(addColumn({ body, boardId }));\n  };\n\n  return (\n    <Container>\n      <Label>Add column</Label>\n      <CloseBtn\n        type=\"button\"\n        onClick={onClose}\n        // style={{ stroke: 'var(--primaryTextColor)' }}\n      >\n        <Icon name=\"close\" width=\"18\" height=\"18\" stroke=\"var(--textColorcalendar)\"/>\n      </CloseBtn>\n      <Formik\n        initialValues={{\n          title: '',\n        }}\n        validationSchema={addColumnFormSchema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <StyledField type=\"text\" name=\"title\" placeholder=\"Title\" />\n          <Button type=\"submit\">\n            <StylePlus>\n              <Icon name=\"plus\" width=\"14\" height=\"14\" />\n            </StylePlus>\n            <ButtonText>Add</ButtonText>\n          </Button>\n        </StyledForm>\n      </Formik>\n    </Container>\n  );\n};\n","import { Column } from 'components/Column';\nimport {\n  IconWrap,\n  AddBtn,\n  Wrap,\n  ColumnItem,\n  Container,\n  ColumnList,\n  customStyles,\n} from './Board.styled';\nimport { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { AddColumnFormik } from 'components/AddColumnFormik/AddColumnFormik';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useParams } from 'react-router-dom';\n\nexport const Board = () => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const { columns } = useSelector(state => state.columns);\n  const { boardId } = useParams();\n  \n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <Container>\n        <Wrap>\n          <ColumnList>\n            {columns.map(({ _id, title }) => {\n              return (\n                <ColumnItem key={nanoid()}>\n                  <Column title={title} columnId={_id} />\n                </ColumnItem>\n              );\n            })}\n          </ColumnList>\n          <AddBtn type=\"button\" onClick={openModal}>\n            <IconWrap>\n              <Icon name=\"plus\" />\n            </IconWrap>{' '}\n            Add another column\n          </AddBtn>\n        </Wrap>\n      </Container>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Column Edit Modal\"\n        ariaHideApp={false}\n      >\n        <AddColumnFormik onClose={closeModal} boardId={boardId} />\n      </Modal>\n    </>\n  );\n};\n","import { HeaderDashboard } from 'components/HeaderDashboard';\nimport { Board } from 'components/Board';\n\nexport const ScreensPage = ({ boardTitle }) => {\n  return (\n    <>\n      <HeaderDashboard boardTitle={boardTitle} />\n      <Board />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StartContainer = styled.div`\n  height: 80vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const StartText = styled.p`\n  min-width: 280px;\n\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  line-height: 1.33;\n\n  color: var(--secondaryTextColor);\n\n  @media (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media (min-width: 768px) {\n    line-height: 1.29;\n    width: 486px;\n    margin: auto;\n  }\n`;\n\n\n\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const BoardCreationBtn = styled.button`\n  margin: 0;\n  padding: 0;\n\n  border: none;\n  outline: none;\n\n  background-color: inherit;\n  color: var(--btnPlus);\n  cursor: pointer;\n  transition: color var(--transition);\n  &:hover,\n  &:focus {\n    color: var(--btnPlusHover);\n  }\n`;\n","import {\n  StartText,\n  BoardCreationBtn,\n  customStyles,\n  StartContainer,\n} from './StartScreen.styled';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { BoardCreatingModal } from 'components/BoardCreatingModal';\n\nexport const StartScreen = () => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <StartContainer>\n      <StartText>\n        Before starting your project, it is essential{' '}\n        <BoardCreationBtn type=\"button\" onClick={openModal}>\n          to create a board\n        </BoardCreationBtn>{' '}\n        to visualize and track all the necessary tasks and milestones. This\n        board serves as a powerful tool to organize the workflow and ensure\n        effective collaboration among team members.\n      </StartText>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Board Creation Modal\"\n        ariaHideApp={false}\n      >\n        <BoardCreatingModal onClose={closeModal} />\n      </Modal>\n    </StartContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SidebarWrapper = styled.aside`\n  @media screen and (max-width: 1439px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 14px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    grid-column: 1 / 2;\n    grid-row-start: 1;\n    grid-row-end: 3;\n  }\n`;\n\nexport const Main = styled.main`\n  grid-column: 1 / 2;\n  grid-row: 2 / 3;\n  padding: 10px 24px;\n  min-height: 812px;\n  background-color: var(--secondaryBgColor);\n  background-image: url(${props => props.$backgroundImg}_375x812.webp);\n  background-repeat: no-repeat;\n  max-width: 375px;\n  height: auto;\n  background-position: center;\n  background-size: cover;\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${props => props.$backgroundImg}_750x1624.webp);\n  }\n  @media (min-width: 768px) {\n    background-image: url(${props => props.$backgroundImg}_768x956.webp);\n    max-width: 768px;\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${props => props.$backgroundImg}_1536x1912.webp);\n    }\n  }\n\n  @media (min-width: 1440px) {\n    background-image: url(${props => props.$backgroundImg}_1180x770.webp);\n    max-width: 1180px;\n    grid-column: 2 / 3;\n    grid-row: 2 / 3;\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${props => props.$backgroundImg}_2360x1540.webp);\n    }\n  }\n`;\n","import { useEffect } from 'react';\nimport { Header } from 'components/Header';\nimport { Sidebar } from 'components/SideBar';\nimport { ScreensPage } from 'components/ScreensPage';\nimport { StartScreen } from 'components/StartScreen';\nimport { Main, SidebarWrapper } from './HomePage.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Outlet, useNavigate, useParams } from 'react-router-dom';\nimport { selectCurrentBoard } from '../../redux/boards/boardsSelectors';\nimport { fetchBoardById } from '../../redux/boards/boardsOperations';\nimport { fetchColumnsByBoardId } from '../../redux/columns/columnsOperations';\nimport { fetchCards } from '../../redux/cards/cardsOperations';\nimport { useAuth } from 'hooks';\n\nexport default function HomePage() {\n  const dispatch = useDispatch();\n  const { boardId } = useParams();\n  const { isLoggedIn } = useAuth();\n  const navigate = useNavigate();\n  const currBoard = useSelector(selectCurrentBoard);\n\n  useEffect(() => {\n    const boardFromLS = localStorage.getItem('lastBoard');\n    if (!boardFromLS) return;\n    if (boardFromLS === boardId) return;\n    navigate(`/${boardFromLS}`);\n    return () => {};\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (!boardId) return;\n    if (!isLoggedIn) return;\n    dispatch(fetchBoardById(boardId));\n    dispatch(fetchColumnsByBoardId(boardId));\n    dispatch(fetchCards(boardId));\n\n    return () => {};\n  }, [boardId, dispatch, isLoggedIn]);\n\n\n  const background = currBoard?.background || 'diego';\n  const title = currBoard?.title;\n  const baseUrl =\n    'https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/';\n  const backgroundImgUrl = baseUrl + background;\n\n\n  return (\n    <>\n      <Header />\n      <SidebarWrapper>\n        <Sidebar />\n      </SidebarWrapper>\n      {currBoard ? (\n        <Main $backgroundImg={backgroundImgUrl}>\n          <ScreensPage boardTitle={title} />\n          <Outlet />\n        </Main>\n      ) : (\n        <StartScreen />\n      )}\n    </>\n  );\n}\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Name","_templateObject2","Avatar","_templateObject3","Button","_templateObject4","ButtonSvg","_templateObject5","Title","StyledForm","Form","StyledField","Field","LastField","_templateObject6","ErrMsg","ErrorMessage","_templateObject7","Label","_templateObject8","StyledLabel","_templateObject9","ContainerAvatar","Input","UpdateAvatar","user","useAuth","showSvg","showImage","dispatch","useDispatch","filePicker","useRef","_jsxs","children","_jsx","Icon","name","fill","stroke","width","height","src","avatarURL","alt","onClick","current","click","type","ref","onChange","event","selectedFile","target","files","updateAvatar","accept","EditProfileSchema","Yup","shape","min","max","matches","required","email","password","EditProfile","_ref","closeModal","Formik","initialValues","validationSchema","onSubmit","values","actions","update","id","component","placeholder","customStyles","content","top","left","right","bottom","padding","transform","boxShadow","borderRadius","border","overlay","background","UserInfo","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","openModal","Modal","isOpen","style","contentLabel","selectBoards","state","_state$boards","boards","selectCurrentBoard","_state$boards2","currentBoard","sendDataEmail","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","axios","toast","t0","stop","_x","apply","arguments","ContainerForModal","TitleForModal","StyledFormInModal","StyledFieldInModal","StyledTextareaInModal","ButtonForModal","ButtonClose","emailForSupport","textMessage","builderSchema","SendEmail","onClose","form","resetForm","rows","NeedHelpBlock","NeedHelpBtn","NeedHelp","srcSet","color","onRequestClose","BoardCreationBlock","BtnCreate","ModalWrap","ModalTitle","CloseBtn","FormWrap","Text","IconsListWrap","InvisibleInput","BackgroundsPallet","_templateObject10","LabelPic","_templateObject11","Div","_templateObject12","AddBtn","_templateObject13","IconWrap","_templateObject14","iconsArr","backgroundsArr","schema","title","icon","oneOf","BoardCreatingModal","navigate","useNavigate","_ref2","_yield$dispatch","_id","addBoard","sent","payload","localStorage","setItem","concat","map","el","value","srcSetPath","srcDefault","BoardCreation","btnText","ControlIconsContainer","BoardItemContainer","BoardEditModal","board","boardId","editBoard","BoardItem","useSelector","tagName","closest","handleSelectBoard","selected","opacity","deleteBoard","filteredBoards","filter","removeItem","length","lastBoardObj","handleDelete","Logo","BoardContainer","BoardList","LogOut","Sidebar","useEffect","fetchBoards","_Fragment","logOut","DrpdwnBtn","ThemesList","visibility","_ref3","ThemeItem","ThemeSwitcher","setIsOpen","menuRef","callback","handleClick","evnt","contains","document","addEventListener","removeEventListener","useClickOutside","setTimeout","heigth","changeTheme","theme","HeaderStyled","MenuBtn","HeaderWrapper","customStylesForModal","inset","Header","isMenuOpen","setIsOpenMenu","FiltersTytle","FiltersWrap","FilterLabel","ShowAllBtn","StyledRadioGroup","RadioLabel","$priority","FiltersSpan","RadioFilters","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","currValue","get","handleFilter","priority","role","item","text","str","charAt","toUpperCase","slice","capitalizer","className","checked","nanoid","FilterModal","Wrap","BoardTitle","FilterBtn","HeaderDashboard","boardTitle","CardBody","CardColor","CardTitle","CardDescription","CardSolid","CardDetals","CardInformation","Priority","PriorityDetals","PriorityTitle","PriorityColor","PriorityTipe","Deadline","DeadlineTitle","DeadlineDate","_templateObject15","CardButtons","_templateObject16","Bell","_templateObject17","_templateObject18","Calendar","selectedDate","onDateChange","DatePicker","date","dateFormat","minDate","Date","locale","enGB","weekStartsOn","TitleModal","CloseModal","TitleCard","StyledDescription","LabelColorStyle","DeadlineStyle","AddButton","StylePlus","Span","RadioButton","RadioInputs","defaultChecked","onPriorityChange","setCurrValue","handleInput","formCardSchema","deadline","EditCardModal","card","cardId","setSelectedDate","editCard","handleSubmit","setFieldValue","MoveList","MoveCardItemStyled","MoveCardItemButtonStyled","MoveCardItem","column","currentId","chengeColumnsCard","toColumnId","MoveCardDropdown","currColumnId","columns","Card","modalCardIsOpen","setmodalCardIsOpen","_useState3","_useState4","isOpenMoveCardModal","setIsOpenMoveCardModal","columnId","dateDeadline","formatedDate","getUTCDate","getUTCMonth","toString","padStart","getFullYear","cardTextDescription","substring","closeCardModal","deleteCard","overlayClassName","CardList","_templateObject19","_templateObject20","AddCardModal","addCard","HeadWrap","IconedBtn","ButtonText","addColumnFormSchema","EditColumnFormik","body","editColumn","ColumnHead","isOpenModal","setIsOpenModal","handleModalClose","deleteColumn","ariaHideApp","Column","_filtredCards","cards","filtredCards","ColumnList","ColumnItem","AddColumnFormik","addColumn","Board","modalIsOpen","useParams","ScreensPage","StartContainer","StartText","BoardCreationBtn","StartScreen","SidebarWrapper","Main","props","$backgroundImg","HomePage","isLoggedIn","currBoard","boardFromLS","getItem","fetchBoardById","fetchColumnsByBoardId","fetchCards","backgroundImgUrl","Outlet"],"sourceRoot":""}