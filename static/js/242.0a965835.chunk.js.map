{"version":3,"file":"static/js/242.0a965835.chunk.js","mappings":"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","sources":["components/UserInfo/UserInfo.styled.js","components/EditProfile/EditProfile.styled.js","components/UpdateAvatar/UpdateAvatar.styled.js","components/UpdateAvatar/UpdateAvatar.jsx","schemas/editProfileSchema.js","components/EditProfile/EditProfile.jsx","components/UserInfo/UserInfo.jsx","redux/boards/boardsSelectors.js","services/sendDataEmail.js","components/SendEmail/SendEmail.styled.js","components/SendEmail/SendEmail.jsx","components/NeedHelp/NeedHelp.styled.js","components/NeedHelp/NeedHelp.jsx","components/SidebarBoardCreation/BoardCreation.styled.js","components/BoardCreatingModal/BoardCreatingModal.styled.js","components/BoardCreatingModal/BoardCreatingModal.jsx","components/SidebarBoardCreation/BoardCreation.jsx","components/BoardItem/BoardItem.styled.js","components/BoardItem/BoardItem.jsx","components/SideBar/SideBar.styled.js","components/SideBar/SideBar.jsx","components/ThemeSwitcher/ThemeSwitcher.styled.js","components/ThemeSwitcher/ThemeSwitcher.jsx","hooks/useClickOutside.js","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/FilterModal/FilterModal.styled.jsx","components/FilterModal/FilterModal.jsx","components/HeaderDashboard/HeaderDashboard.jsx","components/Card/Card.styled.js","components/Calendar/Calendar.js","components/EditCardModal/EditCardModal.styled.js","components/RadioInputs/RadioInputs.styled.js","components/RadioInputs/RadioInputs.jsx","components/EditCardModal/EditCardModal.jsx","components/MoveCardDropdown/MoveCardDropdown.styled.js","components/MoveCardItem/MoveCardItem.styled.js","components/MoveCardItem/MoveCardItem.jsx","components/MoveCardDropdown/MoveCardDropdown.jsx","components/Card/Card.jsx","components/Column/Column.styled.js","components/AddCardModal/AddCardModal.styled.js","components/AddCardModal/AddCardModal.jsx","components/ColumnHead/ColumnHead.styled.js","components/EditColumnFormik/EditColumnFormik.styled.js","components/EditColumnFormik/EditColumnFormik.jsx","components/ColumnHead/ColumnHead.jsx","components/Column/Column.jsx","components/Board/Board.styled.js","components/AddColumnFormik/AddColumnFormik.styled.js","components/AddColumnFormik/AddColumnFormik.jsx","components/Board/Board.jsx","components/MainDashboard/MainDashboard.styled.js","components/MainDashboard/MainDashboard.jsx","components/ScreensPage/ScreensPage.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n\n  gap: 8px;\n`;\n\nexport const Name = styled.p`\n  margin: 5px 0;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -2;\n  color: var(--primaryTextColor);\n`;\n\nexport const Avatar = styled.img`\n  cursor: pointer;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 10px;\n  color: var(--primaryTextColor);\n  background: var(--modalBgColor);\n  border: 0;\n  cursor: pointer;\n`;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Container = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 100%;\n  height: 440px;\n  border-radius: 8px;\n  background: var(--modalBgColor);\n\n  @media only screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin: 0 0 24px 0;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledField = styled(Field)`\n  position: relative;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  width: 100%;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  opacity: 0.4;\n  border-radius: 8px;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  transition: var(--transition);\n\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n`;\n\nexport const LastField = styled(Field)`\n  margin-bottom: 24px;\n  padding: 14px 18px;\n  width: 100%;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  opacity: 0.4;\n  border-radius: 8px;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -2;\n  color: var(--primaryTextColor);\n  transition: var(--transition);\n\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  background: var(--accent);\n  border: 0;\n  border-radius: 8px;\n  padding: 14px 126px;\n  color: var(--primaryTextColor);\n  font-family: 'Poppins-Medium';\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0, 02em;\n\n  &:hover {\n    background: var(--hover);\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 4px;\n\n  color: red;\n  font-size: 12px;\n  font-style: italic;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n\nexport const StyledLabel = styled.label`\n  position: relative;\n  display: block;\n\n  svg {\n    position: absolute;\n    top: 16px;\n    right: 15px;\n    opacity: 0, 5;\n    &:active {\n      opacity: 1;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ContainerAvatar = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Avatar = styled.img`\n  margin-bottom: 25px;\n  border-radius: 8px;\n`;\n\nexport const Input = styled.input`\n  opacity: 0;\n  height: 0;\n  width: 0;\n  line-height: 0;\n  overfow: hidden;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 56px;\n  left:46%;\n\n  width: 24px;\n  height: 24px;\n  background: var(--accent);\n  border-radius: 8px;\n  border: 0;\n\n  @media only screen and (min-width: 768px) {\n    left: 47%;\n  }\n`;\n","import { useRef } from 'react';\nimport { Input, Button, ContainerAvatar, Avatar } from './UpdateAvatar.styled';\n\nimport { useAuth } from 'hooks';\nimport { useDispatch } from 'react-redux';\nimport { updateAvatar } from '../../redux/auth/authOperation';\n\nimport { Icon } from 'components/Icon';\n\nconst cloudinaryBaseURL =\n  'https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707503119/';\n\nexport const UpdateAvatar = () => {\n  const { user } = useAuth();\n  const dispatch = useDispatch();\n\n  const filePicker = useRef(null);\n\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n\n    dispatch(updateAvatar(selectedFile));\n  };\n\n  const handlePick = () => {\n    filePicker.current.click();\n  };\n  return (\n    <ContainerAvatar>\n      <Avatar\n        src={cloudinaryBaseURL + user.avatarURL}\n        width=\"68\"\n        height=\"68\"\n        alt=\"user photo\"\n      />\n\n      <Button onClick={handlePick}>\n        <Icon\n          name=\"plus\"\n          width=\"10px\"\n          height=\"10px\"\n          stroke=\"var(--primaryTextColor)\"\n        />\n      </Button>\n      <Input\n        type=\"file\"\n        ref={filePicker}\n        onChange={handleFileChange}\n        accept=\"image/*,.jpg,.png,.gif,.web,\"\n      />\n    </ContainerAvatar>\n  );\n};\n","import * as Yup from 'yup';\n\nexport const EditProfileSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, '2 chars minimum')\n    .max(32, '32 chars maximum')\n    .matches(/^[a-zA-Z0-9!@#$%^&*(),.?\":{}|<>]+$/, 'Invalin name ')\n    .required('this field is required'),\n  email: Yup.string().email('Invalid email').required('this field is required'),\n  password: Yup.string()\n    .min(8, '8 chars minimum')\n    .max(64, '64 chars maximum')\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*(),.?\":{}|<>]+$/,\n      'only latin letters, numbers and symbols'\n    )\n    .matches(/^\\S*$/, 'password must not contain spaces')\n    .required('this field is required '),\n});","import {\n  Container,\n  Title,\n  Button,\n  StyledForm,\n  StyledField,\n  LastField,\n  ErrMsg,\n  StyledLabel,\n  Label,\n} from './EditProfile.styled';\nimport { Formik } from 'formik';\n\nimport { useAuth } from 'hooks';\nimport { update } from '../../redux/auth/authOperation';\nimport { useDispatch } from 'react-redux';\nimport { UpdateAvatar } from 'components/UpdateAvatar';\nimport { Icon } from 'components/Icon';\nimport { EditProfileSchema } from 'schemas/editProfileSchema';\n\nexport const EditProfile = () => {\n  const { user } = useAuth();\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <Title>Edit profile</Title>\n     <UpdateAvatar />\n\n      <Formik\n        initialValues={{\n          name: user.name,\n          email: user.email,\n          password: '',\n          \n        }}\n        validationSchema={EditProfileSchema}\n        onSubmit={(values, actions) => {\n          dispatch(update(values));\n        }}\n      >\n        <StyledForm>\n           \n          <Label>\n            <StyledField id=\"name\" name=\"name\" />\n            <ErrMsg name=\"name\" component=\"p\" />\n          </Label>\n\n          <Label>\n            <StyledField id=\"email\" name=\"email\" type=\"email\" />\n            <ErrMsg name=\"email\" component=\"p\" />\n          </Label>\n\n          <StyledLabel>\n            <Icon name=\"eye\" stroke=\"var(--primaryTextColor)\" />\n            <LastField\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Enter or update your password\"\n            />\n            <ErrMsg name=\"password\" component=\"p\" />\n          </StyledLabel>\n\n          <Button type=\"submit\">Submit</Button>\n        </StyledForm>\n      </Formik>\n    </Container>\n  );\n};\n","import { Container, Name, Avatar, Button } from './UserInfo.styled';\nimport { EditProfile } from 'components/EditProfile';\nimport { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\n\nimport { useAuth } from 'hooks';\n\nconst cloudinaryBaseURL =\n  'https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707503119/';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    padding: '0',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const UserInfo = () => {\n  const { user } = useAuth();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <Container>\n      <Name>{user.name}</Name>\n\n      <Avatar\n        src={cloudinaryBaseURL + user.avatarURL}\n        width=\"32\"\n        height=\"32\"\n        alt=\"user photo\"\n        onClick={openModal}\n      />\n\n      <Modal isOpen={isModalOpen} style={customStyles} contentLabel=\"Modal\">\n        <EditProfile />\n        <Button onClick={closeModal}>\n          <Icon name=\"close\" stroke=\"var(--primaryTextColor)\" />\n        </Button>\n      </Modal>\n    </Container>\n  );\n};\n","export const selectBoards = state => state.boards.boards;\nexport const selectCurrentBoard = state => state.boards.currentBoard;","import axios from 'axios';\nimport toast from 'react-hot-toast';\n\nexport const sendDataEmail = async data => {\n  try {\n    await axios.post('/support', data);\n    toast.success('Successfully sent!');\n  } catch (error) {\n    toast.error('Oops. Something went wrong');\n  }\n};\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const ContainerForModal = styled.div`\n  position: relative;\n  padding: 24px 34px 50px 24px;\n  width: 320px;\n  height: 381px;\n\n  background: var(--headerBgColor);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.05);\n\n  @media only screen and (min-width: 375px) {\n    width: 345px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 400px;\n    height: 355px;\n    padding: 24px;\n  }\n`;\n\nexport const TitleForModal = styled.h3`\n  margin-bottom: 24px;\n\n  text-align: start;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\nexport const StyledFormInModal = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledFieldInModal = styled(Field)`\n  position: relative;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  width: 100%;\n\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  resize: none;\n  opacity: 0.4;\n\n  font-size: 14px;\n  line-height: 1.4;\n\n  color: var(--primaryTextColor);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n\n  transition: opacity var(--transition);\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: 19px;\n    width: 100%;\n  }\n  @media only screen and (min-width: 1440px) {\n    margin-bottom: 14px;\n  }\n`;\n\nexport const StyledTextareaInModal = styled(Field)`\n  position: relative;\n  margin-bottom: 24px;\n  padding: 14px 18px;\n  width: 100%;\n\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  resize: none;\n  opacity: 0.4;\n\n  font-size: 14px;\n  height: calc(30px * 4);\n  line-height: 1.5;\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n\n  color: var(--primaryTextColor);\n\n  transition: opacity var(--transition);\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 100%;\n  }\n`;\n\nexport const ButtonForModal = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 49px;\n  width: 100%;\n\n  background-color: var(--accent);\n  border: 0;\n  border-radius: 8px;\n\n  color: var(--primaryTextColor);\n  font-size: 14px;\n  line-height: 1.5;\n  cursor: pointer;\n\n  transition: background-color var(--transition);\n\n  &:hover,\n  :focus {\n    background-color: var(--btnBgColorHover);\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 100%;\n  }\n`;\n\nexport const ButtonClose = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  padding: 0;\n  border: none;\n  background: none;\n  cursor: pointer;\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  font-size: 12px;\n  font-style: italic;\n  color: red;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { sendDataEmail } from 'services/sendDataEmail';\nimport {\n  ButtonClose,\n  ButtonForModal,\n  ContainerForModal,\n  ErrMsg,\n  Label,\n  StyledFieldInModal,\n  StyledFormInModal,\n  StyledTextareaInModal,\n  TitleForModal,\n} from './SendEmail.styled';\nimport { Icon } from 'components/Icon';\n\nconst initialValues = {\n  emailForSupport: '',\n  textMessage: '',\n};\n\nconst builderSchema = Yup.object().shape({\n  emailForSupport: Yup.string().email().required('This field is required'),\n  textMessage: Yup.string()\n    .min(5, `It's can be up to 5 characters long`)\n    .required(`This field is required`),\n});\n\nexport const SendEmail = ({ onClose }) => {\n  const onSubmit = (data, form) => {\n    sendDataEmail(data);\n    form.resetForm();\n    onClose();\n  };\n\n  return (\n    <ContainerForModal>\n      <TitleForModal>Need help</TitleForModal>\n      <ButtonClose type=\"button\" onClick={onClose}>\n        <Icon\n          stroke=\"var(--primaryTextColor)\"\n          name=\"close\"\n          width=\"18\"\n          height=\"18\"\n        />\n      </ButtonClose>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={builderSchema}\n        onSubmit={onSubmit}\n      >\n        <StyledFormInModal>\n          <Label>\n            <StyledFieldInModal\n              type=\"email\"\n              name=\"emailForSupport\"\n              placeholder=\"Email address\"\n            />\n            <ErrMsg component=\"p\" name=\"emailForSupport\" />\n          </Label>\n\n          <Label>\n            <StyledTextareaInModal\n              rows={4}\n              component=\"textarea\"\n              type=\"text\"\n              name=\"textMessage\"\n              placeholder=\"Comment\"\n            />\n            <ErrMsg component=\"p\" name=\"textMessage\" />\n          </Label>\n\n          <ButtonForModal type=\"submit\">Send</ButtonForModal>\n        </StyledFormInModal>\n      </Formik>\n    </ContainerForModal>\n  );\n};\n","import styled from 'styled-components';\n\nexport const NeedHelpBlock = styled.div`\n  height: 238px;\n  padding: 14px;\n  margin-bottom: 24px;\n  font-size: 12px;\n  border-radius: 8px;\n  background-color: var(--secondaryBgColor);\n\n  p {\n    margin-top: 14px;\n    margin-bottom: 18px;\n    line-height: 1.33333;\n    letter-spacing: 0;\n  }\n`;\n\nexport const NeedHelpBtn = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  background: none;\n  display: flex;\n  align-items: center;\n\n  span {\n    margin-left: 8px;\n    color: var(--primaryTextColor);\n    font-family: 'Poppins-Medium';\n  }\n`;","import { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { SendEmail } from 'components/SendEmail';\nimport { NeedHelpBlock, NeedHelpBtn } from './NeedHelp.styled';\n\nconst customStyles = {\n  content: {\n    width: 'fit-content',\n    height: 'fit-content',\n    padding: 0,\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\n// Modal.setAppElement('#root');\n\nexport const NeedHelp = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <NeedHelpBlock>\n      <picture>\n        <source\n          srcSet=\"\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-1x.webp 1x,\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-2x.webp 2x\n            \"\n        />\n        <img\n          src=\"https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-1x.webp\"\n          width=\"54\"\n          height=\"78\"\n          alt=\"little cute cactus\"\n        />\n      </picture>\n      <p>\n        If you need help with{' '}\n        <span style={{ color: 'var(--accent)' }}>TaskPro</span>, check out our\n        support resources or reach out to our customer support team.\n      </p>\n      <NeedHelpBtn type=\"button\" onClick={openModal}>\n        <Icon\n          name=\"help\"\n          width=\"20\"\n          height=\"20\"\n          stroke=\"var(--primaryTextColor)\"\n        />\n        <span>Need help?</span>\n      </NeedHelpBtn>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Need help modal\"\n      >\n        <SendEmail onClose={closeModal} />\n      </Modal>\n    </NeedHelpBlock>\n  );\n};\n","import styled from 'styled-components';\n\nexport const BoardCreationBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-top: rgba(255, 255, 255, 0.1) solid 1px;\n  border-bottom: rgba(255, 255, 255, 0.1) solid 1px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  margin-bottom: 40px;\n`;\n\nexport const BtnCreate = styled.button`\n  width: 40px;\n  height: 36px;\n  background-color: var(--btnPlus);\n  border: none;\n  border-radius: 6px;\n  stroke: var(--primaryBgColor);\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnPlusHover);\n  }\n`;","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 335px;\n  height: 433px;\n\n  border-radius: 8px;\n\n  background-color: var(--modalBgColor);\n\n  stroke: var(--primaryTextColor);\n\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const ModalTitle = styled.h3`\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Medium';\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--primaryTextColor);\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const FormWrap = styled(Form)`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const Input = styled(Field)`\n  width: 287px;\n  height: 49px;\n  padding: 14px 0 14px 18px;\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Regular';\n  font-size: 14px;\n\n  border: 1px solid var(--btnPlus);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n\n  color: var(--primaryTextColor);\n  background-color: ${({ theme }) =>\n    theme === 'dark' ? ' #1f1f1f' : 'inherit'};\n  opacity: 0.4;\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 14px;\n\n  color: var(--primaryTextColor);\n`;\n\nexport const IconsListWrap = styled.ul`\n  display: flex;\n  gap: 8px;\n\n  margin-bottom: 24px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 0;\n\n  border: none;\n  background-color: inherit;\n\n  width: 18px;\n  height: 18px;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  cursor: pointer;\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:focus,\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const InvisibleInput = styled(Field)`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n\nexport const BackgroundsPallet = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  width: 252px;\n  height: 60px;\n  margin-bottom: 40px;\n`;\n\nexport const LabelPic = styled.label``;\n\nexport const Div = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  transition: transform var(--transition);\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  min-width: 287px;\n  height: 49px;\n\n  padding: 10px 0 11px 0;\n\n  border: 1px solid black;\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--btnText);\n  background-color: var(--btnBgColor);\n  transition: background-color var(--transition);\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnBgColorHover);\n  }\n`;\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n\n  border-radius: 8px;\n\n  background-color: var(--btnText);\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--plusInBtn);\n  }\n`;\n","import { Icon } from 'components/Icon';\nimport * as Yup from 'yup';\nimport {\n  FormWrap,\n  Input,\n  Text,\n  AddBtn,\n  IconWrap,\n  ModalWrap,\n  CloseBtn,\n  ModalTitle,\n  IconsListWrap,\n  InvisibleInput,\n  BackgroundsPallet,\n  Label,\n  LabelPic,\n  Div,\n} from './BoardCreatingModal.styled';\nimport { Formik } from 'formik';\n\nconst iconsArr = [\n  'four-circles',\n  'star',\n  'loading',\n  'puzzle',\n  'container',\n  'lightning',\n  'colors',\n  'hexagon',\n];\n\nconst backgroundsArr = [\n  'noBack',\n  'miklos',\n  'eberhard',\n  'diego',\n  'vino',\n  'vickholius',\n  'romello',\n  'kace',\n  'milad',\n  'gaetan',\n  'florian',\n  'tony',\n  'nicolas',\n  'gabriella',\n  'igor',\n  'zhou',\n];\n\nconst schema = Yup.object({\n  boardTitle: Yup.string().required(),\n  icon: Yup.string().oneOf(iconsArr).required(),\n  background: Yup.string().oneOf(backgroundsArr).required(),\n});\n\nexport const BoardCreatingModal = ({ onClose, title, btnText }) => {\n  // тут має бути прописана логіка отримання даних щодо дошки з redux (для випадка редагування) з подальшим \n  // занесенням у initialValues (у форматі або ?? існуючі стартові двні)\n\n  const initialValues = {\n    boardTitle: '',\n    icon: 'four-circles',\n    background: 'noBack',\n  };\n\n  const onSubmit = values => {\n    // reqFunc(values);\n    onClose();\n  };\n  return (\n    <ModalWrap>\n      <ModalTitle>{title}</ModalTitle>\n      <CloseBtn type=\"button\" onClick={onClose}>\n        <Icon name=\"close\" />\n      </CloseBtn>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={onSubmit}\n      >\n        <FormWrap>\n          <Input type=\"text\" placeholder=\"Title\" name=\"boardTitle\" />\n          <Text>Icons</Text>\n\n          <IconsListWrap>\n            {iconsArr.map(el => (\n              <li key={el}>\n                <Label>\n                  <Icon name={el} />\n                  <InvisibleInput type=\"radio\" name=\"icon\" value={el} />\n                </Label>\n              </li>\n            ))}\n          </IconsListWrap>\n\n          <Text>Backgrounds</Text>\n          <BackgroundsPallet>\n            {backgroundsArr.map(el => {\n              const srcSetPath = ` https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp 1x,\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_56x56.webp 2x`;\n              const srcDefault = `https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp`;\n              return (\n                <li key={el}>\n                  <LabelPic>\n                    <Div>\n                      <picture>\n                        <source srcSet={srcSetPath} />\n                        <img src={srcDefault} alt=\"background example\" />\n                      </picture>\n                    </Div>\n                    <InvisibleInput type=\"radio\" name=\"background\" value={el} />\n                  </LabelPic>\n                </li>\n              );\n            })}\n          </BackgroundsPallet>\n\n          <AddBtn type=\"submit\">\n            <IconWrap>\n              <Icon name=\"plus\" />\n            </IconWrap>{' '}\n            {btnText}\n          </AddBtn>\n        </FormWrap>\n      </Formik>\n    </ModalWrap>\n  );\n};\n","import { useState } from \"react\";\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { BoardCreationBlock, BtnCreate } from \"./BoardCreation.styled\";\nimport { BoardCreatingModal } from \"components/BoardCreatingModal\";\n\nconst customStyles = {\n  content: {\n    width: 'fit-content',\n    height: 'fit-content',\n    padding: 0,\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const BoardCreation = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <BoardCreationBlock>\n      <p>\n        Create a<br />\n        new board\n      </p>\n      <BtnCreate type=\"button\" onClick={openModal}>\n        <Icon name=\"plus\" width=\"20\" height=\"20\" />\n      </BtnCreate>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Creation board modal\"\n      >\n        <BoardCreatingModal\n          onClose={closeModal}\n          title=\"New board\"\n          btnText=\"Create\"\n        />\n      </Modal>\n    </BoardCreationBlock>\n  );\n};","import styled from 'styled-components';\n\nexport const ControlIconsContainer = styled.div`\n  margin-left: auto;\n  display: none;\n  gap: 8px;\n\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\n\nexport const BoardItemContainer = styled.li`\n  height: 61px;\n  margin: 0 -14px 0 -14px;\n  padding: 0 14px 0 14px;\n  display: flex;\n  align-items: center;\n  stroke: var(--primaryTextColor);\n  opacity: 0.5;\n  transition: var(--transition);\n\n  p {\n    margin-left: 4px;\n    font-family: 'Poppins-Medium';\n    font-size: 14px;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--secondaryBgColor);\n    opacity: 1;\n\n    > ${ControlIconsContainer} {\n      display: flex;\n      opacity: 0.5;\n    }\n  }\n`;","import { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { BoardItemContainer, ControlIconsContainer } from './BoardItem.styled';\nimport { BoardCreatingModal } from 'components/BoardCreatingModal';\nimport { useDispatch } from 'react-redux';\nimport { deleteBoard, fetchBoardById } from '../../redux/boards/boardsOperations';\nimport { useSelector } from 'react-redux';\nimport { selectCurrentBoard } from '../../redux/boards/boardsSelectors';\n\nconst customStyles = {\n  content: {\n    width: 'fit-content',\n    height: 'fit-content',\n    padding: 0,\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const BoardItem = ({ board }) => {\n  const dispatch = useDispatch();\n  const currentBoard = useSelector(selectCurrentBoard);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleSelectBoard = (event, BoardId) => {\n    if (event.target.tagName !== 'BUTTON') {\n      dispatch(fetchBoardById(BoardId))\n    }\n  };\n\n  const handleDelete = (BoardId) => {\n    dispatch(deleteBoard(BoardId));\n  }\n\nconsole.log(currentBoard)\n\n  return (\n    <BoardItemContainer\n      onClick={(event) => handleSelectBoard(event, board._id)}\n      selected={currentBoard && currentBoard._id === board._id}\n    >\n      <Icon name={board.icon} width=\"18\" height=\"18\" style={{ opacity: 0.5 }} />\n      <p>{board.title}</p>\n      <ControlIconsContainer>\n        <button type=\"button\" onClick={openModal}>\n          <Icon name=\"pencil\" width=\"16\" height=\"16\" />\n        </button>\n        <button type=\"button\" onClick={() => handleDelete(board._id)}>\n          <Icon name=\"trash\" width=\"16\" height=\"16\" />\n        </button>\n      </ControlIconsContainer>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Edition board modal\"\n      >\n        <BoardCreatingModal\n          onClose={closeModal}\n          title=\"Edit board\"\n          btnText=\"Edit\"\n        />\n      </Modal>\n    </BoardItemContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Logo = styled.div`\n  font-family: 'Poppins-SemiBold';\n  letter-spacing: -0.04em;\n  display: flex;\n  column-gap: 8px;\n  align-items: center;\n  margin-bottom: 70px;\n`;\n\nexport const BoardContainer = styled.div`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n\n  h3 {\n    margin-bottom: 8px;\n    font-size: 12px;\n    font-family: 'Poppins-Regular';\n    opacity: 50%;\n  }\n`;\n\nexport const BoardList = styled.ul`\n  margin-bottom: 40px;\n`;\n\nexport const LogOut = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  background: none;\n  display: flex;\n  align-items: center;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  stroke: var(--accent);\n  transition: var(--transition);\n\n  p {\n    margin-left: 14px;\n    color: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    stroke: var(--hover);\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectBoards } from '../../redux/boards/boardsSelectors.js';\nimport { fetchBoards } from '../../redux/boards/boardsOperations.js';\nimport { logOut } from '../../redux/auth/authOperation.js';\nimport { NeedHelp } from 'components/NeedHelp';\nimport { BoardCreation } from 'components/SidebarBoardCreation';\n\nimport { BoardItem } from 'components/BoardItem';\nimport { Icon } from 'components/Icon';\nimport { Logo, BoardContainer, BoardList, LogOut } from './SideBar.styled';\n\nexport const Sidebar = () => {\n  const dispatch = useDispatch();\n  const boards = useSelector(selectBoards);\n\n  useEffect(() => {\n    dispatch(fetchBoards());\n  }, [dispatch]);\n\n  const handleLogOut = () => {\n    dispatch(logOut());\n  };\n\n  return (\n    <>\n      <div>\n        <Logo>\n          <Icon name=\"logo\" width=\"32\" height=\"32\" />\n          <h2>TaskPro</h2>\n        </Logo>\n        <BoardContainer>\n          <h3>My boards</h3>\n          <BoardCreation />\n          <BoardList>\n            {boards.map(board => (\n              <BoardItem key={board._id} board={board} />\n            ))}\n          </BoardList>\n        </BoardContainer>\n      </div>\n      <div>\n        <NeedHelp />\n        <LogOut type=\"button\" onClick={handleLogOut}>\n          <Icon name=\"login\" width=\"32\" height=\"32\" />\n          <p>Log out</p>\n        </LogOut>\n      </div>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const DrpdwnBtn = styled.button`\n  position: relative;\n  display: flex;\n  gap: 4px;\n  background: none;\n  border: none;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  opacity: var(--secondaryOpacity);\n`;\n\nexport const ThemesList = styled.ul`\n  position: absolute;\n  top: 65%;\n  right: 52%;\n  padding: 18px 44px 18px 18px;\n  border: 1px solid var(--borderInThemeModal);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(17, 17, 17, 0.1);\n  background-color: var(--modalBgColor);\n  visibility: ${({ visibility }) => visibility};\n  opacity: ${({ opacity }) => opacity};\n  transform: ${({ transform }) => transform};\n  transition: 0.3s;\n`;\n\nexport const ThemeItem = styled.li`\n  font-family: 'Poppins-Regular';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  opacity: var(--opacityInThemeModal);\n  cursor: pointer;\n  &:hover,\n  :focus {\n    color: var(--accent);\n  }\n  &:not(:last-child) {\n    margin-bottom: 4px;\n  }\n`;\n","import { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeTheme } from '../../redux/auth/authOperation';\n\nimport { useClickOutside } from 'hooks/useClickOutside';\nimport { Icon } from 'components/Icon';\nimport { DrpdwnBtn, ThemesList, ThemeItem } from './ThemeSwitcher.styled';\n\nexport const ThemeSwitcher = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const menuRef = useRef(null);\n  const dispatch = useDispatch();\n\n  const visibility = isOpen ? 'visible' : 'hidden';\n  const opacity = isOpen ? '1' : '0';\n  const transform = isOpen ? 'translateY(10px)' : 'translateY(0)';\n\n  useClickOutside(menuRef, () => {\n    if (isOpen) {\n      setTimeout(() => setIsOpen(false), 50);\n    }\n  });\n\n  return (\n    <div ref={menuRef}>\n      <DrpdwnBtn type=\"button\" onClick={() => setIsOpen(!isOpen)}>\n        Theme\n        <Icon\n          name=\"chevron-down\"\n          width=\"16\"\n          heigth=\"16\"\n          stroke=\"var(--secondaryTextColor)\"\n        />\n      </DrpdwnBtn>\n      <ThemesList\n        visibility={visibility}\n        opacity={opacity}\n        transform={transform}\n      >\n        <ThemeItem onClick={() => dispatch(changeTheme({ theme: 'light' }))}>\n          Light\n        </ThemeItem>\n        <ThemeItem onClick={() => dispatch(changeTheme({ theme: 'dark' }))}>\n          Dark\n        </ThemeItem>\n        <ThemeItem onClick={() => dispatch(changeTheme({ theme: 'violet' }))}>\n          Violet\n        </ThemeItem>\n      </ThemesList>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\n\nexport const useClickOutside = (ref, callback) => {\n  const handleClick = evnt => {\n    if (ref.current && !ref.current.contains(evnt.target)) {\n      callback();\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClick);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    };\n  });\n};\n","import styled from 'styled-components';\n\nexport const HeaderStyled = styled.header`\n  position: relative;\n\n  max-width: 375px;\n  display: flex;\n  justify-content: space-between;\n\n  background-color: var(--headerBgColor);\n\n  padding: 14px 20px;\n\n  @media (min-width: 768px) {\n    max-width: 768px;\n    padding: 18px 32px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 1180px;\n    justify-content: flex-end;\n    padding: 18px 24px;\n  }\n`;\n\nexport const MenuBtn = styled.button`\n  border: none;\n  background-color: inherit;\n\n  svg {\n    width: 24px;\n    height: 24px;\n\n    @media (min-width: 768px) {\n      width: 32px;\n      height: 32px;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const HeaderWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: baseline;\n  gap: 14px;\n`;\n\nexport const customStylesForModal = {\n  content: {\n    inset: 0,\n    width: 'fit-content',\n    height: 'fit-content',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n","import { UserInfo } from 'components/UserInfo';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { Sidebar } from 'components/SideBar';\nimport { ThemeSwitcher } from 'components/ThemeSwitcher';\nimport { Icon } from 'components/Icon';\nimport {\n  HeaderStyled,\n  HeaderWrapper,\n  MenuBtn,\n  customStylesForModal,\n} from './Header.styled';\n\nexport const Header = () => {\n  const [isMenuOpen, setIsOpenMenu] = useState(false);\n\n  const openMenu = () => {\n    setIsOpenMenu(true);\n  };\n\n  const closeMenu = () => {\n    setIsOpenMenu(false);\n  };\n\n  return (\n    <HeaderStyled>\n      <MenuBtn type=\"button\" onClick={openMenu}>\n        <Icon name=\"menu\" stroke=\"var(--secondaryTextColor)\" />\n      </MenuBtn>\n\n      <HeaderWrapper>\n        <ThemeSwitcher />\n        <UserInfo />\n      </HeaderWrapper>\n      <Modal\n        isOpen={isMenuOpen}\n        onRequestClose={closeMenu}\n        style={customStylesForModal}\n        contentLabel=\"Sidebar\"\n      >\n        <Sidebar />\n      </Modal>\n    </HeaderStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  margin-bottom: 26px;\n\n  @media (max-width: 767px) {\n    padding: 14px 0px;\n  }\n\n  @media (min-width: 768px) {\n    padding: 26px 0px;\n  }\n\n  @media (min-width: 1440px) {\n    padding: 10px 0px;\n  }\n`;\n\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const BoardName = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--primaryTextColor);\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const FilterBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  font-family: 'Poppins-Medium';\n\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  border: none;\n\n  color: var(--secondaryTextColor);\n  background-color: inherit;\n  filter: drop-shadow(0 0 3px var(--primaryBgColor));\n\n  stroke: var(--secondaryTextColor);\n  transition: opacity var(--transition);\n  > svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: var(--accent);\n    stroke: var(--accent);\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 300px;\n  height: 234px;\n\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.05);\n  background: var(--modalBgColor);\n`;\n\nexport const FiltersTytle = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  margin-bottom: 14px;\n  /* margin-left: 24px; */\n  color: var(--primaryTextColor);\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  /* opacity: 0.5; */\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const HorizontalLine = styled.hr`\n  margin-bottom: 14px;\n  stroke-width: 1px;\n  stroke: rgba(22, 22, 22, 0.1);\n`;\n\nexport const LabelName = styled.p`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  margin-bottom: 14px;\n  display: flex;\njustify-content: space-between;\nalign-items: center;\n  /* margin-left: 24px; */\n  color: var(--primaryTextColor);\n`;\n\nexport const ShowPickers = styled.button`\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 400; */\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  text-decoration: underline;\n  /* color: rgba(255, 255, 255, 0.5); */\n`;\n\nexport const PickersList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Picker = styled.label`\n  display: flex;\n  align-items: center;\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 400; */\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  opacity: 0.5;\n  color: var(--secondaryTextColor);\n\n   &:hover,\n  &:focus,\n  &:active {\n    color: var(--secondaryTextColor)\n  }\n`;\n\nexport const PickerName = styled.span`\n  margin-left: 8px;\n`\n","import {\n  FiltersTytle,\n  Picker,\n  PickersList,\n  PickerName,\n  ShowPickers,\n  ModalWrap,\n  HorizontalLine,\n  LabelName,\n  CloseBtn,\n} from './FilterModal.styled';\n\nimport { Icon } from 'components/Icon';\n\nexport const FilterModal = ({ closeModal }) => {\n  return (\n    <ModalWrap>\n      <FiltersTytle>Filters</FiltersTytle>\n      <CloseBtn type=\"button\" onClick={closeModal}>\n        <Icon name=\"close\" />\n      </CloseBtn>\n      <HorizontalLine />\n      <LabelName>\n        Label color\n        <ShowPickers type=\"button\">Show all</ShowPickers>\n      </LabelName>\n      <PickersList>\n        <Picker>\n          <input\n            width=\"14\"\n            height=\"14\"\n            type=\"radio\"\n            name=\"colorPicker\"\n            value=\"Grey\"\n            defaultChecked={true}\n            style={{ opacity: 0.5 }}\n          />\n          <PickerName>Without priority</PickerName>\n        </Picker>\n        <Picker>\n          <input\n            type=\"radio\"\n            name=\"colorPicker\"\n            value=\"Blue\"\n            style={{ opacity: 0.5 }}\n          />\n          <PickerName>Low</PickerName>\n        </Picker>\n        <Picker>\n          <input\n            type=\"radio\"\n            name=\"colorPicker\"\n            value=\"Red\"\n            style={{ opacity: 0.5 }}\n          />\n          <PickerName>Medium</PickerName>\n        </Picker>\n        <Picker>\n          <input\n            type=\"radio\"\n            name=\"colorPicker\"\n            value=\"Green\"\n            style={{ opacity: 0.5 }}\n          />\n          <PickerName>High</PickerName>\n        </Picker>\n      </PickersList>\n    </ModalWrap>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport {\n  FilterBtn,\n  BoardName,\n  Wrap,\n  customStyles,\n} from './HeaderDashboard.styled';\nimport { Icon } from 'components/Icon';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport { FilterModal } from 'components/FilterModal/FilterModal';\n\n\n\nexport const HeaderDashboard = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  const { boardName } = useParams();\n  return (\n    <Wrap>\n      <BoardName>{boardName}</BoardName>\n      <FilterBtn type=\"button\" onClick={openModal}>\n        <Icon name=\"filter\" />\n        Filters{' '}\n      </FilterBtn>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Filters Modal\"\n      >\n        <FilterModal closeModal={closeModal} />\n      </Modal>\n    </Wrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const CardBody = styled.li`\n  border-radius: 8px;\n  width: 335px; // змінити на /* width: 100%; */ коли стане у колонкуи\n  height: 154px;\n  background: var(--primaryBgColor);\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  position: relative;\n  padding: 14px 20px 14px 24px;\n`;\nexport const CardColor = styled.div`\n  position: absolute;\n  border-radius: 4px 0 0 4px;\n  width: 4px;\n  height: 154px;\n  top: 0px;\n  left: 0px;\n  background-color: var(--priority-${({ $priority }) => $priority});\n`;\nexport const CardTitle = styled.h4`\n  text-align: left;\n  font-family: 'Poppins-SemiBold';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin-bottom: 8px;\n`;\nexport const CardDescription = styled.p`\n  text-align: left;\n  font-size: 12px;\n  line-height: 1.33333;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  width: 290px;\n  height: 38px;\n  overflow: hidden; /* скрывает текст, который не помещается в контейнер */\n  text-overflow: ellipsis; /* отображает многоточие для обрезанного текста */\n  margin-bottom: 14px;\n`;\n\nexport const CardSolid = styled.div`\n  border: 1px solid var(--cards-line);\n  margin-bottom: 14px;\n`;\n\nexport const CardDetals = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const CardInformation = styled.div`\n  display: flex;\n`;\n\nexport const Priority = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 14px;\n`;\n\nexport const PriorityDetals = styled.div`\n  display: flex;\n`;\n\nexport const PriorityTitle = styled.p`\n  text-align: left;\n  font-size: 8px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\nexport const PriorityColor = styled.div`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  margin-right: 4px;\n  background-color: var(--priority-${({ $priority }) => $priority});\n`;\n\nexport const PriorityTipe = styled.p`\n  font-size: 10px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const Deadline = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 14px;\n`;\n\nexport const DeadlineTitle = styled.p`\n  text-align: left;\n  font-size: 8px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\n\nexport const DeadlineDate = styled.p`\n  text-align: left;\n  font-size: 10px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\nexport const CardButtons = styled.div`\n  display: flex;\n  gap: 8px;\n  stroke: var(--secondaryTextColor); //не змінюється в темах\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\nexport const Bell = styled.button`\n  stroke: var(--accent); //не змінюється в темах\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  transition: var(--transition);\n  stroke: var(--secondaryTextColor);\n  &:is(:hover, :focus) {\n    stroke: var(--accent);\n  }\n`;\n","import DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nexport function Calendar({ selectedDate, onDateChange }) {\n  const handleDateChange = date => {\n    onDateChange(date);\n  };\n\n  return (\n    <DatePicker\n      selected={selectedDate}\n      onChange={handleDateChange}\n      dateFormat=\"MMMM d\"\n    />\n  );\n}\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Container = styled.div`\n  border-radius: 8px;\n  height: 522px;\n  position: relative;\n  padding: 24px;\n  width: 100%;\n  background: var(--primaryBgColor);\n\n  @media only screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const ModalBody = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const TitleModal = styled.h2`\n  margin-bottom: 24px;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  line-height: 1.5;\n  color: var(--primaryTextColor);\n`;\n\nexport const CloseModal = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 4px;\n\n  color: red;\n  font-size: 12px;\n`;\n\nexport const TitleCard = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 14px;\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n\nexport const StyledDescription = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  padding-top: 14px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 154px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 24px;\n  transition: var(--transition);\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const LabelColorStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\n\nexport const StyleRadioButton = styled.div`\n  height: 18px;\n  display: flex;\n  gap: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const DeadlineStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\n\nexport const AddButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  background: var(--btnPlus);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnBgColorHover);\n  }\n  cursor: pointer;\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: var(--btnText);\n  margin-right: 8px;\n  stroke: var(--plusInBtn);\n`;\n\nexport const AddCardButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 335px;\n  height: 56px;\n  background: var(--btnPlus);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const StyledRadioGroup = styled.div`\n  height: 18px;\n  display: flex;\n  gap: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const RadioButton = styled(Field)`\n  display: none;\n`;\n\nexport const RadioLabel = styled.label`\n  border-radius: 50%;\n  width: 14px;\n  height: 14px;\n  background-color: var(--priority-${({ $priority }) => $priority});\n  transition: var(--transition);\n  cursor: pointer;\n  box-sizing: border-box;\n  position: relative;\n\n  &.checked {\n    &::after {\n      content: '';\n      position: absolute;\n      width: 12px;\n      height: 12px;\n      top: 1px;\n      left: 1px;\n      border-radius: 50%;\n      border: 2px solid var(--primaryBgColor);\n    }\n  }\n`;\n","import { nanoid } from '@reduxjs/toolkit';\nimport {\n  RadioButton,\n  RadioLabel,\n  StyledRadioGroup,\n} from './RadioInputs.styled';\nimport { useState } from 'react';\n\nexport const RadioInputs = ({ defaultChecked }) => {\n  const list = ['low', 'medium', 'high', 'without'];\n  const [currValue, setCurrValue] = useState(defaultChecked);\n\n  const handleInput = ({ target: { value } }) => {\n    setCurrValue(value);\n  };\n\n  return (\n    <StyledRadioGroup>\n      {list.map(item => (\n        <RadioLabel\n          key={nanoid()}\n          $priority={item}\n          className={currValue === item ? 'checked' : ''}\n        >\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value={item}\n            checked={currValue === item}\n            onChange={handleInput}\n          />\n        </RadioLabel>\n      ))}\n    </StyledRadioGroup>\n  );\n};\n","import { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Calendar } from 'components/Calendar';\nimport { Icon } from 'components/Icon';\n\nimport {\n  ModalBody,\n  Container,\n  TitleModal,\n  StyledDescription,\n  CloseModal,\n  TitleCard,\n  LabelColorStyle,\n  DeadlineStyle,\n  AddButton,\n  StylePlus,\n  StyledForm,\n  ErrMsg,\n  Label,\n} from './EditCardModal.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { editCard } from '../../redux/cards/cardsOperations.js';\nimport { RadioInputs } from 'components/RadioInputs/RadioInputs.jsx';\n\nconst priority = ['without', 'low', 'medium', 'high'];\n\nconst formCardSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(3, `It's can be up to 3 characters long`)\n    .max(100, 'Too Long!')\n    .required(`This field is required.`),\n  text: Yup.string()\n    .min(10, `It's can be up to 10 characters long`)\n    .max(500, 'Too Long!')\n    .required(`This field is required.`),\n  priority: Yup.string().oneOf(priority),\n  deadline: Yup.date(),\n});\n\nexport default function EditCardModal({ card, onClose }) {\n  const { _id: cardId, title, text, deadline, priority } = card;\n  const [selectedDate, setSelectedDate] = useState(deadline);\n  const dispatch = useDispatch();\n\n  const onSubmit = values => {\n    dispatch(editCard({ values, cardId }));\n    onClose();\n  };\n\n  return (\n    <Container>\n      <ModalBody>\n        <TitleModal>Edit card</TitleModal>\n        <CloseModal>\n          <button type=\"button\" onClick={onClose}>\n            <Icon\n              name=\"close\"\n              width=\"18\"\n              height=\"18\"\n              stroke=\"var(--primaryTextColor)\"\n            />\n          </button>\n        </CloseModal>\n        <Formik\n          initialValues={{\n            title,\n            text,\n            priority,\n            deadline: selectedDate,\n          }}\n          validationSchema={formCardSchema}\n          onSubmit={onSubmit}\n        >\n          {({ handleSubmit, setFieldValue }) => (\n            <StyledForm onSubmit={handleSubmit}>\n              <TitleCard type=\"text\" name=\"title\" placeholder=\"Title\" />\n              <ErrMsg component=\"p\" name=\"title\" />\n              <Label>\n                <StyledDescription\n                  rows={4}\n                  component=\"textarea\"\n                  name=\"text\"\n                  placeholder=\"Description\"\n                />\n                <ErrMsg component=\"p\" name=\"text\" />\n              </Label>\n              <LabelColorStyle id=\"colorCard-radio-group\">\n                Label color\n              </LabelColorStyle>\n              <RadioInputs defaultChecked={priority} />\n              <DeadlineStyle>Deadline</DeadlineStyle>\n              <Calendar\n                selectedDate={selectedDate}\n                onDateChange={date => {\n                  setSelectedDate(date);\n                  setFieldValue('deadline', date);\n                }}\n              />\n              <AddButton type=\"submit\">\n                <StylePlus>\n                  <Icon name=\"plus\" width=\"14\" height=\"14\" />\n                </StylePlus>\n                <p>Edit</p>\n              </AddButton>\n            </StyledForm>\n          )}\n        </Formik>\n      </ModalBody>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const MoveList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border-radius: 8px;\n  background-color: var(--secondaryBgColor);\n  padding: 10px;\n`;\n","import styled from 'styled-components';\n\nexport const MoveCardItemButtonStyled = styled.button`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  border: none;\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  cursor: pointer;\n`;\n","import { useDispatch } from 'react-redux';\nimport { MoveCardItemButtonStyled } from './MoveCardItem.styled';\nimport { chengeColumnsCard } from '../../redux/cards/cardsOperations';\n\nexport const MoveCardItem = ({ column, cardId }) => {\n  const dispatch = useDispatch();\n  const { _id, title } = column;\n  const handleMoveCard = () => {\n    dispatch(chengeColumnsCard({ cardId, toColumnId: _id }));\n  };\n  return (\n    <li>\n      <MoveCardItemButtonStyled onClick={handleMoveCard}>\n        {title}\n      </MoveCardItemButtonStyled>\n    </li>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { MoveList } from './MoveCardDropdown.styled';\nimport { MoveCardItem } from 'components/MoveCardItem/MoveCardItem';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport const MoveCardDropdown = ({ currColumnId, cardId }) => {\n  const { columns } = useSelector(state => state.columns);\n  const filteredColumns = columns?.filter(({ _id }) => _id !== currColumnId);\n\n  return (\n    <MoveList>\n      {filteredColumns.map(item => (\n        <MoveCardItem key={nanoid()} column={item} cardId={cardId} />\n      ))}\n    </MoveList>\n  );\n};\n","import { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\n\nimport {\n  CardBody,\n  CardDetals,\n  Priority,\n  PriorityDetals,\n  CardColor,\n  CardTitle,\n  CardDescription,\n  CardSolid,\n  PriorityTitle,\n  PriorityTipe,\n  PriorityColor,\n  Deadline,\n  DeadlineTitle,\n  DeadlineDate,\n  CardButtons,\n  CardInformation,\n  Bell,\n  Button,\n} from './Card.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteCard } from '../../redux/cards/cardsOperations';\nimport EditCardModal from 'components/EditCardModal/EditCardModal';\nimport { MoveCardDropdown } from 'components/MoveCardDropdown/MoveCardDropdown';\n\nexport default function Card({ card }) {\n  const [modalCardIsOpen, setmodalCardIsOpen] = useState(false);\n  const [isOpenMoveCardModal, setIsOpenMoveCardModal] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    _id: cardId,\n    title,\n    text,\n    deadline,\n    priority,\n    column: { _id: columnId },\n  } = card;\n  const dateDeadline = new Date(deadline);\n  const formatedDate = `${dateDeadline.getDate()}/${\n    dateDeadline.getMonth() + 1\n  }/${dateDeadline.getFullYear()}`;\n  const cardTextDescription = text.substring(0, 90) + '...';\n\n  const openCardModal = () => {\n    setmodalCardIsOpen(true);\n  };\n\n  const closeCardModal = () => {\n    setmodalCardIsOpen(false);\n  };\n\n  const handleDeleteCard = () => {\n    dispatch(deleteCard({ cardId }));\n  };\n\n  const hendleMoveCardModalOpen = () => {\n    setIsOpenMoveCardModal(true);\n  };\n\n  const hendleMoveCardModalClose = () => {\n    setIsOpenMoveCardModal(false);\n  };\n\n  return (\n    <CardBody>\n      <CardColor $priority={priority}></CardColor>\n      <CardTitle>{title}</CardTitle>\n      <CardDescription>{cardTextDescription}</CardDescription>\n      <CardSolid></CardSolid>\n      <CardDetals>\n        <CardInformation>\n          <Priority>\n            <PriorityTitle>Priority</PriorityTitle>\n            <PriorityDetals>\n              <PriorityColor $priority={priority}></PriorityColor>\n              <PriorityTipe>{priority}</PriorityTipe>\n            </PriorityDetals>\n          </Priority>\n          <Deadline>\n            <DeadlineTitle>Deadline</DeadlineTitle>\n            <DeadlineDate>{formatedDate}</DeadlineDate>\n          </Deadline>\n        </CardInformation>\n        <CardButtons>\n          <Bell type=\"button\">\n            <Icon name=\"bell\" width=\"16\" height=\"16\" />\n          </Bell>\n          <Button type=\"button\" onClick={hendleMoveCardModalOpen}>\n            <Icon name=\"arrow-in-circle\" width=\"16\" height=\"16\" />\n          </Button>\n          <Button type=\"button\" onClick={openCardModal}>\n            <Icon name=\"pencil\" width=\"16\" height=\"16\" />\n          </Button>\n          <Button type=\"button\" onClick={handleDeleteCard}>\n            <Icon name=\"trash\" width=\"16\" height=\"16\" />\n          </Button>\n        </CardButtons>\n      </CardDetals>\n      <Modal\n        isOpen={modalCardIsOpen}\n        onRequestClose={closeCardModal}\n        className={'modal-content'}\n        overlayClassName={'modal-overlay'}\n      >\n        <EditCardModal card={card} onClose={closeCardModal} />\n      </Modal>\n      <Modal\n        isOpen={isOpenMoveCardModal}\n        onRequestClose={hendleMoveCardModalClose}\n        className={'modal-content'}\n        overlayClassName={'modal-overlay'}\n      >\n        <MoveCardDropdown currColumnId={columnId} cardId={cardId} />\n      </Modal>\n    </CardBody>\n  );\n}\n","import styled from 'styled-components';\n\nexport const HeadWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 335px;\n  height: 56px;\n\n  padding: 17px 20px;\n\n  border-radius: 8px;\n\n  background-color: var(--extraBgColor);\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const CardList = styled.ul`\n  > li:not(:last-of-type) {\n    margin-bottom: 10px;\n  }\n  border-radius: 12px;\n\n  @media (min-width: 768px) {\n  }\n\n  @media (min-width: 1440px) {\n  }\n\n  overflow: auto;\n  padding: 0;\n\n  &::-webkit-scrollbar {\n    width: 8px; /* ширина скролбару */\n  }\n\n  &::-webkit-scrollbar-track {\n    background: var(--scroll-col); /* колір фону всієї доріжки скролбару */\n    border-radius: 12px; // заокруглення доріжки скролу\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: var(--scroll-col-bg); // колір самого скролу\n    border-radius: 12px; /* заокруглення самого скролу */\n\n    &:hover {\n      background-color: var(\n        --scroll-col-bg-hover\n      ); // колір самого скролу при наведенні\n    }\n  }\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const IconedBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  border: none;\n  background-color: inherit;\n\n  stroke: var(--secondaryTextColor);\n  transition: opacity var(--transition);\n\n  > svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    stroke: var(--accent);\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  width: 335px;\n  height: 56px;\n\n  padding: 10px 0 11px 0;\n\n  border: none;\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--btnText);\n  background-color: var(--btnBgColor);\n  transition: background-color var(--transition);\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnBgColorHover);\n  }\n`;\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n\n  border-radius: 8px;\n\n  background-color: var(--btnText);\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--plusInBtn);\n  }\n`;\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n// comment\n\nexport const Container = styled.div`\n  border-radius: 8px;\n  height: 522px;\n  position: relative;\n  padding: 24px;\n  width: 100%;\n  background: var(--primaryBgColor);\n\n  @media only screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const ModalBody = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const TitleModal = styled.h2`\n  margin-bottom: 24px;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  line-height: 1.5;\n  color: var(--primaryTextColor);\n`;\n\nexport const CloseModal = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 4px;\n\n  color: red;\n  font-size: 12px;\n`;\n\nexport const TitleCard = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 14px;\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n\nexport const StyledDescription = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  padding-top: 14px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 154px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 24px;\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const LabelColorStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\n\nexport const StyleRadioButton = styled.div`\n  height: 18px;\n  display: flex;\n  gap: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const RadioButton = styled(Field)`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n`;\nexport const RadioButtonBlu = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: #8fa1d0;\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid #8fa1d0;\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const RadioButtonRed = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: #e09cb5;\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid #e09cb5;\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const RadioButtonGreen = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: #bedbb0;\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid #bedbb0;\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const RadioButtonGrey = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: rgba(22, 22, 22, 0.3);\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid rgba(22, 22, 22, 0.3);\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const DeadlineStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  margin-bottom: 4px;\n`;\n\nexport const AddButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  background: var(--btnPlus);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnBgColorHover);\n  }\n  cursor: pointer;\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: var(--btnText);\n  margin-right: 8px;\n  stroke: var(--plusInBtn);\n`;\n\nexport const AddCardButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 335px;\n  height: 56px;\n  background: var(--btnPlus);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Calendar } from 'components/Calendar';\nimport { Icon } from 'components/Icon';\n\nimport {\n  ModalBody,\n  Container,\n  TitleModal,\n  StyledDescription,\n  CloseModal,\n  TitleCard,\n  LabelColorStyle,\n  DeadlineStyle,\n  AddButton,\n  StylePlus,\n  StyledForm,\n  ErrMsg,\n  Label,\n} from './AddCardModal.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { addCard } from '../../redux/cards/cardsOperations.js';\nimport { RadioInputs } from 'components/RadioInputs/RadioInputs.jsx';\n\nconst priority = ['without', 'low', 'medium', 'high'];\n\nconst formCardSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(3, `It's can be up to 3 characters long`)\n    .max(100, 'Too Long!')\n    .required(`This field is required.`),\n  text: Yup.string()\n    .min(10, `It's can be up to 10 characters long`)\n    .max(500, 'Too Long!')\n    .required(`This field is required.`),\n  priority: Yup.string().oneOf(priority),\n  deadline: Yup.date(),\n});\n\nexport default function AddCardModal({ title, btnText, onClose, columnId }) {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const dispatch = useDispatch();\n\n  const onSubmit = values => {\n    dispatch(addCard({ values, columnId }));\n    onClose();\n  };\n\n  return (\n    <Container>\n      <ModalBody>\n        <TitleModal>{title}</TitleModal>\n        <CloseModal>\n          <button type=\"button\" onClick={onClose}>\n            <Icon\n              name=\"close\"\n              width=\"18\"\n              height=\"18\"\n              stroke=\"var(--primaryTextColor)\"\n            />\n          </button>\n        </CloseModal>\n        <Formik\n          initialValues={{\n            title: '',\n            text: '',\n            priority: 'without',\n            deadline: selectedDate,\n          }}\n          validationSchema={formCardSchema}\n          onSubmit={onSubmit}\n        >\n          {({ handleSubmit, setFieldValue }) => (\n            <StyledForm onSubmit={handleSubmit}>\n              <TitleCard type=\"text\" name=\"title\" placeholder=\"Title\" />\n              <ErrMsg component=\"p\" name=\"title\" />\n              <Label>\n                <StyledDescription\n                  rows={4}\n                  component=\"textarea\"\n                  name=\"text\"\n                  placeholder=\"Description\"\n                />\n                <ErrMsg component=\"p\" name=\"text\" />\n              </Label>\n              <LabelColorStyle id=\"colorCard-radio-group\">\n                Label color\n              </LabelColorStyle>\n              <RadioInputs defaultChecked=\"without\" />\n              <DeadlineStyle>Deadline</DeadlineStyle>\n              <Calendar\n                selectedDate={selectedDate}\n                onDateChange={date => {\n                  setSelectedDate(date);\n                  setFieldValue('deadline', date);\n                }}\n              />\n              <AddButton type=\"submit\">\n                <StylePlus>\n                  <Icon name=\"plus\" width=\"14\" height=\"14\" />\n                </StylePlus>\n                <p>{btnText}</p>\n              </AddButton>\n            </StyledForm>\n          )}\n        </Formik>\n      </ModalBody>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const HeadWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 335px;\n  height: 56px;\n\n  margin-bottom: 14px;\n  padding: 17px 20px;\n\n  border-radius: 8px;\n\n  background-color: var(--extraBgColor);\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const IconedBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  border: none;\n  background-color: inherit;\n\n  stroke: var(--secondaryTextColor);\n  transition: opacity var(--transition);\n\n  > svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    stroke: var(--accent);\n  }\n`;\n","import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const customModalStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    // backgroundColor: '#151515',\n    backgroundColor: 'var(--modalBgColor)',\n  },\n//   overlay: {\n//     backgroundColor: 'rgba(0,0,0,0.5)',\n//   },\n};\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid rgba(190, 219, 176, 0.5);\n  border-radius: 8px;\n  width: 350px;\n  height: 221px;\n  /* background: #151515; */\n  background: var(--modalBgColor);\n  gap: 24px;\n`;\n\nexport const StyledField = styled(Field)`\n  font: inherit;\n  cursor: pointer;\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 400; */\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  /* border: 1px solid #bedbb0; */\n  border: 1px solid var(--btnPlus);\n  border-radius: 8px;\n  width: 302px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  /* background: #1f1f1f; */\n  background: var(--secondaryBgColor);\n  opacity: 0.4;\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  /* opacity: 0.5; */\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const Label = styled.label`\n  font-family: 'Poppins-Medium';\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 500; */\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  /* color: #fff; */\n  color: var(--primaryTextColor);\n`;\n\nexport const Button = styled.button`\n  font: inherit;\n  cursor: pointer;\n  border-radius: 8px;\n  width: 302px;\n  height: 49px;\n  /* background: #bedbb0; */\n  background: var(--btnPlus);\n  font-size: 20px;\n`;\n\nexport const ButtonText = styled.span`\n  font-family: 'Poppins-Medium';\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 500; */\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  /* color: #161616; */\n  color: var(--headerBgColor);\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  color: #f5530d;\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: black;\n  margin-right: 8px;\n  stroke: white;\n\n`;","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icon';\nimport {\n  Button,\n  ButtonText,\n  CloseBtn,\n  Label,\n  StylePlus,\n  StyledField,\n  StyledForm,\n} from './EditColumnFormik.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { editColumn } from '../../redux/columns/columnsOperations.js';\n\nconst addColumnFormSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'Too short!').required('This field is required!'),\n});\n\nexport const EditColumnFormik = ({ title, columnId, onClose }) => {\n  const dispatch = useDispatch();\n  const handleSubmit = body => {\n    dispatch(editColumn({ body, columnId }));\n  };\n  return (\n    <>\n      <Label>Edit column</Label>\n      <CloseBtn\n        type=\"button\"\n        onClick={onClose}\n        style={{ stroke: 'var(--primaryTextColor)' }}\n      >\n        <Icon name=\"close\" width=\"18\" height=\"18\" />\n      </CloseBtn>\n      <Formik\n        initialValues={{\n          title,\n        }}\n        validationSchema={addColumnFormSchema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <StyledField type=\"text\" name=\"title\" placeholder=\"Title\" />\n          <Button type=\"submit\">\n            <StylePlus>\n              <Icon name=\"plus\" width=\"14\" height=\"14\" />\n            </StylePlus>\n            <ButtonText>Edit</ButtonText>\n          </Button>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n","import { Icon } from 'components/Icon';\nimport { HeadWrap, IconedBtn, Title, Wrap } from './ColumnHead.styled';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport { EditColumnFormik } from 'components/EditColumnFormik';\nimport { useDispatch } from 'react-redux';\nimport { deleteColumn } from '../../redux/columns/columnsOperations';\n\nexport const ColumnHead = ({ title, columnId }) => {\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const dispatch = useDispatch();\n  const customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      transform: 'translate(-50%, -50%)',\n      boxShadow: '0px 4px 16px 0px #1616160D',\n      padding: 0,\n    },\n    overlay: {\n      background: 'rgba(0,0,0,0.5)',\n    },\n  };\n\n  const handleModalOpen = () => {\n    setIsOpenModal(true);\n  };\n\n  const handleModalClose = () => {\n    setIsOpenModal(false);\n  };\n\n  const handleDeleteColumn = () => {\n    dispatch(deleteColumn({ columnId }));\n  };\n\n  return (\n    <>\n      <HeadWrap>\n        <Title>{title}</Title>\n        <Wrap>\n          <IconedBtn type=\"button\" onClick={handleModalOpen}>\n            <Icon name=\"pencil\" />\n          </IconedBtn>\n          <IconedBtn type=\"button\" onClick={handleDeleteColumn}>\n            <Icon name=\"trash\" />\n          </IconedBtn>\n        </Wrap>\n      </HeadWrap>\n      <Modal\n        isOpen={isOpenModal}\n        onRequestClose={handleModalClose}\n        style={customStyles}\n        contentLabel=\"Column Edit Modal\"\n        ariaHideApp={false}\n      >\n        <EditColumnFormik\n          title={title}\n          columnId={columnId}\n          onClose={handleModalClose}\n        />\n      </Modal>\n    </>\n  );\n};\n","import { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport Card from 'components/Card/Card';\nimport { AddBtn, CardList, IconWrap } from './Column.styled';\nimport AddCardModal from 'components/AddCardModal/AddCardModal';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { ColumnHead } from 'components/ColumnHead/ColumnHead';\n\nexport const Column = ({ columnId, title }) => {\n  const [modalCardIsOpen, setmodalCardIsOpen] = useState(false);\n  const { cards } = useSelector(state => state.cards);\n  const filtredCards = cards?.filter(({ column: { _id } }) => _id === columnId);\n\n  const customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      transform: 'translate(-50%, -50%)',\n      boxShadow: '0px 4px 16px 0px #1616160D',\n      padding: 0,\n    },\n    overlay: {\n      background: 'rgba(0,0,0,0.5)',\n    },\n  };\n\n  const openCardModal = () => {\n    setmodalCardIsOpen(true);\n  };\n\n  const closeCardModal = () => {\n    setmodalCardIsOpen(false);\n  };\n\n  return (\n    <>\n      <ColumnHead title={title} columnId={columnId} />\n      <CardList>\n        {filtredCards.map(card => (\n          <Card key={nanoid()} card={card} />\n        ))}\n      </CardList>\n      <AddBtn type=\"button\" onClick={openCardModal}>\n        <IconWrap>\n          <Icon name=\"plus\" />\n        </IconWrap>{' '}\n        Add another card\n      </AddBtn>\n      <Modal\n        isOpen={modalCardIsOpen}\n        onRequestClose={closeCardModal}\n        style={customStyles}\n        contentLabel=\"Card Add Modal\"\n        ariaHideApp={false}\n      >\n        <AddCardModal\n          columnId={columnId}\n          title={'Add card'}\n          btnText={'Add'}\n          onClose={closeCardModal}\n        />\n      </Modal>\n    </>\n  );\n};\n","import styled from 'styled-components';\n// import 'react-perfect-scrollbar/dist/css/styles.css';\n\nexport const Container = styled.div`\n  max-width: 347px;\n\n  @media (min-width: 768px) {\n    max-width: 718px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 1128px;\n  }\n\n  &.scrollbar-container {\n    height: auto;\n  }\n  overflow: auto;\n  padding: 0 0 8px;\n\n  &::-webkit-scrollbar {\n    width: 12px; /* ширина скролбару */\n    height: 12px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: var(--scroll); /* колір фону всієї доріжки скролбару */\n    border-radius: 12px; // заокруглення доріжки скролу\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: var(--scrollBg); // колір самого скролу\n    border-radius: 12px; /* заокруглення самого скролу */\n\n    &:hover {\n      background-color: var(\n        --scroll-bg-hover\n      ); // колір самого скролу при наведенні\n    }\n  }\n`;\n\nexport const customStyles = { \n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const ColumnList = styled.ul`\n  display: flex;\n  gap: 18px;\n`;\n\nexport const ColumnItem = styled.li`\n  display: grid;\n  grid-template-rows: 56px minmax(0, 1fr) 56px;\n  gap: 14px;\n  width: 347px;\n  height: calc(90vh - 80px);\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  gap: 18px;\n  align-items: flex-start;\n  padding: 0 0 8px;\n`;\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  min-width: 334px;\n  width: 334px;\n\n  padding: 14px 78px;\n\n  border: none;\n  border-radius: 8px;\n\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--secondaryTextColor);\n  background-color: var(--extraBgColor);\n\n  opacity: 1;\n  transition: color background-color var(--transition);\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: var(--btnText);\n    background-color: var(--btnBgColor);\n  }\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n`;\n\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n  border: 1px solid black;\n  border-radius: 8px;\n  stroke: var(--extraBgColor);\n\n  background-color: var(--squareIconColor);\n  transition: background-color stroke var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnText);\n    stroke: var(--plusInBtn);\n  }\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--extraBgColor);\n  }\n`;\n","import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid rgba(190, 219, 176, 0.5);\n  border-radius: 8px;\n  width: 350px;\n  height: 221px;\n  /* background: #151515; */\n  background: var(--modalBgColor);\n  gap: 24px;\n`;\n\nexport const StyledField = styled(Field)`\n  font: inherit;\n  cursor: pointer;\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 400; */\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  /* border: 1px solid #bedbb0; */\n  border: 1px solid var(--btnPlus);\n  border-radius: 8px;\n  width: 302px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  /* background: #1f1f1f; */\n  background: var(--secondaryBgColor);\n  opacity: 0.4;\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  /* opacity: 0.5; */\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const Label = styled.label`\n  font-family: 'Poppins-Medium';\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 500; */\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  /* color: #fff; */\n  color: var(--primaryTextColor);\n`;\n\nexport const Button = styled.button`\n  font: inherit;\n  cursor: pointer;\n  border-radius: 8px;\n  width: 302px;\n  height: 49px;\n  /* background: #bedbb0; */\n  background: var(--btnPlus);\n  font-size: 20px;\n`;\n\nexport const ButtonText = styled.span`\n  font-family: 'Poppins-Medium';\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 500; */\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  /* color: #161616; */\n  color: var(--headerBgColor);\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  color: #f5530d;\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: black;\n  margin-right: 8px;\n  stroke: white;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icon';\nimport {\n  Button,\n  ButtonText,\n  CloseBtn,\n  Label,\n  StylePlus,\n  StyledField,\n  StyledForm,\n} from './AddColumnFormik.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { addColumn } from '../../redux/columns/columnsOperations.js';\n\nconst addColumnFormSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'Too short!').required('This field is required!'),\n});\n\nexport const AddColumnFormik = ({ boardId, onClose }) => {\n  const dispatch = useDispatch();\n  const handleSubmit = body => {\n    dispatch(addColumn({ body, boardId }));\n  };\n  return (\n    <>\n      <Label>Add column</Label>\n      <CloseBtn\n        type=\"button\"\n        onClick={onClose}\n        style={{ stroke: 'var(--primaryTextColor)' }}\n      >\n        <Icon name=\"close\" width=\"18\" height=\"18\" />\n      </CloseBtn>\n      <Formik\n        initialValues={{\n          title: '',\n        }}\n        validationSchema={addColumnFormSchema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <StyledField type=\"text\" name=\"title\" placeholder=\"Title\" />\n          <Button type=\"submit\">\n            <StylePlus>\n              <Icon name=\"plus\" width=\"14\" height=\"14\" />\n            </StylePlus>\n            <ButtonText>Add</ButtonText>\n          </Button>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n","import { Column } from 'components/Column';\nimport {\n  IconWrap,\n  AddBtn,\n  Wrap,\n  ColumnItem,\n  Container,\n  ColumnList,\n  customStyles,\n} from './Board.styled';\nimport { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { AddColumnFormik } from 'components/AddColumnFormik/AddColumnFormik';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport const Board = () => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const { columns } = useSelector(state => state.columns);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n  return (\n    <>\n      <Container>\n        <Wrap>\n          <ColumnList>\n            {columns.map(({ _id, title }) => {\n              return (\n                <ColumnItem key={nanoid()}>\n                  <Column title={title} columnId={_id} />\n                </ColumnItem>\n              );\n            })}\n          </ColumnList>\n          <AddBtn type=\"button\" onClick={openModal}>\n            <IconWrap>\n              <Icon name=\"plus\" />\n            </IconWrap>{' '}\n            Add another column\n          </AddBtn>\n        </Wrap>\n      </Container>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Column Edit Modal\"\n        ariaHideApp={false}\n      >\n        <AddColumnFormik onClose={closeModal} />\n      </Modal>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StartText = styled.p`\n  position: relative;\n  bottom: 50%;\n  transform: translateY(-50%);\n  min-width: 280px;\n\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  line-height: 1.33;\n\n  color: var(--secondaryTextColor);\n\n  @media (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media (min-width: 768px) {\n    line-height: 1.29;\n    width: 486px;\n    margin: auto;\n  }\n`;\n\nexport  const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const BoardCreationBtn = styled.button`\n  margin: 0;\n  padding: 0;\n\n  border: none;\n  outline: none;\n\n  background-color: inherit;\n  color: var(--btnPlus);\n  cursor: pointer;\n  transition: color var(--transition);\n  &:hover,\n  &:focus {\n    color: var(--btnPlusHover);\n  }\n`;\n","// import { StartText, BoardCreationBtn } from './MainDashboard.styled';\n// import { useParams } from 'react-router-dom';\nimport { Board } from 'components/Board';\nimport { customStyles } from './MainDashboard.styled';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { BoardCreatingModal } from 'components/BoardCreatingModal';\n\nexport const MainDashboard = () => {\n  // const { boardName } = useParams();\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  // const openModal = () => {\n  //   setIsOpen(true);\n  // };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      {/* {boardName ? (\n        <Board />\n      ) : (\n        <StartText>\n          Before starting your project, it is essential{' '}\n          <BoardCreationBtn type=\"button\" onClick={openModal}>\n            to create a board\n          </BoardCreationBtn>{' '}\n          to visualize and track all the necessary tasks and milestones. This\n          board serves as a powerful tool to organize the workflow and ensure\n          effective collaboration among team members.\n        </StartText>\n      )} */}\n      <Board />\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Board Creation Modal\"\n        ariaHideApp={false}\n      >\n        <BoardCreatingModal\n          onClose={closeModal}\n          title={'New board'}\n          btnText={'Create'}\n          reqFunc={values => console.log(values)}\n        />\n      </Modal>\n    </>\n  );\n};\n","import { HeaderDashboard } from 'components/HeaderDashboard';\nimport { MainDashboard } from 'components/MainDashboard';\n\nexport const ScreensPage = () => {\n  return (\n    <>\n      <HeaderDashboard />\n      <MainDashboard />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SidebarWrapper = styled.aside`\n  @media screen and (max-width: 1179px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 1180px) {\n    padding: 14px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    grid-column: 1 / 2;\n    grid-row-start: 1;\n    grid-row-end: 3;\n  }\n`;\n\nexport const Main = styled.main`\n  grid-column: 1 / 2;\n  grid-row: 2 / 3;\n  padding: 10px 24px;\n  height: 100vh;\n  background-color: var(--secondaryBgColor);\n  background-image: url(${props => props.$backgroundImg}_375x812.webp);\n  background-repeat: no-repeat;\n  max-width: 375px;\n  height: auto;\n  background-position: center;\n  background-size: cover;\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${props => props.$backgroundImg}_750x1624.webp);\n  }\n  @media (min-width: 768px) {\n    background-image: url(${props => props.$backgroundImg}_768x956.webp);\n    max-width: 768px;\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${props => props.$backgroundImg}_1536x1912.webp);\n    }\n  }\n\n  @media (min-width: 1180px) {\n    background-image: url(${props => props.$backgroundImg}_1180x770.webp);\n    max-width: 1180px;\n    grid-column: 2 / 3;\n    grid-row: 2 / 3;\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${props => props.$backgroundImg}_2360x1540.webp);\n    }\n  }\n`;\n","import { Header } from 'components/Header';\nimport { Sidebar } from 'components/SideBar';\nimport { ScreensPage } from 'components/ScreensPage';\nimport { Main, SidebarWrapper } from './HomePage.styled';\n\nexport default function HomePage() {\n  const baseUrl =\n    'https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/';\n  const backgroundImg = 'diego';\n  const backgroundImgUrl = baseUrl + backgroundImg;\n  return (\n    <>\n      <Header />\n      <SidebarWrapper>\n        <Sidebar />\n      </SidebarWrapper>\n      <Main $backgroundImg={backgroundImgUrl}>\n        <ScreensPage />\n      </Main>\n    </>\n  );\n}\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Name","_templateObject2","Avatar","_templateObject3","Button","_templateObject4","Title","StyledForm","Form","StyledField","Field","LastField","_templateObject5","_templateObject6","ErrMsg","ErrorMessage","_templateObject7","Label","_templateObject8","StyledLabel","_templateObject9","ContainerAvatar","Input","UpdateAvatar","user","useAuth","dispatch","useDispatch","filePicker","useRef","_jsxs","children","_jsx","src","avatarURL","width","height","alt","onClick","current","click","Icon","name","stroke","type","ref","onChange","event","selectedFile","target","files","updateAvatar","accept","EditProfileSchema","Yup","shape","min","max","matches","required","email","password","EditProfile","Formik","initialValues","validationSchema","onSubmit","values","actions","update","id","component","placeholder","customStyles","content","top","left","right","bottom","padding","transform","boxShadow","overlay","background","UserInfo","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","Modal","isOpen","style","contentLabel","selectBoards","state","boards","selectCurrentBoard","currentBoard","sendDataEmail","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","axios","toast","t0","stop","_x","apply","arguments","ContainerForModal","TitleForModal","StyledFormInModal","StyledFieldInModal","StyledTextareaInModal","ButtonForModal","ButtonClose","emailForSupport","textMessage","builderSchema","SendEmail","onClose","form","resetForm","rows","NeedHelpBlock","NeedHelpBtn","NeedHelp","closeModal","srcSet","color","onRequestClose","BoardCreationBlock","BtnCreate","ModalWrap","ModalTitle","CloseBtn","FormWrap","theme","Text","IconsListWrap","InvisibleInput","BackgroundsPallet","_templateObject10","LabelPic","_templateObject11","Div","_templateObject12","AddBtn","_templateObject13","IconWrap","_templateObject14","iconsArr","backgroundsArr","schema","boardTitle","icon","oneOf","BoardCreatingModal","title","btnText","map","el","value","srcSetPath","concat","srcDefault","BoardCreation","ControlIconsContainer","BoardItemContainer","BoardItem","board","useSelector","console","log","BoardId","tagName","fetchBoardById","handleSelectBoard","_id","selected","opacity","deleteBoard","Logo","BoardContainer","BoardList","LogOut","Sidebar","useEffect","fetchBoards","_Fragment","logOut","DrpdwnBtn","ThemesList","visibility","_ref2","_ref3","ThemeItem","ThemeSwitcher","setIsOpen","menuRef","callback","handleClick","evnt","contains","document","addEventListener","removeEventListener","useClickOutside","setTimeout","heigth","changeTheme","HeaderStyled","MenuBtn","HeaderWrapper","customStylesForModal","inset","Header","isMenuOpen","setIsOpenMenu","Wrap","BoardName","FilterBtn","FiltersTytle","HorizontalLine","LabelName","ShowPickers","PickersList","Picker","PickerName","FilterModal","defaultChecked","HeaderDashboard","boardName","useParams","CardBody","CardColor","$priority","CardTitle","CardDescription","CardSolid","CardDetals","CardInformation","Priority","PriorityDetals","PriorityTitle","PriorityColor","PriorityTipe","Deadline","DeadlineTitle","DeadlineDate","_templateObject15","CardButtons","_templateObject16","Bell","_templateObject17","_templateObject18","Calendar","selectedDate","onDateChange","DatePicker","date","dateFormat","ModalBody","TitleModal","CloseModal","TitleCard","StyledDescription","LabelColorStyle","DeadlineStyle","AddButton","StylePlus","StyledRadioGroup","RadioButton","RadioLabel","RadioInputs","currValue","setCurrValue","handleInput","item","className","checked","nanoid","formCardSchema","text","priority","deadline","EditCardModal","card","cardId","setSelectedDate","editCard","handleSubmit","setFieldValue","MoveList","MoveCardItemButtonStyled","MoveCardItem","column","chengeColumnsCard","toColumnId","MoveCardDropdown","currColumnId","columns","filteredColumns","filter","Card","modalCardIsOpen","setmodalCardIsOpen","_useState3","_useState4","isOpenMoveCardModal","setIsOpenMoveCardModal","columnId","dateDeadline","Date","formatedDate","getDate","getMonth","getFullYear","cardTextDescription","substring","closeCardModal","deleteCard","overlayClassName","CardList","_templateObject19","_templateObject20","AddCardModal","addCard","HeadWrap","IconedBtn","ButtonText","addColumnFormSchema","EditColumnFormik","body","editColumn","ColumnHead","isOpenModal","setIsOpenModal","handleModalClose","deleteColumn","ariaHideApp","Column","cards","filtredCards","ColumnList","ColumnItem","AddColumnFormik","boardId","addColumn","Board","modalIsOpen","MainDashboard","reqFunc","ScreensPage","SidebarWrapper","Main","props","$backgroundImg","HomePage","baseUrl"],"sourceRoot":""}