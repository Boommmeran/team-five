{"version":3,"file":"static/js/260.adb64b11.chunk.js","mappings":"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","sources":["components/UserInfo/UserInfo.styled.js","components/EditProfile/EditProfile.styled.js","components/UpdateAvatar/UpdateAvatar.styled.js","components/UpdateAvatar/UpdateAvatar.jsx","schemas/editProfileSchema.js","components/EditProfile/EditProfile.jsx","components/UserInfo/UserInfo.jsx","components/Header/Header.styled.jsx","redux/boards/boardsSelectors.js","services/sendDataEmail.js","components/SendEmail/SendEmail.styled.js","components/SendEmail/SendEmail.jsx","components/NeedHelp/NeedHelp.styled.jsx","components/NeedHelp/NeedHelp.jsx","components/SidebarBoardCreation/BoardCreation.styled.jsx","components/BoardCreatingModal/BoardCreatingModal.styled.jsx","components/BoardCreatingModal/BoardCreatingModal.jsx","components/SidebarBoardCreation/BoardCreation.jsx","components/BoardItem/BoardItem.styled.jsx","components/BoardItem/BoardItem.jsx","components/SideBar/SideBar.styled.jsx","components/SideBar/SideBar.jsx","components/ThemeSwitcher/ThemeSwitcher.styled.jsx","components/ThemeSwitcher/ThemeSwitcher.jsx","hooks/useClickOutside.js","components/Header/Header.jsx","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/FilterModal/FilterModal.styled.jsx","components/FilterModal/FilterModal.jsx","components/HeaderDashboard/HeaderDashboard.jsx","components/ScreensPage/ScreensPage.styled.jsx","components/MainDashboard/MainDashboard.styled.jsx","components/Calendar/Calendar.jsx","components/AddCardModal/AddCardModal.styled.jsx","components/AddCardModal/AddCardModal.jsx","components/Card/Card.styled.jsx","components/Card/Card.jsx","components/Column/Column.styled.js","components/EditColumnModal/EditColumnModal.styled.jsx","components/EditColumnModal/EditColumnModal.jsx","components/Column/Column.jsx","components/Board/Board.styled.jsx","components/Board/Board.jsx","components/MainDashboard/MainDashboard.jsx","components/ScreensPage/ScreensPage.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n\n  gap: 8px;\n`;\n\nexport const Name = styled.p`\n  margin: 5px 0;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -2;\n  color: var(--primaryTextColor);\n`;\n\nexport const Avatar = styled.img`\n  cursor: pointer;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 10px;\n  color: var(--primaryTextColor);\n  background: var(--modalBgColor);\n  border: 0;\n  cursor: pointer;\n`;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Container = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 100%;\n  height: 440px;\n  border-radius: 8px;\n  background: var(--modalBgColor);\n\n  @media only screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin: 0 0 24px 0;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledField = styled(Field)`\n  position: relative;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  width: 100%;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  opacity: 0.4;\n  border-radius: 8px;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  transition: var(--transition);\n\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n`;\n\nexport const LastField = styled(Field)`\n  margin-bottom: 24px;\n  padding: 14px 18px;\n  width: 100%;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  opacity: 0.4;\n  border-radius: 8px;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -2;\n  color: var(--primaryTextColor);\n  transition: var(--transition);\n\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  background: var(--accent);\n  border: 0;\n  border-radius: 8px;\n  padding: 14px 126px;\n  color: var(--primaryTextColor);\n  font-family: 'Poppins-Medium';\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0, 02em;\n\n  &:hover {\n    background: var(--hover);\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 4px;\n\n  color: red;\n  font-size: 12px;\n  font-style: italic;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n\nexport const StyledLabel = styled.label`\n  position: relative;\n  display: block;\n\n  svg {\n    position: absolute;\n    top: 16px;\n    right: 15px;\n    opacity: 0, 5;\n    &:active {\n      opacity: 1;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ContainerAvatar = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Avatar = styled.img`\n  margin-bottom: 25px;\n  border-radius: 8px;\n`;\n\nexport const Input = styled.input`\n  opacity: 0;\n  height: 0;\n  width: 0;\n  line-height: 0;\n  overfow: hidden;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 56px;\n  left:46%;\n\n  width: 24px;\n  height: 24px;\n  background: var(--accent);\n  border-radius: 8px;\n  border: 0;\n\n  @media only screen and (min-width: 768px) {\n    left: 47%;\n  }\n`;\n","import { useRef } from 'react';\nimport { Input, Button, ContainerAvatar, Avatar } from './UpdateAvatar.styled';\n\nimport { useAuth } from 'hooks';\nimport { useDispatch } from 'react-redux';\nimport { updateAvatar } from '../../redux/auth/authOperation';\n\nimport { Icon } from 'components/Icon';\n\nconst cloudinaryBaseURL =\n  'https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707503119/';\n\nexport const UpdateAvatar = () => {\n  const { user } = useAuth();\n  const dispatch = useDispatch();\n\n  const filePicker = useRef(null);\n\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n\n    dispatch(updateAvatar(selectedFile));\n  };\n\n  const handlePick = () => {\n    filePicker.current.click();\n  };\n  return (\n    <ContainerAvatar>\n      <Avatar\n        src={cloudinaryBaseURL + user.avatarURL}\n        width=\"68\"\n        height=\"68\"\n        alt=\"user photo\"\n      />\n\n      <Button onClick={handlePick}>\n        <Icon\n          name=\"plus\"\n          width=\"10px\"\n          height=\"10px\"\n          stroke=\"var(--primaryTextColor)\"\n        />\n      </Button>\n      <Input\n        type=\"file\"\n        ref={filePicker}\n        onChange={handleFileChange}\n        accept=\"image/*,.jpg,.png,.gif,.web,\"\n      />\n    </ContainerAvatar>\n  );\n};\n","import * as Yup from 'yup';\n\nexport const EditProfileSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, '2 chars minimum')\n    .max(32, '32 chars maximum')\n    .matches(/^[a-zA-Z0-9!@#$%^&*(),.?\":{}|<>]+$/, 'Invalin name ')\n    .required('this field is required'),\n  email: Yup.string().email('Invalid email').required('this field is required'),\n  password: Yup.string()\n    .min(8, '8 chars minimum')\n    .max(64, '64 chars maximum')\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*(),.?\":{}|<>]+$/,\n      'only latin letters, numbers and symbols'\n    )\n    .matches(/^\\S*$/, 'password must not contain spaces')\n    .required('this field is required '),\n});","import {\n  Container,\n  Title,\n  Button,\n  StyledForm,\n  StyledField,\n  LastField,\n  ErrMsg,\n  StyledLabel,\n  Label,\n} from './EditProfile.styled';\nimport { Formik } from 'formik';\n\nimport { useAuth } from 'hooks';\nimport { update } from '../../redux/auth/authOperation';\nimport { useDispatch } from 'react-redux';\nimport { UpdateAvatar } from 'components/UpdateAvatar';\nimport { Icon } from 'components/Icon';\nimport { EditProfileSchema } from 'schemas/editProfileSchema';\n\nexport const EditProfile = () => {\n  const { user } = useAuth();\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <Title>Edit profile</Title>\n     <UpdateAvatar />\n\n      <Formik\n        initialValues={{\n          name: user.name,\n          email: user.email,\n          password: '',\n          \n        }}\n        validationSchema={EditProfileSchema}\n        onSubmit={(values, actions) => {\n          dispatch(update(values));\n        }}\n      >\n        <StyledForm>\n           \n          <Label>\n            <StyledField id=\"name\" name=\"name\" />\n            <ErrMsg name=\"name\" component=\"p\" />\n          </Label>\n\n          <Label>\n            <StyledField id=\"email\" name=\"email\" type=\"email\" />\n            <ErrMsg name=\"email\" component=\"p\" />\n          </Label>\n\n          <StyledLabel>\n            <Icon name=\"eye\" stroke=\"var(--primaryTextColor)\" />\n            <LastField\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Enter or update your password\"\n            />\n            <ErrMsg name=\"password\" component=\"p\" />\n          </StyledLabel>\n\n          <Button type=\"submit\">Submit</Button>\n        </StyledForm>\n      </Formik>\n    </Container>\n  );\n};\n","import { Container, Name, Avatar, Button } from './UserInfo.styled';\nimport { EditProfile } from 'components/EditProfile';\nimport { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\n\nimport { useAuth } from 'hooks';\n\nconst cloudinaryBaseURL =\n  'https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707503119/';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    padding: '0',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const UserInfo = () => {\n  const { user } = useAuth();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <Container>\n      <Name>{user.name}</Name>\n\n      <Avatar\n        src={cloudinaryBaseURL + user.avatarURL}\n        width=\"32\"\n        height=\"32\"\n        alt=\"user photo\"\n        onClick={openModal}\n      />\n\n      <Modal isOpen={isModalOpen} style={customStyles} contentLabel=\"Modal\">\n        <EditProfile />\n        <Button onClick={closeModal}>\n          <Icon name=\"close\" stroke=\"var(--primaryTextColor)\" />\n        </Button>\n      </Modal>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const HeaderStyled = styled.header`\n  position: relative;\n\n  max-width: 375px;\n  display: flex;\n  justify-content: space-between;\n\n  background-color: var(--headerBgColor);\n\n  padding: 14px 20px;\n\n  @media (min-width: 768px) {\n    max-width: 768px;\n    padding: 18px 32px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 1180px;\n    justify-content: flex-end;\n    padding: 18px 24px;\n  }\n`;\n\nexport const MenuBtn = styled.button`\n  border: none;\n  background-color: inherit;\n\n  svg {\n    width: 24px;\n    height: 24px;\n\n    @media (min-width: 768px) {\n      width: 32px;\n      height: 32px;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const HeaderWrapper = styled.div`\nposition: relative;\n  display: flex;\n  align-items: baseline;\n  gap: 14px;\n`;\n\nexport const customStylesForModal = {\n  content: {\n    inset: 0,\n    width: 'fit-content',\n    height: 'fit-content',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};","export const selectBoards = state => state.boards.boards;\nexport const selectCurrentBoard = state => state.boards.currentBoard;","import axios from 'axios';\nimport toast from 'react-hot-toast';\n\nexport const sendDataEmail = async data => {\n  try {\n    await axios.post('/support', data);\n    toast.success('Successfully sent!');\n  } catch (error) {\n    toast.error('Oops. Something went wrong');\n  }\n};\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const ContainerForModal = styled.div`\n  position: relative;\n  padding: 24px 34px 50px 24px;\n  width: 320px;\n  height: 381px;\n\n  background: var(--headerBgColor);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.05);\n\n  @media only screen and (min-width: 375px) {\n    width: 345px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 400px;\n    height: 355px;\n    padding: 24px;\n  }\n`;\n\nexport const TitleForModal = styled.h3`\n  margin-bottom: 24px;\n\n  text-align: start;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\nexport const StyledFormInModal = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledFieldInModal = styled(Field)`\n  position: relative;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  width: 100%;\n\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  resize: none;\n  opacity: 0.4;\n\n  font-size: 14px;\n  line-height: 1.4;\n\n  color: var(--primaryTextColor);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n\n  transition: opacity var(--transition);\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: 19px;\n    width: 100%;\n  }\n  @media only screen and (min-width: 1440px) {\n    margin-bottom: 14px;\n  }\n`;\n\nexport const StyledTextareaInModal = styled(Field)`\n  position: relative;\n  margin-bottom: 24px;\n  padding: 14px 18px;\n  width: 100%;\n\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  resize: none;\n  opacity: 0.4;\n\n  font-size: 14px;\n  height: calc(30px * 4);\n  line-height: 1.5;\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n  }\n\n  color: var(--primaryTextColor);\n\n  transition: opacity var(--transition);\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 100%;\n  }\n`;\n\nexport const ButtonForModal = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 49px;\n  width: 100%;\n\n  background-color: var(--accent);\n  border: 0;\n  border-radius: 8px;\n\n  color: var(--primaryTextColor);\n  font-size: 14px;\n  line-height: 1.5;\n  cursor: pointer;\n\n  transition: background-color var(--transition);\n\n  &:hover,\n  :focus {\n    background-color: var(--btnBgColorHover);\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 287px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 100%;\n  }\n`;\n\nexport const ButtonClose = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  padding: 0;\n  border: none;\n  background: none;\n  cursor: pointer;\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  font-size: 12px;\n  font-style: italic;\n  color: red;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { sendDataEmail } from 'services/sendDataEmail';\nimport {\n  ButtonClose,\n  ButtonForModal,\n  ContainerForModal,\n  ErrMsg,\n  Label,\n  StyledFieldInModal,\n  StyledFormInModal,\n  StyledTextareaInModal,\n  TitleForModal,\n} from './SendEmail.styled';\nimport { Icon } from 'components/Icon';\n\nconst initialValues = {\n  emailForSupport: '',\n  textMessage: '',\n};\n\nconst builderSchema = Yup.object().shape({\n  emailForSupport: Yup.string().email().required('This field is required'),\n  textMessage: Yup.string()\n    .min(5, `It's can be up to 5 characters long`)\n    .required(`This field is required`),\n});\n\nexport const SendEmail = ({ onClose }) => {\n  const onSubmit = (data, form) => {\n    sendDataEmail(data);\n    form.resetForm();\n    onClose();\n  };\n\n  return (\n    <ContainerForModal>\n      <TitleForModal>Need help</TitleForModal>\n      <ButtonClose type=\"button\" onClick={onClose}>\n        <Icon\n          stroke=\"var(--primaryTextColor)\"\n          name=\"close\"\n          width=\"18\"\n          height=\"18\"\n        />\n      </ButtonClose>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={builderSchema}\n        onSubmit={onSubmit}\n      >\n        <StyledFormInModal>\n          <Label>\n            <StyledFieldInModal\n              type=\"email\"\n              name=\"emailForSupport\"\n              placeholder=\"Email address\"\n            />\n            <ErrMsg component=\"p\" name=\"emailForSupport\" />\n          </Label>\n\n          <Label>\n            <StyledTextareaInModal\n              rows={4}\n              component=\"textarea\"\n              type=\"text\"\n              name=\"textMessage\"\n              placeholder=\"Comment\"\n            />\n            <ErrMsg component=\"p\" name=\"textMessage\" />\n          </Label>\n\n          <ButtonForModal type=\"submit\">Send</ButtonForModal>\n        </StyledFormInModal>\n      </Formik>\n    </ContainerForModal>\n  );\n};\n","import styled from 'styled-components';\n\nexport const NeedHelpBlock = styled.div`\n  height: 238px;\n  padding: 14px;\n  margin-bottom: 24px;\n  font-size: 12px;\n  border-radius: 8px;\n  background-color: var(--secondaryBgColor);\n\n  p {\n    margin-top: 14px;\n    margin-bottom: 18px;\n    line-height: 1.33333;\n    letter-spacing: 0;\n  }\n`;\n\nexport const NeedHelpBtn = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  background: none;\n  display: flex;\n  align-items: center;\n\n  span {\n    margin-left: 8px;\n    color: var(--primaryTextColor);\n    font-family: 'Poppins-Medium';\n  }\n`;","import { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { SendEmail } from 'components/SendEmail';\nimport { NeedHelpBlock, NeedHelpBtn } from './NeedHelp.styled';\n\nconst customStyles = {\n  content: {\n    width: 'fit-content',\n    height: 'fit-content',\n    padding: 0,\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\n// Modal.setAppElement('#root');\n\nexport const NeedHelp = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <NeedHelpBlock>\n      <picture>\n        <source\n          srcSet=\"\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-1x.webp 1x,\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-2x.webp 2x\n            \"\n        />\n        <img\n          src=\"https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-1x.webp\"\n          width=\"54\"\n          height=\"78\"\n          alt=\"little cute cactus\"\n        />\n      </picture>\n      <p>\n        If you need help with{' '}\n        <span style={{ color: 'var(--accent)' }}>TaskPro</span>, check out our\n        support resources or reach out to our customer support team.\n      </p>\n      <NeedHelpBtn type=\"button\" onClick={openModal}>\n        <Icon\n          name=\"help\"\n          width=\"20\"\n          height=\"20\"\n          stroke=\"var(--primaryTextColor)\"\n        />\n        <span>Need help?</span>\n      </NeedHelpBtn>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Need help modal\"\n      >\n        <SendEmail onClose={closeModal} />\n      </Modal>\n    </NeedHelpBlock>\n  );\n};\n","import styled from 'styled-components';\n\nexport const BoardCreationBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-top: rgba(255, 255, 255, 0.1) solid 1px;\n  border-bottom: rgba(255, 255, 255, 0.1) solid 1px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  margin-bottom: 40px;\n`;\n\nexport const BtnCreate = styled.button`\n  width: 40px;\n  height: 36px;\n  background-color: var(--btnPlus);\n  border: none;\n  border-radius: 6px;\n  stroke: var(--primaryBgColor);\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnPlusHover);\n  }\n`;","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 335px;\n  height: 433px;\n\n  border-radius: 8px;\n\n  background-color: var(--modalBgColor);\n\n  stroke: var(--primaryTextColor);\n\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const ModalTitle = styled.h3`\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Medium';\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--primaryTextColor);\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const FormWrap = styled(Form)`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const Input = styled(Field)`\n  width: 287px;\n  height: 49px;\n  padding: 14px 0 14px 18px;\n  margin-bottom: 24px;\n\n  font-family: 'Poppins-Regular';\n  font-size: 14px;\n\n  border: 1px solid var(--btnPlus);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n\n  color: var(--primaryTextColor);\n  background-color: ${({ theme }) =>\n    theme === 'dark' ? ' #1f1f1f' : 'inherit'};\n  opacity: 0.4;\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 14px;\n\n  color: var(--primaryTextColor);\n`;\n\nexport const IconsListWrap = styled.ul`\n  display: flex;\n  gap: 8px;\n\n  margin-bottom: 24px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 0;\n\n  border: none;\n  background-color: inherit;\n\n  width: 18px;\n  height: 18px;\n\n  opacity: 0.5;\n  transition: opacity var(--transition);\n\n  cursor: pointer;\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:focus,\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const InvisibleInput = styled(Field)`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n\nexport const BackgroundsPallet = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  width: 252px;\n  height: 60px;\n  margin-bottom: 40px;\n`;\n\nexport const LabelPic = styled.label``;\n\nexport const Div = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  transition: transform var(--transition);\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  min-width: 287px;\n  height: 49px;\n\n  padding: 10px 0 11px 0;\n\n  border: 1px solid black;\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--btnText);\n  background-color: var(--btnBgColor);\n  transition: background-color var(--transition);\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 302px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnBgColorHover);\n  }\n`;\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n\n  border-radius: 8px;\n\n  background-color: var(--btnText);\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--plusInBtn);\n  }\n`;\n","import { Icon } from 'components/Icon';\nimport * as Yup from 'yup';\nimport {\n  FormWrap,\n  Input,\n  Text,\n  AddBtn,\n  IconWrap,\n  ModalWrap,\n  CloseBtn,\n  ModalTitle,\n  IconsListWrap,\n  InvisibleInput,\n  BackgroundsPallet,\n  Label,\n  LabelPic,\n  Div,\n} from './BoardCreatingModal.styled';\nimport { Formik } from 'formik';\n\nconst iconsArr = [\n  'four-circles',\n  'star',\n  'loading',\n  'puzzle',\n  'container',\n  'lightning',\n  'colors',\n  'hexagon',\n];\n\nconst backgroundsArr = [\n  'noBack',\n  'miklos',\n  'eberhard',\n  'diego',\n  'vino',\n  'vickholius',\n  'romello',\n  'kace',\n  'milad',\n  'gaetan',\n  'florian',\n  'tony',\n  'nicolas',\n  'gabriella',\n  'igor',\n  'zhou',\n];\n\nconst schema = Yup.object({\n  boardTitle: Yup.string().required(),\n  icon: Yup.string().oneOf(iconsArr).required(),\n  background: Yup.string().oneOf(backgroundsArr).required(),\n});\n\nexport const BoardCreatingModal = ({ onClose, title, btnText }) => {\n  // тут має бути прописана логіка отримання даних щодо дошки з redux (для випадка редагування) з подальшим \n  // занесенням у initialValues (у форматі або ?? існуючі стартові двні)\n\n  const initialValues = {\n    boardTitle: '',\n    icon: 'four-circles',\n    background: 'noBack',\n  };\n\n  const onSubmit = values => {\n    // reqFunc(values);\n    onClose();\n  };\n  return (\n    <ModalWrap>\n      <ModalTitle>{title}</ModalTitle>\n      <CloseBtn type=\"button\" onClick={onClose}>\n        <Icon name=\"close\" />\n      </CloseBtn>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={onSubmit}\n      >\n        <FormWrap>\n          <Input type=\"text\" placeholder=\"Title\" name=\"boardTitle\" />\n          <Text>Icons</Text>\n\n          <IconsListWrap>\n            {iconsArr.map(el => (\n              <li key={el}>\n                <Label>\n                  <Icon name={el} />\n                  <InvisibleInput type=\"radio\" name=\"icon\" value={el} />\n                </Label>\n              </li>\n            ))}\n          </IconsListWrap>\n\n          <Text>Backgrounds</Text>\n          <BackgroundsPallet>\n            {backgroundsArr.map(el => {\n              const srcSetPath = ` https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp 1x,\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_56x56.webp 2x`;\n              const srcDefault = `https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${el}_28x28.webp`;\n              return (\n                <li key={el}>\n                  <LabelPic>\n                    <Div>\n                      <picture>\n                        <source srcSet={srcSetPath} />\n                        <img src={srcDefault} alt=\"background example\" />\n                      </picture>\n                    </Div>\n                    <InvisibleInput type=\"radio\" name=\"background\" value={el} />\n                  </LabelPic>\n                </li>\n              );\n            })}\n          </BackgroundsPallet>\n\n          <AddBtn type=\"submit\">\n            <IconWrap>\n              <Icon name=\"plus\" />\n            </IconWrap>{' '}\n            {btnText}\n          </AddBtn>\n        </FormWrap>\n      </Formik>\n    </ModalWrap>\n  );\n};\n","import { useState } from \"react\";\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { BoardCreationBlock, BtnCreate } from \"./BoardCreation.styled\";\nimport { BoardCreatingModal } from \"components/BoardCreatingModal\";\n\nconst customStyles = {\n  content: {\n    width: 'fit-content',\n    height: 'fit-content',\n    padding: 0,\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const BoardCreation = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <BoardCreationBlock>\n      <p>\n        Create a<br />\n        new board\n      </p>\n      <BtnCreate type=\"button\" onClick={openModal}>\n        <Icon name=\"plus\" width=\"20\" height=\"20\" />\n      </BtnCreate>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Creation board modal\"\n      >\n        <BoardCreatingModal\n          onClose={closeModal}\n          title=\"New board\"\n          btnText=\"Create\"\n        />\n      </Modal>\n    </BoardCreationBlock>\n  );\n};","import styled from 'styled-components';\n\nexport const ControlIconsContainer = styled.div`\n  margin-left: auto;\n  display: none;\n  gap: 8px;\n\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\n\nexport const BoardItemContainer = styled.li`\n  height: 61px;\n  margin: 0 -14px 0 -14px;\n  padding: 0 14px 0 14px;\n  display: flex;\n  align-items: center;\n  stroke: var(--primaryTextColor);\n  opacity: 0.5;\n  transition: var(--transition);\n\n  p {\n    margin-left: 4px;\n    font-family: 'Poppins-Medium';\n    font-size: 14px;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--secondaryBgColor);\n    opacity: 1;\n\n    > ${ControlIconsContainer} {\n      display: flex;\n      opacity: 0.5;\n    }\n  }\n`;","import { useState } from 'react';\nimport Modal from 'react-modal';\nimport { Icon } from 'components/Icon';\nimport { BoardItemContainer, ControlIconsContainer } from './BoardItem.styled';\nimport { BoardCreatingModal } from 'components/BoardCreatingModal';\nimport { useDispatch } from 'react-redux';\nimport { deleteBoard, fetchBoardById } from '../../redux/boards/boardsOperations';\nimport { useSelector } from 'react-redux';\nimport { selectCurrentBoard } from '../../redux/boards/boardsSelectors';\n\nconst customStyles = {\n  content: {\n    width: 'fit-content',\n    height: 'fit-content',\n    padding: 0,\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const BoardItem = ({ board }) => {\n  const dispatch = useDispatch();\n  const currentBoard = useSelector(selectCurrentBoard);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleSelectBoard = (event, BoardId) => {\n    if (event.target.tagName !== 'BUTTON') {\n      dispatch(fetchBoardById(BoardId))\n    }\n  };\n\n  const handleDelete = (BoardId) => {\n    dispatch(deleteBoard(BoardId));\n  }\n\nconsole.log(currentBoard)\n\n  return (\n    <BoardItemContainer\n      onClick={(event) => handleSelectBoard(event, board._id)}\n      selected={currentBoard && currentBoard._id === board._id}\n    >\n      <Icon name={board.icon} width=\"18\" height=\"18\" style={{ opacity: 0.5 }} />\n      <p>{board.title}</p>\n      <ControlIconsContainer>\n        <button type=\"button\" onClick={openModal}>\n          <Icon name=\"pencil\" width=\"16\" height=\"16\" />\n        </button>\n        <button type=\"button\" onClick={() => handleDelete(board._id)}>\n          <Icon name=\"trash\" width=\"16\" height=\"16\" />\n        </button>\n      </ControlIconsContainer>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Edition board modal\"\n      >\n        <BoardCreatingModal\n          onClose={closeModal}\n          title=\"Edit board\"\n          btnText=\"Edit\"\n        />\n      </Modal>\n    </BoardItemContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SidebarContainer = styled.div`\n  width: 225px;\n  min-height: 100vh;\n  padding: 14px;\n  color: var(--primaryTextColor);\n  letter-spacing: -0.02em;\n  text-align: left;\n  background-color: var(--primaryBgColor);\n`;\n\nexport const Logo = styled.div`\n  font-family: 'Poppins-SemiBold';\n  letter-spacing: -0.04em;\n  display: flex;\n  column-gap: 8px;\n  align-items: center;\n  margin-bottom: 70px;\n`;\n\nexport const BoardContainer = styled.div`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n\n  h3 {\n    margin-bottom: 8px;\n    font-size: 12px;\n    font-family: 'Poppins-Regular';\n    opacity: 50%;\n  }\n`;\n\nexport const BoardList = styled.ul`\n  margin-bottom: 40px;\n`;\n\nexport const LogOut = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  background: none;\n  display: flex;\n  align-items: center;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  stroke: var(--accent);\n  transition: var(--transition);\n\n  p {\n    margin-left: 14px;\n    color: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    stroke: var(--hover);\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectBoards } from '../../redux/boards/boardsSelectors.js';\nimport { fetchBoards } from '../../redux/boards/boardsOperations.js';\nimport { logOut } from '../../redux/auth/authOperation.js';\nimport { NeedHelp } from 'components/NeedHelp';\nimport { BoardCreation } from 'components/SidebarBoardCreation';\n\nimport { BoardItem } from 'components/BoardItem';\nimport { Icon } from 'components/Icon';\nimport {\n  SidebarContainer,\n  Logo,\n  BoardContainer,\n  BoardList,\n  LogOut,\n} from './SideBar.styled';\n\nexport const Sidebar = () => {\n  const dispatch = useDispatch();\n  const boards = useSelector(selectBoards);\n\n  useEffect(() => {\n    dispatch(fetchBoards());\n  }, [dispatch]);\n\n  const handleLogOut = () => {\n    dispatch(logOut());\n  };\n\n  return (\n    <SidebarContainer>\n      <Logo>\n        <Icon name=\"logo\" width=\"32\" height=\"32\" />\n        <h2>TaskPro</h2>\n      </Logo>\n      <BoardContainer>\n        <h3>My boards</h3>\n        <BoardCreation />\n        <BoardList>\n          {boards.map(board => (\n            <BoardItem\n              key={board._id}\n              board={board}\n            />\n          ))}\n        </BoardList>\n      </BoardContainer>\n      <NeedHelp />\n      <LogOut type=\"button\" onClick={handleLogOut}>\n        <Icon name=\"login\" width=\"32\" height=\"32\" />\n        <p>Log out</p>\n      </LogOut>\n    </SidebarContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const DrpdwnBtn = styled.button`\n  position: relative;\n  display: flex;\n  gap: 4px;\n\n  background: none;\n  border: none;\n\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n\n  color: var(--secondaryTextColor);\n  opacity: var(--secondaryOpacity);\n`;\n\nexport const ThemesList = styled.ul`\n  position: absolute;\n  top: 65%;\n  right: 52%;\n\n  padding: 18px 44px 18px 18px;\n  border: 1px solid var(--borderInThemeModal);\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(17, 17, 17, 0.1);\n  background-color: var(--modalBgColor);\n  visibility: ${({ visibility }) => visibility};\n  opacity: ${({ opacity }) => opacity};\n  transform: ${({ transform }) => transform};\n  transition: 0.3s;\n`;\n\nexport const ThemeItem = styled.li`\n  font-family: 'Poppins-Regular';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  opacity: var(--opacityInThemeModal);\n  cursor: pointer;\n\n  &:hover,\n  :focus {\n    color: var(--accent);\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 4px;\n  }\n`;","import { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeTheme } from '../../redux/auth/authOperation';\n\nimport { useClickOutside } from 'hooks/useClickOutside';\nimport { Icon } from 'components/Icon';\nimport { DrpdwnBtn, ThemesList, ThemeItem } from './ThemeSwitcher.styled';\n\n\nexport const ThemeSwitcher = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const menuRef = useRef(null);\n  const dispatch = useDispatch();\n\n  const visibility = isOpen ? 'visible' : 'hidden';\n  const opacity = isOpen ? '1' : '0';\n  const transform = isOpen ? 'translateY(10px)' : 'translateY(0)';\n\n  useClickOutside(menuRef, () => {\n    if (isOpen) {\n      setTimeout(() => setIsOpen(false), 50);\n    }\n  });\n\n  return (\n    <div ref={menuRef}>\n      <DrpdwnBtn type=\"button\" onClick={() => setIsOpen(!isOpen)}>\n        Theme\n        <Icon\n          name=\"chevron-down\"\n          width=\"16\"\n          heigth=\"16\"\n          stroke=\"var(--secondaryTextColor)\"\n        />\n      </DrpdwnBtn>\n      <ThemesList\n        visibility={visibility}\n        opacity={opacity}\n        transform={transform}\n      >\n        <ThemeItem onClick={() => dispatch(changeTheme({ theme: 'light' }))}>\n          Light\n        </ThemeItem>\n        <ThemeItem onClick={() => dispatch(changeTheme({ theme: 'dark' }))}>\n          Dark\n        </ThemeItem>\n        <ThemeItem onClick={() => dispatch(changeTheme({ theme: 'violet' }))}>\n          Violet\n        </ThemeItem>\n      </ThemesList>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\n\nexport const useClickOutside = (ref, callback) => {\n  const handleClick = evnt => {\n    if (ref.current && !ref.current.contains(evnt.target)) {\n      callback();\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClick);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    };\n  });\n};\n","import { UserInfo } from 'components/UserInfo';\nimport { MenuBtn } from './Header.styled';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { Sidebar } from 'components/SideBar';\nimport { ThemeSwitcher } from 'components/ThemeSwitcher';\nimport { Icon } from 'components/Icon';\nimport {\n  HeaderStyled,\n  HeaderWrapper,\n  \n  customStylesForModal,\n} from './Header.styled';\n\nexport const Header = () => {\n  const [isMenuOpen, setIsOpenMenu] = useState(false);\n  \n\n  const openMenu = () => {\n    setIsOpenMenu(true);\n  };\n\n  const closeMenu = () => {\n    setIsOpenMenu(false);\n  };\n\n  return (\n    <HeaderStyled>\n      <MenuBtn type=\"button\" onClick={openMenu}>\n        <Icon name=\"menu\" stroke=\"var(--secondaryTextColor)\" />\n      </MenuBtn>\n\n      <HeaderWrapper>\n        <ThemeSwitcher/>\n        <UserInfo />\n      </HeaderWrapper>\n      <Modal\n        isOpen={isMenuOpen}\n        onRequestClose={closeMenu}\n        style={customStylesForModal}\n        contentLabel=\"Sidebar\"\n      >\n        <Sidebar />\n      </Modal>\n    </HeaderStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  margin-bottom: 26px;\n\n  @media (max-width: 767px) {\n    padding: 14px 0px;\n  }\n\n  @media (min-width: 768px) {\n    padding: 26px 0px;\n  }\n\n  @media (min-width: 1440px) {\n    padding: 10px 0px;\n  }\n`;\n\nexport const BoardName = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--primaryTextColor);\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const FilterBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  font-family: 'Poppins-Medium';\n\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  border: none;\n\n  color: var(--secondaryTextColor);\n  opacity: 0.8;\n  background-color: inherit;\n\n  stroke: var(--secondaryTextColor);\n  stroke-opacity: 0.8;\n  transition: opacity var(--transition);\n  > svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 300px;\n  height: 234px;\n\n  border-radius: 8px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.05);\n  background: var(--modalBgColor);\n`;\n\nexport const FiltersTytle = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  margin-bottom: 14px;\n  /* margin-left: 24px; */\n  color: var(--primaryTextColor);\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  /* opacity: 0.5; */\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const HorizontalLine = styled.hr`\n  margin-bottom: 14px;\n  stroke-width: 1px;\n  stroke: rgba(22, 22, 22, 0.1);\n`;\n\nexport const LabelName = styled.p`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  margin-bottom: 14px;\n  display: flex;\njustify-content: space-between;\nalign-items: center;\n  /* margin-left: 24px; */\n  color: var(--primaryTextColor);\n`;\n\nexport const ShowPickers = styled.button`\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 400; */\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  text-decoration: underline;\n  /* color: rgba(255, 255, 255, 0.5); */\n`;\n\nexport const PickersList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Picker = styled.label`\n  display: flex;\n  align-items: center;\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 400; */\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  opacity: 0.5;\n  color: var(--secondaryTextColor);\n\n   &:hover,\n  &:focus,\n  &:active {\n    color: var(--secondaryTextColor)\n  }\n`;\n\nexport const PickerName = styled.span`\n  margin-left: 8px;\n`\n","import {\n  FiltersTytle,\n  Picker,\n  PickersList,\n  PickerName,\n  ShowPickers,\n  ModalWrap,\n  HorizontalLine,\n  LabelName,\n  CloseBtn,\n} from './FilterModal.styled';\n\nimport { Icon } from 'components/Icon';\n\nexport const FilterModal = ({ closeModal }) => {\n  return (\n    <ModalWrap>\n      <FiltersTytle>Filters</FiltersTytle>\n      <CloseBtn type=\"button\" onClick={closeModal}>\n        <Icon name=\"close\" />\n      </CloseBtn>\n      <HorizontalLine />\n      <LabelName>\n        Label color\n        <ShowPickers type=\"button\">Show all</ShowPickers>\n      </LabelName>\n      <PickersList>\n        <Picker>\n          <input\n            width=\"14\"\n            height=\"14\"\n            type=\"radio\"\n            name=\"colorPicker\"\n            value=\"Grey\"\n            defaultChecked={true}\n            style={{ opacity: 0.5 }}\n          />\n          <PickerName>Without priority</PickerName>\n        </Picker>\n        <Picker>\n          <input\n            type=\"radio\"\n            name=\"colorPicker\"\n            value=\"Blue\"\n            style={{ opacity: 0.5 }}\n          />\n          <PickerName>Low</PickerName>\n        </Picker>\n        <Picker>\n          <input\n            type=\"radio\"\n            name=\"colorPicker\"\n            value=\"Red\"\n            style={{ opacity: 0.5 }}\n          />\n          <PickerName>Medium</PickerName>\n        </Picker>\n        <Picker>\n          <input\n            type=\"radio\"\n            name=\"colorPicker\"\n            value=\"Green\"\n            style={{ opacity: 0.5 }}\n          />\n          <PickerName>High</PickerName>\n        </Picker>\n      </PickersList>\n    </ModalWrap>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport {\n  customStyles,\n  FilterBtn,\n  BoardName,\n  Wrap,\n} from './HeaderDashboard.styled';\nimport { Icon } from 'components/Icon';\nimport { useState } from 'react';\nimport Modal from 'react-modal';\nimport { FilterModal } from 'components/FilterModal/FilterModal';\n\nexport const HeaderDashboard = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  const { boardName } = useParams();\n  return (\n    <Wrap>\n      <BoardName>{boardName}</BoardName>\n      <FilterBtn type=\"button\" onClick={openModal}>\n        <Icon name=\"filter\" />\n        Filters{' '}\n      </FilterBtn>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Filters Modal\"\n      >\n        <FilterModal closeModal={closeModal} />\n      </Modal>\n    </Wrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 10px 24px;\n  height: 100vh;\n  background-color: var(--secondaryBgColor);\n  background-image: url(https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${props =>     props.$backgroundImg}_375x812.webp);\n  background-repeat: no-repeat;\n  max-width: 375px;\n  height: auto;\n  background-position: center;\n  background-size: cover;\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${props =>      props.$backgroundImg}_750x1624.webp);\n  }\n  @media (min-width: 768px) {\n    background-image: url(https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${props =>      props.$backgroundImg}_768x956.webp);\n    max-width: 768px;\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${props =>        props.$backgroundImg}_1536x1912.webp);\n    }\n  }\n\n  @media (min-width: 1440px) {\n    background-image: url(https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${props =>      props.$backgroundImg}_1180x770.webp);\n    max-width: 1440px;\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/pictures/${props =>        props.$backgroundImg}_2360x1540.webp);\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport  const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const StartText = styled.p`\n  position: relative;\n  bottom: 50%;\n  transform: translateY(-50%);\n  min-width: 280px;\n\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  line-height: 1.33;\n\n  color: var(--secondaryTextColor);\n\n  @media (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media (min-width: 768px) {\n    line-height: 1.29;\n    width: 486px;\n    margin: auto;\n  }\n`;\n\nexport const BoardCreationBtn = styled.button`\n  margin: 0;\n  padding: 0;\n\n  border: none;\n  outline: none;\n\n  background-color: inherit;\n  color: var(--btnPlus);\n  cursor: pointer;\n  transition: color var(--transition);\n  &:hover,\n  &:focus {\n    color: var(--btnPlusHover);\n  }\n`;\n","import DatePicker from 'react-datepicker';\nimport { enGB } from 'date-fns/locale';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'components/Calendar/Calendar.css';\n\nimport 'components/Calendar/Calendar.css';\n\nexport function Calendar({ selectedDate, onDateChange }) {\n  const handleDateChange = date => {\n    onDateChange(date);\n  };\n\n  return (\n   <p>\n    <span className='today'> Today,</span>\n    <DatePicker\n      selected={selectedDate}\n      onChange={handleDateChange}\n      dateFormat=\"MMMM d\"\n      minDate={new Date()}\n      locale={enGB}\n      weekStartsOn={1}\n    />\n   </p>\n  );\n}\n\n\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: 24px;\n  width: 100%;\n  height: 522px;\n\n  border-radius: 8px;\n\n  background: var(--primaryBgColor);\n\n  @media only screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const TitleModal = styled.h2`\n  margin-bottom: 24px;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--primaryTextColor);\n`;\n\nexport const CloseModal = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  position: absolute;\n  top: 2px;\n  right: 8px;\n\n  color: red;\n  font-size: 12px;\n`;\n\nexport const TitleCard = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 14px;\n  transition: opacity var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n`;\n\nexport const StyledDescription = styled(Field)`\n  padding-left: 18px;\n  outline: transparent;\n  outline-offset: -1px;\n  padding-top: 14px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  width: 287px;\n  height: 154px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  margin-bottom: 24px;\n  transition: opacity var(--transition);\n  resize: none;\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    &::placeholder {\n      color: transparent;\n    }\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const LabelColorStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: rgba(22, 22, 22, 0.5); //не змінюється в темі\n  margin-bottom: 4px;\n`;\n\nexport const StyleRadioButton = styled.div`\n  height: 18px;\n  display: flex;\n  gap: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const RadioButton = styled(Field)`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n\n  /* &:hover,\n  &:focus,\n  &:active {\n    position: static;\n    width: 14px;\n    height: 14px;\n  } */\n`;\nexport const RadioButtonBlu = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: #8fa1d0;\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid #8fa1d0;\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const RadioButtonRed = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: #e09cb5;\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid #e09cb5;\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const RadioButtonGreen = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: #bedbb0;\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid #bedbb0;\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const RadioButtonGrey = styled.label`\n  border-radius: 100%;\n  width: 14px;\n  height: 14px;\n  background-color: rgba(22, 22, 22, 0.3);\n  transition: var(--transition);\n  &:hover,\n  &:focus,\n  &:active {\n    border: 2px solid rgba(22, 22, 22, 0.3);\n    width: 16px;\n    height: 16px;\n  }\n  cursor: pointer;\n`;\n\nexport const DeadlineStyle = styled.p`\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: rgba(22, 22, 22, 0.5); //не змінюється в темі\n  margin-bottom: 4px;\n`;\n\nexport const AddButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 287px;\n  height: 49px;\n  background-color: var(--btnPlus);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: background-color var(--transition);\n  cursor: pointer;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnBgColorHover);\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 302px;\n  }\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: var(--btnText);\n  margin-right: 8px;\n  stroke: var(--plusInBtn);\n`;\n\nexport const AddCardButton = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  border-radius: 8px;\n  width: 335px;\n  height: 56px;\n  background: var(--btnPlus);\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Calendar } from 'components/Calendar';\nimport { Icon } from 'components/Icon';\n\nimport {\n  Container,\n  TitleModal,\n  StyledDescription,\n  CloseModal,\n  TitleCard,\n  LabelColorStyle,\n  StyleRadioButton,\n  DeadlineStyle,\n  AddButton,\n  StylePlus,\n  RadioButton,\n  RadioButtonBlu,\n  RadioButtonRed,\n  RadioButtonGreen,\n  RadioButtonGrey,\n  StyledForm,\n  ErrMsg,\n  Label,\n} from './AddCardModal.styled.jsx';\nimport { useDispatch } from 'react-redux';\nimport { addCard } from '../../redux/cards/cardsOperations.js';\n\nconst priority = ['without', 'low', 'medium', 'high'];\n\nconst formCardSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(3, `It's can be up to 3 characters long`)\n    .max(10, 'Too Long!')\n    .required(`This field is required.`),\n  text: Yup.string()\n    .min(10, `It's can be up to 10 characters long`)\n    .max(500, 'Too Long!')\n    .required(`This field is required.`),\n  priority: Yup.string().oneOf(priority),\n  deadline: Yup.date(),\n});\n\nexport default function AddCardModal({ title, btnText, onClose, columnId }) {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const dispatch = useDispatch();\n\n  const onSubmit = values => {\n    dispatch(addCard({ values, columnId }));\n    onClose();\n  };\n\n  return (\n    <Container>\n      <TitleModal>{title}</TitleModal>\n      <CloseModal>\n        <button type=\"button\" onClick={onClose}>\n          <Icon\n            name=\"close\"\n            width=\"18\"\n            height=\"18\"\n            stroke=\"var(--primaryTextColor)\"\n          />\n        </button>\n      </CloseModal>\n      <Formik\n        initialValues={{\n          title: '',\n          text: '',\n          priority: 'without',\n          deadline: selectedDate,\n        }}\n        validationSchema={formCardSchema}\n        onSubmit={onSubmit}\n      >\n        {({ handleSubmit, setFieldValue }) => (\n          <StyledForm onSubmit={handleSubmit}>\n            <TitleCard type=\"text\" name=\"title\" placeholder=\"Title\" />\n            <ErrMsg component=\"p\" name=\"title\" />\n            <Label>\n              <StyledDescription\n                rows={4}\n                component=\"textarea\"\n                name=\"text\"\n                placeholder=\"Description\"\n              />\n              <ErrMsg component=\"p\" name=\"text\" />\n            </Label>\n            <LabelColorStyle id=\"colorCard-radio-group\">\n              Label color\n            </LabelColorStyle>\n            <StyleRadioButton role=\"group\" aria-labelledby=\"my-radio-group\">\n              <RadioButtonBlu>\n                <RadioButton type=\"radio\" name=\"priority\" value=\"low\" />\n              </RadioButtonBlu>\n              <RadioButtonRed>\n                <RadioButton type=\"radio\" name=\"priority\" value=\"medium\" />\n              </RadioButtonRed>\n              <RadioButtonGreen>\n                <RadioButton type=\"radio\" name=\"priority\" value=\"high\" />\n              </RadioButtonGreen>\n              <RadioButtonGrey>\n                <RadioButton type=\"radio\" name=\"priority\" value=\"without\" />\n              </RadioButtonGrey>\n            </StyleRadioButton>\n            <DeadlineStyle>Deadline</DeadlineStyle>\n            <Calendar\n              selectedDate={selectedDate}\n              onDateChange={date => {\n                setSelectedDate(date);\n                setFieldValue('deadline', date);\n              }}\n            />\n            <AddButton type=\"submit\">\n              <StylePlus>\n                <Icon name=\"plus\" width=\"14\" height=\"14\" />\n              </StylePlus>\n              <p>{btnText}</p>\n            </AddButton>\n          </StyledForm>\n        )}\n      </Formik>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    padding: 0,\n    boxShadow: '0px 4px 16px 0px #1616160D',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const CardBody = styled.div`\n  border-radius: 8px;\n  width: 335px; // змінити на /* width: 100%; */ коли стане у колонкуи\n  height: 154px;\n  background: var(--primaryBgColor);\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  position: relative;\n  padding: 14px 20px 14px 24px;\n`;\nexport const CardColor = styled.div`\n  position: absolute;\n  border-radius: 4px 0 0 4px;\n  width: 4px;\n  height: 154px;\n  top: 0px;\n  left: 0px;\n  background-color: ${({ priority }) => {\n    switch (priority) {\n      case 'high':\n        return '#bedbb0';\n      case 'medium':\n        return '#e09cb5';\n      case 'low':\n        return '#8fa1d0';\n      default:\n        return 'rgba(22, 22, 22, 0.3)';\n    }\n  }};\n`;\nexport const CardTitle = styled.h4`\n  text-align: left;\n  font-family: 'Poppins-SemiBold';\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin-bottom: 8px;\n`;\nexport const CardDescription = styled.p`\n  text-align: left;\n  font-size: 12px;\n  line-height: 1.33333;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  width: 290px;\n  height: 38px;\n  overflow: hidden; /* скрывает текст, который не помещается в контейнер */\n  text-overflow: ellipsis; /* отображает многоточие для обрезанного текста */\n  margin-bottom: 14px;\n`;\n\nexport const CardSolid = styled.div`\n  border: 1px solid;\n  border-color: rgba(22, 22, 22, 0.1); //не змінюється в темах\n  margin-bottom: 14px;\n`;\n\nexport const CardDetals = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const CardInformation = styled.div`\n  display: flex;\n`;\n\nexport const Priority = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 14px;\n  \n`;\n\nexport const PriorityDetals = styled.div`\n  display: flex;\n`;\n\nexport const PriorityTitle = styled.p`\n  text-align: left;\n  font-size: 8px;\n  letter-spacing: -0.02em;\n  color: rgba(22, 22, 22, 0.5); //не змінюється в темах\n  margin-bottom: 4px;\n  \n`;\nexport const PriorityColor = styled.div`\n  border-radius: 100%;\n  width: 12px;\n  height: 12px;\n  margin-right: 4px;\n  background-color: ${props => {\n    switch (props.priority) {\n      case 'high':\n        return '#bedbb0';\n      case 'medium':\n        return '#e09cb5';\n      case 'low':\n        return '#8fa1d0';\n      default:\n        return 'rgba(22, 22, 22, 0.3)';\n    }\n  }};\n`;\n\nexport const PriorityTipe = styled.p`\n  font-size: 10px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  text-transform: capitalize;\n \n`;\n\nexport const Deadline = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 14px;\n`;\n\nexport const DeadlineTitle = styled.p`\n  text-align: left;\n  font-size: 8px;\n  letter-spacing: -0.02em;\n  color: rgba(22, 22, 22, 0.5); //не змінюється в темах\n  margin-bottom: 4px;\n`;\n\nexport const DeadlineDate = styled.p`\n  text-align: left;\n  font-size: 10px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\nexport const CardButtons = styled.div`\n  display: flex;\n  gap: 8px;\n  stroke: rgba(22, 22, 22, 0.5); //не змінюється в темах\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\nexport const Bell = styled.button`\n  stroke: var(--accent); //не змінюється в темах\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  transition: var(--transition);\n  &:hover {\n    stroke: rgba(22, 22, 22);\n  }\n  &:focus,\n  &:active {\n    stroke: var(--accent);\n  }\n`;\n","import { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport AddCardModal from 'components/AddCardModal/AddCardModal';\n\nimport {\n  customStyles,\n  CardBody,\n  CardDetals,\n  Priority,\n  PriorityDetals,\n  CardColor,\n  CardTitle,\n  CardDescription,\n  CardSolid,\n  PriorityTitle,\n  PriorityTipe,\n  PriorityColor,\n  Deadline,\n  DeadlineTitle,\n  DeadlineDate,\n  CardButtons,\n  CardInformation,\n  Bell,\n  Button,\n} from './Card.styled';\n\nexport default function Card({ card }) {\n  const [modalCardIsOpen, setmodalCardIsOpen] = useState(false);\n\n  const { title, text, deadline, priority } = card;\n  const dateDeadline = new Date(deadline);\n  const formatedDate = `${dateDeadline.getUTCDate()}/${(dateDeadline.getUTCMonth() + 1).toString().padStart(2, '0')}/${dateDeadline.getFullYear()}`;\n  const cardTextDescription = text.substring(0, 90) + '...';\n\n  const openCardModal = () => {\n    setmodalCardIsOpen(true);\n  };\n\n  const closeCardModal = () => {\n    setmodalCardIsOpen(false);\n  };\n\n  return (\n    <CardBody>\n      <CardColor priority={priority}></CardColor>\n      <CardTitle>{title}</CardTitle>\n      <CardDescription>{cardTextDescription}</CardDescription>\n      <CardSolid></CardSolid>\n      <CardDetals>\n        <CardInformation>\n          <Priority>\n            <PriorityTitle>Priority</PriorityTitle>\n            <PriorityDetals>\n              <PriorityColor priority={priority}></PriorityColor>\n              <PriorityTipe>{priority}</PriorityTipe>\n            </PriorityDetals>\n          </Priority>\n          <Deadline>\n            <DeadlineTitle>Deadline</DeadlineTitle>\n            <DeadlineDate>{formatedDate}</DeadlineDate>\n          </Deadline>\n        </CardInformation>\n        <CardButtons>\n          <Bell type=\"button\">\n            <Icon name=\"bell\" width=\"16\" height=\"16\" />\n          </Bell>\n          <Button type=\"button\">\n            <Icon name=\"arrow-in-circle\" width=\"16\" height=\"16\" />\n          </Button>\n          <Button type=\"button\" onClick={openCardModal}>\n            <Icon name=\"pencil\" width=\"16\" height=\"16\" />\n          </Button>\n          <Button type=\"button\">\n            <Icon name=\"trash\" width=\"16\" height=\"16\" />\n          </Button>\n        </CardButtons>\n      </CardDetals>\n      <Modal\n        isOpen={modalCardIsOpen}\n        onRequestClose={closeCardModal}\n        style={customStyles}\n        contentLabel=\"Card Add Modal\"\n        ariaHideApp={false}\n      >\n        <AddCardModal\n          title={'Edit card'}\n          btnText={'Edit'}\n          onClose={closeCardModal}\n          reqFunc={values => console.log(values)}\n        />\n      </Modal>\n    </CardBody>\n  );\n}\n","import styled from 'styled-components';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const HeadWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 335px;\n  height: 56px;\n\n  margin-bottom: 14px;\n  padding: 17px 20px;\n\n  border-radius: 8px;\n\n  background-color: var(--extraBgColor);\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const Container = styled(PerfectScrollbar)`\n  max-height: 478px;\n\n  @media (min-width: 768px) {\n    max-height: 640px;\n  }\n\n  @media (min-width: 1440px) {\n    max-height: 478px;\n  }\n\n  overflow: auto;\n  padding: 0;\n  margin-bottom: 14px;\n\n  & .ps__rail-y {\n    position: absolute;\n    width: 8px;\n    background-color: var(--scrollBg) !important;\n    border-radius: 12px;\n    opacity: 1;\n    cursor: pointer;\n  }\n  & .ps__thumb-y {\n    height: 142px !important;\n    width: 8px;\n    background-color: var(--scroll);\n    right: 0;\n    opacity: 1;\n  }\n  & .ps__rail-y:hover > .ps__thumb-y,\n  .ps__rail-y:focus > .ps__thumb-y,\n  .ps__rail-y.ps--clicking .ps__thumb-y {\n    width: 8px;\n    height: 142px;\n  }\n`;\n\nexport const CardList = styled.ul`\n  > li:not(:last-of-type) {\n    margin-bottom: 10px;\n  }\n  border-radius: 12px;\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const IconedBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  border: none;\n\n  opacity: 0.8;\n  background-color: inherit;\n\n  stroke: var(--secondaryTextColor);\n  stroke-opacity: 0.5;\n  transition: opacity var(--transition);\n\n  > svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  width: 335px;\n  height: 56px;\n\n  padding: 10px 0 11px 0;\n\n  border: none;\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--btnText);\n  background-color: var(--btnBgColor);\n  transition: background-color var(--transition);\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnBgColorHover);\n  }\n`;\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n\n  border-radius: 8px;\n\n  background-color: var(--btnText);\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--plusInBtn);\n  }\n`;\n","import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const customModalStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    // backgroundColor: '#151515',\n    backgroundColor: 'var(--modalBgColor)',\n  },\n//   overlay: {\n//     backgroundColor: 'rgba(0,0,0,0.5)',\n//   },\n};\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid rgba(190, 219, 176, 0.5);\n  border-radius: 8px;\n  width: 350px;\n  height: 221px;\n  /* background: #151515; */\n  background: var(--modalBgColor);\n  gap: 24px;\n`;\n\nexport const StyledField = styled(Field)`\n  font: inherit;\n  cursor: pointer;\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 400; */\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  /* border: 1px solid #bedbb0; */\n  border: 1px solid var(--btnPlus);\n  border-radius: 8px;\n  width: 302px;\n  height: 49px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  /* background: #1f1f1f; */\n  background: var(--secondaryBgColor);\n  opacity: 0.4;\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  /* opacity: 0.5; */\n  transition: opacity var(--transition);\n\n  > svg {\n    stroke: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  cursor: pointer;\n`;\n\nexport const Label = styled.label`\n  font-family: 'Poppins-Medium';\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 500; */\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  /* color: #fff; */\n  color: var(--primaryTextColor);\n`;\n\nexport const Button = styled.button`\n  font: inherit;\n  cursor: pointer;\n  border-radius: 8px;\n  width: 302px;\n  height: 49px;\n  /* background: #bedbb0; */\n  background: var(--btnPlus);\n  font-size: 20px;\n`;\n\nexport const ButtonText = styled.span`\n  font-family: 'Poppins-Medium';\n  /* font-family: 'Poppins', sans-serif;\n  font-weight: 500; */\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  /* color: #161616; */\n  color: var(--headerBgColor);\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  color: #f5530d;\n`;\n\nexport const StylePlus = styled.div`\n  border: none;\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: black;\n  margin-right: 8px;\n  stroke: white;\n\n`;","import Modal from 'react-modal';\nimport { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from 'components/Icon';\nimport {\n  Button,\n  ButtonText,\n  CloseBtn,\n  Label,\n  StylePlus,\n  StyledField,\n  StyledForm,\n  customModalStyles,\n} from './EditColumnModal.styled';\n\nconst addColumnFormSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'Too short!').required('This field is required!'),\n});\n\nModal.setAppElement('#root');\n\nexport const EditColumnModal = ({ onAdd }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <button type=\"button\" onClick={openModal}>\n        Open modal\n      </button>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customModalStyles}\n        contentLabel=\"Example Modal\"\n      >\n        <Formik\n          initialValues={{\n            name: '',\n          }}\n          validationSchema={addColumnFormSchema}\n          onSubmit={(values, action) => {\n            onAdd(values);\n            action.resetForm();\n          }}\n        >\n          <StyledForm>\n            <Label>Edit column</Label>\n            <CloseBtn\n              type=\"button\"\n              onClick={closeModal}\n              style={{ stroke: 'var(--primaryTextColor)' }}\n            >\n              <Icon name=\"close\" width=\"18\" height=\"18\" />\n            </CloseBtn>\n            <StyledField type=\"text\" name=\"name\" placeholder=\"Title\" />\n            {/* <ErrMsg name=\"name\" component=\"div\"/> */}\n\n            <Button type=\"submit\">\n              <StylePlus>\n                <Icon name=\"plus\" width=\"14\" height=\"14\" />\n              </StylePlus>\n              <ButtonText>Add</ButtonText>\n            </Button>\n          </StyledForm>\n        </Formik>\n      </Modal>\n    </>\n  );\n};\n","import { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport Card from 'components/Card/Card';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\n\nimport {\n  customStyles,\n  AddBtn,\n  CardList,\n  HeadWrap,\n  IconWrap,\n  IconedBtn,\n  Title,\n  Wrap,\n  Container,\n} from './Column.styled';\nimport { EditColumnModal } from 'components/EditColumnModal/EditColumnModal';\nimport AddCardModal from 'components/AddCardModal/AddCardModal';\n\nexport const Column = ({ columnId }) => {\n  const [modalColumnIsOpen, setmodalColumnIsOpen] = useState(false);\n  const [modalCardIsOpen, setmodalCardIsOpen] = useState(false);\n  const cards = [\n    {\n      _id: '65c8c3c181c2d3854aa44bce',\n      title: 'Design and Prototyping SoYummy',\n      text: \"Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.\",\n      priority: 'low',\n      deadline: 'Sun Feb 11 2024 21:15:17 GMT+0200 (Восточная Европа, стандартное время)',\n    },\n    {\n      _id: '65c8c3c181c2d3854aba44bce',\n      title: 'Design and Prototyping SoYummy',\n      text: \"Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.\",\n      priority: 'high',\n      deadline: 'Sun Feb 11 2024 21:15:17 GMT+0200 (Восточная Европа, стандартное время)',\n    },\n    {\n      _id: '65c8c3c181c2d3854aa44bceg',\n      title: 'Design and Prototyping SoYummy',\n      text: \"Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.\",\n      priority: 'medium',\n      deadline: 'Sun Feb 11 2024 21:15:17 GMT+0200 (Восточная Европа, стандартное время)',\n    },\n    {\n      _id: '65c8c3c181c2d3854aa44bcee',\n      title: 'Design and Prototyping SoYummy',\n      text: \"Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.\",\n      priority: 'without',\n      deadline: 'Sun Feb 11 2024 21:15:17 GMT+0200 (Восточная Европа, стандартное время)',\n    },\n  ];\n  const filtredCards = cards;\n\n  const openColumnModal = () => {\n    setmodalColumnIsOpen(true);\n  };\n\n  const closeColumnModal = () => {\n    setmodalColumnIsOpen(false);\n  };\n\n  const openCardModal = () => {\n    setmodalCardIsOpen(true);\n  };\n\n  const closeCardModal = () => {\n    setmodalCardIsOpen(false);\n  };\n\n  return (\n    <>\n      <HeadWrap>\n        <Title>Column title</Title>\n        <Wrap>\n          <IconedBtn type=\"button\" onClick={openColumnModal}>\n            <Icon name=\"pencil\" />\n          </IconedBtn>\n          <IconedBtn type=\"button\">\n            <Icon name=\"trash\" />\n          </IconedBtn>\n        </Wrap>\n      </HeadWrap>\n      <Container>\n        <CardList>\n          {filtredCards.map(card => (\n            <Card key={card._id} card={card} />\n          ))}\n        </CardList>\n      </Container>\n\n      <AddBtn type=\"button\" onClick={openCardModal}>\n        <IconWrap>\n          <Icon name=\"plus\" />\n        </IconWrap>{' '}\n        Add another card\n      </AddBtn>\n      <Modal\n        isOpen={modalCardIsOpen}\n        onRequestClose={closeCardModal}\n        style={customStyles}\n        contentLabel=\"Card Add Modal\"\n        ariaHideApp={false}\n      >\n        <AddCardModal\n          columnId={columnId}\n          title={'Add card'}\n          btnText={'Add'}\n          onClose={closeCardModal}\n        />\n      </Modal>\n      <Modal\n        isOpen={modalColumnIsOpen}\n        onRequestClose={closeColumnModal}\n        style={customStyles}\n        contentLabel=\"Column Edit Modal\"\n        ariaHideApp={false}\n      >\n        <EditColumnModal\n          title={'Edit column'}\n          onClose={closeColumnModal}\n          reqFunc={value => console.log(value)}\n        />\n      </Modal>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n// import 'react-perfect-scrollbar/dist/css/styles.css';\n\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n    padding: 0,\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nexport const Container = styled(PerfectScrollbar)`\n  max-width: 347px;\n\n  @media (min-width: 768px) {\n    max-width: 718px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 1128px;\n  }\n  &.scrollbar-container {\n    height: auto;\n  }\n  overflow: auto;\n  padding: 0 0 8px;\n\n  & .ps__rail-x {\n    position: absolute;\n    height: 8px;\n    background-color: var(--scrollBg) !important;\n    border-radius: 12px;\n    opacity: 1;\n    cursor: pointer;\n  }\n  & .ps__thumb-x {\n    width: 142px !important;\n    height: 8px;\n    background-color: var(--scroll);\n    bottom: 0;\n    opacity: 1;\n  }\n  & .ps__rail-x:hover > .ps__thumb-x,\n  .ps__rail-x:focus > .ps__thumb-x,\n  .ps__rail-x.ps--clicking .ps__thumb-x {\n    height: 8px;\n    width: 142px;\n  }\n`;\n\nexport const ColumnList = styled.ul`\n  display: flex;\n  gap: 18px;\n`;\n\nexport const ColumnItem = styled.li`\n  width: 347px;\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  gap: 18px;\n  align-items: flex-start;\n  padding: 0 0 8px;\n  ;\n`\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  min-width: 334px;\n  width: 334px;\n\n  padding: 14px 78px;\n\n  border: none;\n  border-radius: 8px;\n\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  color: var(--secondaryTextColor);\n  background-color: var(--extraBgColor);\n\n  opacity: 1;\n  transition: color background-color var(--transition);\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: var(--btnText);\n    background-color: var(--btnBgColor);\n  }\n\n  @media (min-width: 768px) {\n    width: 334px;\n  }\n`;\n\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n  border: 1px solid black;\n  border-radius: 8px;\n  stroke: var(--extraBgColor);\n\n\n  background-color: var(--squareIconColor);  \n  transition: background-color stroke var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--btnText);\n    stroke: var(--plusInBtn);\n  }\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: var(--extraBgColor);\n  }\n`;\n","import { Column } from 'components/Column';\nimport {\n  customStyles,\n  IconWrap,\n  AddBtn,\n  Wrap,\n  ColumnItem,\n  Container,\n  ColumnList,\n} from './Board.styled';\nimport { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { EditColumnModal } from 'components/EditColumnModal';\n\nexport const Board = () => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n  return (\n    <>\n      <Container>\n        <Wrap>\n          <ColumnList>\n            <ColumnItem>\n              <Column />\n            </ColumnItem>\n            <ColumnItem>\n              <Column />\n            </ColumnItem>\n            <ColumnItem>\n              <Column />\n            </ColumnItem>\n            <ColumnItem>\n              <Column />\n            </ColumnItem>\n          </ColumnList>\n          <AddBtn type=\"button\" onClick={openModal}>\n            <IconWrap>\n              <Icon name=\"plus\" />\n            </IconWrap>{' '}\n            Add another column\n          </AddBtn>\n        </Wrap>\n      </Container>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Column Edit Modal\"\n        ariaHideApp={false}\n      >\n        <EditColumnModal\n          title={'Add column'}\n          onClose={closeModal}\n          reqFunc={value => console.log(value)}\n        />\n      </Modal>\n    </>\n  );\n};\n","import {customStyles } from './MainDashboard.styled';\n// import { useParams } from 'react-router-dom';\nimport { Board } from 'components/Board';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { BoardCreatingModal } from 'components/BoardCreatingModal';\n\nexport const MainDashboard = () => {\n  // const { boardName } = useParams();\n  const [modalIsOpen, setIsOpen] = useState(false);\n \n  // const openModal = () => {\n  //   setIsOpen(true);\n  // };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      {/* {boardName ? (\n        <Board />\n      ) : (\n        <StartText>\n          Before starting your project, it is essential{' '}\n          <BoardCreationBtn type=\"button\" onClick={openModal}>\n            to create a board\n          </BoardCreationBtn>{' '}\n          to visualize and track all the necessary tasks and milestones. This\n          board serves as a powerful tool to organize the workflow and ensure\n          effective collaboration among team members.\n        </StartText>\n      )} */}\n      <Board />\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Board Creation Modal\"\n        ariaHideApp={false}\n      >\n        <BoardCreatingModal\n          onClose={closeModal}\n          title={'New board'}\n          btnText={'Create'}\n          reqFunc={values => console.log(values)}\n        />\n      </Modal>\n    </>\n  );\n};\n","import { HeaderDashboard } from 'components/HeaderDashboard';\nimport { Section } from './ScreensPage.styled';\nimport { MainDashboard } from 'components/MainDashboard';\n// import { useSelector } from 'react-redux';\n\nexport const ScreensPage = () => {\n  // const backgroundImg = useSelector(\"selector for bgImg\");\n  const backgroundImg = 'diego';\n  return (\n    <Section $backgroundImg={backgroundImg}>\n      <HeaderDashboard />\n      <MainDashboard />\n    </Section>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Main = styled.main`\n  grid-column: 2;\n  grid-row: 2;\n  \n`;\n\nexport const SidebarWrapper = styled.aside`\n  @media (max-width: 1439px) {\n    display: none;\n  }\n  @media (min-width: 1440px) {\n    display: block;\n    grid-column: 1;\n    grid-row-start: 1;\n    grid-row-end: 2;\n  }\n`;\n","import { Header } from 'components/Header';\nimport { Sidebar } from 'components/SideBar';\nimport { ScreensPage } from 'components/ScreensPage';\nimport { Main, SidebarWrapper } from './HomePage.styled';\n\nexport default function HomePage() {\n  return (\n    <>\n      <Header />\n      <SidebarWrapper>\n        <Sidebar />\n      </SidebarWrapper>\n      <Main>\n        <ScreensPage />\n      </Main>\n    </>\n  );\n}\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Name","_templateObject2","Avatar","_templateObject3","Button","_templateObject4","Title","StyledForm","Form","StyledField","Field","LastField","_templateObject5","_templateObject6","ErrMsg","ErrorMessage","_templateObject7","Label","_templateObject8","StyledLabel","_templateObject9","ContainerAvatar","Input","UpdateAvatar","user","useAuth","dispatch","useDispatch","filePicker","useRef","_jsxs","children","_jsx","src","avatarURL","width","height","alt","onClick","current","click","Icon","name","stroke","type","ref","onChange","event","selectedFile","target","files","updateAvatar","accept","EditProfileSchema","Yup","shape","min","max","matches","required","email","password","EditProfile","Formik","initialValues","validationSchema","onSubmit","values","actions","update","id","component","placeholder","customStyles","content","top","left","right","bottom","padding","transform","boxShadow","overlay","background","UserInfo","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","Modal","isOpen","style","contentLabel","HeaderStyled","MenuBtn","HeaderWrapper","customStylesForModal","inset","selectBoards","state","boards","selectCurrentBoard","currentBoard","sendDataEmail","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","axios","toast","t0","stop","_x","apply","arguments","ContainerForModal","TitleForModal","StyledFormInModal","StyledFieldInModal","StyledTextareaInModal","ButtonForModal","ButtonClose","emailForSupport","textMessage","builderSchema","SendEmail","onClose","form","resetForm","rows","NeedHelpBlock","NeedHelpBtn","NeedHelp","closeModal","srcSet","color","onRequestClose","BoardCreationBlock","BtnCreate","ModalWrap","ModalTitle","CloseBtn","FormWrap","theme","Text","IconsListWrap","InvisibleInput","BackgroundsPallet","_templateObject10","LabelPic","_templateObject11","Div","_templateObject12","AddBtn","_templateObject13","IconWrap","_templateObject14","iconsArr","backgroundsArr","schema","boardTitle","icon","oneOf","BoardCreatingModal","title","btnText","map","el","value","srcSetPath","concat","srcDefault","BoardCreation","ControlIconsContainer","BoardItemContainer","BoardItem","board","useSelector","console","log","BoardId","tagName","fetchBoardById","handleSelectBoard","_id","selected","opacity","deleteBoard","SidebarContainer","Logo","BoardContainer","BoardList","LogOut","Sidebar","useEffect","fetchBoards","logOut","DrpdwnBtn","ThemesList","visibility","_ref2","_ref3","ThemeItem","ThemeSwitcher","setIsOpen","menuRef","callback","handleClick","evnt","contains","document","addEventListener","removeEventListener","useClickOutside","setTimeout","heigth","changeTheme","Header","isMenuOpen","setIsOpenMenu","Wrap","BoardName","FilterBtn","FiltersTytle","HorizontalLine","LabelName","ShowPickers","PickersList","Picker","PickerName","FilterModal","defaultChecked","HeaderDashboard","boardName","useParams","Section","props","$backgroundImg","Calendar","selectedDate","onDateChange","className","DatePicker","date","dateFormat","minDate","Date","locale","enGB","weekStartsOn","TitleModal","CloseModal","TitleCard","StyledDescription","LabelColorStyle","StyleRadioButton","RadioButton","RadioButtonBlu","RadioButtonRed","RadioButtonGreen","RadioButtonGrey","_templateObject15","DeadlineStyle","_templateObject16","AddButton","_templateObject17","StylePlus","_templateObject18","_templateObject19","formCardSchema","text","priority","deadline","AddCardModal","columnId","setSelectedDate","addCard","handleSubmit","setFieldValue","role","CardBody","CardColor","CardTitle","CardDescription","CardSolid","CardDetals","CardInformation","Priority","PriorityDetals","PriorityTitle","PriorityColor","PriorityTipe","Deadline","DeadlineTitle","DeadlineDate","CardButtons","Bell","Card","card","modalCardIsOpen","setmodalCardIsOpen","dateDeadline","formatedDate","getUTCDate","getUTCMonth","toString","padStart","getFullYear","cardTextDescription","substring","closeCardModal","ariaHideApp","reqFunc","HeadWrap","PerfectScrollbar","CardList","IconedBtn","customModalStyles","marginRight","backgroundColor","ButtonText","addColumnFormSchema","EditColumnModal","onAdd","_Fragment","action","Column","modalColumnIsOpen","setmodalColumnIsOpen","_useState3","_useState4","filtredCards","closeColumnModal","ColumnList","ColumnItem","Board","modalIsOpen","MainDashboard","ScreensPage","Main","SidebarWrapper","HomePage"],"sourceRoot":""}