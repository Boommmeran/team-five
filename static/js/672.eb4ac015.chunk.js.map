{"version":3,"file":"static/js/672.eb4ac015.chunk.js","mappings":"sNAEaA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0EAOtBC,EAAOH,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gKASfG,EAASL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,2FAOnBK,EAASP,EAAAA,GAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,2M,UCtBtBH,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2QAgBtBO,EAAQT,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qKAQjBQ,GAAaV,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,8EAMzBU,GAAcZ,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,uLAW3BY,GAAcd,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAae,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,gTAc3Bc,GAAYhB,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAaiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,yRAczBK,EAASP,EAAAA,GAAAA,OAAakB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,yPAatBiB,EAAenB,EAAAA,GAAAA,OAAaoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,oRAiB5BmB,GAASrB,EAAAA,EAAAA,IAAOsB,EAAAA,GAAPtB,CAAoBuB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,oEAM7BsB,EAAcxB,EAAAA,GAAAA,MAAYyB,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,kK,uCC1FjCwB,EAAoBC,EAAAA,KAAaC,MAAM,CAC3CC,MAAOF,EAAAA,KAAaG,IAAI,eACxBC,KAAMJ,EAAAA,KACHK,IAAI,EAAG,mBACPC,IAAI,GAAI,oBACRC,QAAQ,qCAAsC,iBAC9CC,SAAS,0BACZC,MAAOT,EAAAA,KACJS,MAAM,iBACNF,QACC,iEACA,iBAEDC,SAAS,0BACZE,SAAUV,EAAAA,KACPK,IAAI,EAAG,mBACPC,IAAI,GAAI,oBACRC,QACC,qCACA,2CAEDA,QAAQ,QAAS,oCACjBC,SAAS,qCAGDG,EAAc,WACzB,IAAQC,GAASC,EAAAA,EAAAA,KAATD,KAEV,OACIE,EAAAA,EAAAA,MAAC1C,EAAS,CAAA2C,SAAA,EACRC,EAAAA,EAAAA,KAAClC,EAAK,CAAAiC,SAAC,kBACPC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbd,KAAM,GACNK,MAAO,GACPC,SAAU,IAEZS,iBAAkBpB,EAClBqB,SAAU,SAACC,EAAQC,GACjBC,QAAQC,IAAI,eAAgBH,GAC5BC,EAAQG,WACV,EAAEV,UAEFD,EAAAA,EAAAA,MAAC/B,EAAU,CAAAgC,SAAA,EACTC,EAAAA,EAAAA,KAAC/B,EAAW,CAACyC,GAAG,QAAQtB,KAAK,QAAQuB,KAAK,OAAOC,OAAO,aAExDZ,EAAAA,EAAAA,KAACtB,EAAM,CAACU,KAAK,OAAOyB,UAAW,SAC/Bb,EAAAA,EAAAA,KAAA,SAAAD,UACEC,EAAAA,EAAAA,KAAC7B,EAAW,CAACuC,GAAG,OAAOtB,KAAK,OAAO0B,YAAalB,EAAKR,UAGvDY,EAAAA,EAAAA,KAACtB,EAAM,CAACU,KAAK,QAAQyB,UAAW,SAChCb,EAAAA,EAAAA,KAAA,SAAAD,UACEC,EAAAA,EAAAA,KAAC7B,EAAW,CACVuC,GAAG,QACHtB,KAAK,QACL0B,YAAalB,EAAKH,MAClBkB,KAAK,aAITX,EAAAA,EAAAA,KAACtB,EAAM,CAACU,KAAK,WAAWyB,UAAW,SACnCf,EAAAA,EAAAA,MAACjB,EAAW,CAAAkB,SAAA,EACVC,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAAC3B,KAAK,SACXY,EAAAA,EAAAA,KAAC3B,EAAS,CACRqC,GAAG,WACHtB,KAAK,WACL0B,YAAalB,EAAKF,eAItBM,EAAAA,EAAAA,KAACpC,EAAM,CAAC+C,KAAK,SAAQZ,SAAC,iBAG1BC,EAAAA,EAAAA,KAACxB,EAAY,CAAAuB,UACXC,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAAC3B,KAAK,OAAO4B,MAAM,OAAOC,OAAO,aAI9C,E,6BCzFMC,EAAe,CACnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,QAAS,IACTC,UAAW,wBACXC,UAAW,8BAEbC,QAAS,CACPC,WAAY,oBAIhBC,IAAAA,cAAoB,SAEb,I,oFAAMC,GAAW,WACtB,IAAQnC,GAASC,EAAAA,EAAAA,KAATD,KAERoC,GAAsCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAUlC,OACEpC,EAAAA,EAAAA,MAAC1C,EAAS,CAAA2C,SAAA,EACRC,EAAAA,EAAAA,KAACxC,EAAI,CAAAuC,SAAEH,EAAKR,QACZY,EAAAA,EAAAA,KAACtC,EAAM,CAAC4E,IAAI,GAAGC,IAAI,aAAaC,QAXlB,WAChBH,GAAe,EACjB,KAUIvC,EAAAA,EAAAA,MAACgC,IAAK,CAACW,OAAQL,EAAaM,MAAOxB,EAAcyB,aAAa,QAAO5C,SAAA,EACnEC,EAAAA,EAAAA,KAACL,EAAW,KACZK,EAAAA,EAAAA,KAACpC,EAAM,CAAC4E,QAVK,WACjBH,GAAe,EACjB,EAQkCtC,UAACC,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAAC3B,KAAM,iBAIjD,EC/CawD,GAAS,WAClB,OAAQ5C,EAAAA,EAAAA,KAAA,OAAAD,UACJC,EAAAA,EAAAA,KAAC+B,GAAQ,KAEjB,E,sBCJac,GAAmBxF,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mMAU7BuF,GAAOzF,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gKASjBwF,GAAiB1F,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,wLAY3ByF,GAAqB3F,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,+OAU/B0F,GAAY5F,EAAAA,GAAAA,OAAae,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,qRAgBzB2F,GAAY7F,EAAAA,GAAAA,GAASiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,gCAIrB4F,GAAwB9F,EAAAA,GAAAA,IAAUkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,6JAalC6F,GAAY/F,EAAAA,GAAAA,GAASoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,2cAsB1B4F,IAMKE,GAAgBhG,EAAAA,GAAAA,IAAUuB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,iRAgB1B+F,GAAcjG,EAAAA,GAAAA,OAAayB,KAAAA,IAAAvB,EAAAA,EAAAA,GAAA,wOAe3BgG,GAASlG,EAAAA,GAAAA,OAAamG,KAAAA,IAAAjG,EAAAA,EAAAA,GAAA,4XCtHtBkG,GAAU,WACrB,IAAMC,GAAWC,EAAAA,GAAAA,MAMjB,OACE7D,EAAAA,EAAAA,MAAC+C,GAAgB,CAAA9C,SAAA,EACfD,EAAAA,EAAAA,MAACgD,GAAI,CAAA/C,SAAA,EACHC,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAAC3B,KAAK,OAAO4B,MAAM,KAAKC,OAAO,QACpCjB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBAEND,EAAAA,EAAAA,MAACiD,GAAc,CAAAhD,SAAA,EACbC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJD,EAAAA,EAAAA,MAACkD,GAAkB,CAAAjD,SAAA,EACjBD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,YACOC,EAAAA,EAAAA,KAAA,SAAM,gBAGhBA,EAAAA,EAAAA,KAACiD,GAAS,CAACtC,KAAK,SAAQZ,UACtBC,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAAC3B,KAAK,OAAO4B,MAAM,KAAKC,OAAO,aAGxCjB,EAAAA,EAAAA,KAACkD,GAAS,CAAAnD,UACRD,EAAAA,EAAAA,MAACsD,GAAS,CAAArD,SAAA,EACRC,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CACH3B,KAAK,eACL4B,MAAM,KACNC,OAAO,KACPyB,MAAO,CAAEkB,QAAS,OAEpB5D,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gBACHD,EAAAA,EAAAA,MAACqD,GAAqB,CAAApD,SAAA,EACpBC,EAAAA,EAAAA,KAAA,UAAQW,KAAK,SAAQZ,UACnBC,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAAC3B,KAAK,SAAS4B,MAAM,KAAKC,OAAO,UAExCjB,EAAAA,EAAAA,KAAA,UAAAD,UACEC,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAAC3B,KAAK,QAAQ4B,MAAM,KAAKC,OAAO,qBAM/CnB,EAAAA,EAAAA,MAACuD,GAAa,CAAAtD,SAAA,EACZD,EAAAA,EAAAA,MAAA,WAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UACE6D,OAAO,wKAKT7D,EAAAA,EAAAA,KAAA,OACEsC,IAAI,+EACJtB,MAAM,KACNC,OAAO,KACPsB,IAAI,2BAGRzC,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,wBACqB,KACtBC,EAAAA,EAAAA,KAAA,QAAM0C,MAAO,CAAEoB,MAAO,iBAAkB/D,SAAC,YAAe,mFAG1DD,EAAAA,EAAAA,MAACwD,GAAW,CAAC3C,KAAK,SAAQZ,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAK0C,MAAO,CAAEqB,OAAQ,2BAA4BhE,UAChDC,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAAC3B,KAAK,OAAO4B,MAAM,KAAKC,OAAO,UAEtCjB,EAAAA,EAAAA,KAAA,QAAAD,SAAM,sBAGVD,EAAAA,EAAAA,MAACyD,GAAM,CAAC5C,KAAK,SAAS6B,QApEL,WACnBkB,GAASM,EAAAA,GAAAA,MACX,EAkEgDjE,SAAA,EAC1CC,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAAC3B,KAAK,QAAQ4B,MAAM,KAAKC,OAAO,QACrCjB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,iBAIX,E,WC5FakE,GAAY5G,EAAAA,GAAAA,OAAaC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,+SAuBzB2G,GAAY7G,EAAAA,GAAAA,GAASI,KAAAA,IAAAF,EAAAA,EAAAA,GAAA,oGAOrB4G,GAAO9G,EAAAA,GAAAA,IAAUM,KAAAA,IAAAJ,EAAAA,EAAAA,GAAA,kRC5BjB6G,GAAkB,WAC7B,IAAQC,GAAcC,EAAAA,GAAAA,MAAdD,UACR,OACEvE,EAAAA,EAAAA,MAACqE,GAAI,CAAApE,SAAA,EACHC,EAAAA,EAAAA,KAACkE,GAAS,CAAAnE,SAAEsE,KACZvE,EAAAA,EAAAA,MAACmE,GAAS,CAACtD,KAAK,SAAQZ,SAAA,EACtBC,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAAC3B,KAAK,WAAW,UACd,SAIhB,ECbamF,GAAYlH,EAAAA,GAAAA,EAAQC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,kXAwBpBiH,GAAmBnH,EAAAA,GAAAA,OAAaI,KAAAA,IAAAF,EAAAA,EAAAA,GAAA,sLCxBhCkH,GAAWpH,EAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,iPAiBrBmH,GAASrH,EAAAA,GAAAA,OAAaI,KAAAA,IAAAF,EAAAA,EAAAA,GAAA,kQChBtBoH,GAAQ,WACnB,OACE3E,EAAAA,EAAAA,KAAA,OAAAD,UACED,EAAAA,EAAAA,MAAC4E,GAAM,CAAC/D,KAAK,SAAQZ,SAAA,EACnBC,EAAAA,EAAAA,KAACyE,GAAQ,CAAA1E,UACPC,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAAC3B,KAAK,WACD,IAAI,yBAKxB,ECXawF,GAAYvH,EAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,0GAStBsH,GAAaxH,EAAAA,GAAAA,GAASI,KAAAA,IAAAF,EAAAA,EAAAA,GAAA,8HAStBuH,GAAWzH,EAAAA,GAAAA,OAAaM,KAAAA,IAAAJ,EAAAA,EAAAA,GAAA,wJAYxBwH,IAAW1H,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAYQ,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,kGAOvByH,IAAQ3H,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAae,KAAAA,IAAAb,EAAAA,EAAAA,GAAA,oKASrB0H,GAAO5H,EAAAA,GAAAA,EAAQiB,KAAAA,IAAAf,EAAAA,EAAAA,GAAA,kCAIfkH,GAAWpH,EAAAA,GAAAA,IAAUkB,KAAAA,IAAAhB,EAAAA,EAAAA,GAAA,iPAiBrB2H,IAAiB7H,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAaoB,KAAAA,IAAAlB,EAAAA,EAAAA,GAAA,4FAS9B4H,GAAgB9H,EAAAA,GAAAA,GAASuB,KAAAA,IAAArB,EAAAA,EAAAA,GAAA,mEAOzB6H,GAAQ/H,EAAAA,GAAAA,MAAYyB,KAAAA,IAAAvB,EAAAA,EAAAA,GAAA,wUAwBpB8H,GAAMhI,EAAAA,GAAAA,MAAYmG,KAAAA,IAAAjG,EAAAA,EAAAA,GAAA,2CAKlB+H,GAAoBjI,EAAAA,GAAAA,GAASkI,KAAAA,IAAAhI,EAAAA,EAAAA,GAAA,+FAQ7BmH,GAASrH,EAAAA,GAAAA,OAAamI,KAAAA,IAAAjI,EAAAA,EAAAA,GAAA,mTCvG7BkI,GAAW,CACf,eACA,OACA,UACA,SACA,YACA,YACA,SACA,WAGIC,GAAiB,CACrB,QACA,WACA,UACA,YACA,SACA,OACA,OACA,SACA,QACA,UACA,SACA,UACA,OACA,aACA,OACA,QAGIxF,GAAgB,CACpByF,WAAY,GACZC,KAAM,eACN/D,WAAY,UAGRgE,GAAS7G,EAAAA,GAAW,CACxB2G,WAAY3G,EAAAA,KAAaQ,WACzBoG,KAAM5G,EAAAA,KAAa8G,MAAML,IAAUjG,WACnCqC,WAAY7C,EAAAA,KAAa8G,MAAMJ,IAAgBlG,aAGpCuG,GAAqB,SAAHC,GAAwB,IAAlBC,EAAUD,EAAVC,WAKnC,OACEnG,EAAAA,EAAAA,MAAC8E,GAAS,CAAA7E,SAAA,EACRC,EAAAA,EAAAA,KAAC6E,GAAU,CAAA9E,SAAC,eACZC,EAAAA,EAAAA,KAAC8E,GAAQ,CAACnE,KAAK,SAAS6B,QAASyD,EAAWlG,UAC1CC,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAAC3B,KAAK,aAEbY,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAeA,GACfC,iBAAkB0F,GAClBzF,SAbW,SAAAC,GACfE,QAAQC,IAAIH,GACZ4F,GACF,EAUyBlG,UAEnBD,EAAAA,EAAAA,MAACiF,GAAQ,CAAAhF,SAAA,EACPC,EAAAA,EAAAA,KAACgF,GAAK,CAACrE,KAAK,OAAOG,YAAY,QAAQ1B,KAAK,gBAC5CY,EAAAA,EAAAA,KAACiF,GAAI,CAAAlF,SAAC,WAENC,EAAAA,EAAAA,KAACmF,GAAa,CAAApF,SACX0F,GAASS,KAAI,SAAAC,GAAE,OACdnG,EAAAA,EAAAA,KAAA,MAAAD,UACED,EAAAA,EAAAA,MAACsF,GAAK,CAAArF,SAAA,EACJC,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAAC3B,KAAM+G,KACZnG,EAAAA,EAAAA,KAACkF,GAAc,CAACvE,KAAK,QAAQvB,KAAK,OAAOgH,MAAOD,QAH3CA,EAKJ,OAITnG,EAAAA,EAAAA,KAACiF,GAAI,CAAAlF,SAAC,iBACNC,EAAAA,EAAAA,KAACsF,GAAiB,CAAAvF,SACf2F,GAAeQ,KAAI,SAAAC,GAElB,OACAnG,EAAAA,EAAAA,KAAA,MAAAD,UACED,EAAAA,EAAAA,MAACuF,GAAG,CAAAtF,SAAA,EACFC,EAAAA,EAAAA,KAAA,OAAKsC,IAJI,YAIUC,IAAI,MACvBvC,EAAAA,EAAAA,KAACkF,GAAc,CAACvE,KAAK,QAAQvB,KAAK,aAAagH,MAAOD,QAHjDA,EAMV,OAGHrG,EAAAA,EAAAA,MAAC4E,GAAM,CAAC/D,KAAK,SAAQZ,SAAA,EACnBC,EAAAA,EAAAA,KAACyE,GAAQ,CAAA1E,UACPC,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAAC3B,KAAK,WACD,IAAI,mBAO5B,EC9GaiH,GAAgB,WAC3B,IAAQhC,GAAcC,EAAAA,GAAAA,MAAdD,UACRrC,GAAiCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCsE,EAAWpE,EAAA,GAAEqE,EAASrE,EAAA,GAiBvB+D,EAAa,WACjBM,GAAU,EACZ,EAEA,OACEzG,EAAAA,EAAAA,MAAA0G,EAAAA,SAAA,CAAAzG,SAAA,CACGsE,GACCrE,EAAAA,EAAAA,KAAC2E,GAAK,KAEN7E,EAAAA,EAAAA,MAACyE,GAAS,CAAAxE,SAAA,CAAC,gDACqC,KAC9CC,EAAAA,EAAAA,KAACwE,GAAgB,CAAC7D,KAAK,SAAS6B,QAftB,WAChB+D,GAAU,EACZ,EAa2DxG,SAAC,sBAEhC,IAAI,0LAM5BC,EAAAA,EAAAA,KAAC8B,IAAK,CACJW,OAAQ6D,EACRG,eAAgBR,EAChBvD,MArCe,CACnBvB,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRG,UAAW,wBACXD,QAAS,IA+BPkB,aAAa,uBACb+D,aAAa,EAAM3G,UAErBC,EAAAA,EAAAA,KAAC+F,GAAkB,CAACE,WAAYA,QAItC,ECpDaU,GAAc,WACzB,OACE7G,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACoE,GAAe,KAChBpE,EAAAA,EAAAA,KAACqG,GAAa,MAGpB,ECPe,SAASO,KACtB,OACE9G,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC4C,GAAM,KACP5C,EAAAA,EAAAA,KAACyD,GAAO,KACRzD,EAAAA,EAAAA,KAAC2G,GAAW,MAGlB,C","sources":["components/UserInfo/UserInfo.styled.js","components/EditProfile/EditProfile.styled.js","components/EditProfile/EditProfile.jsx","components/UserInfo/UserInfo.jsx","components/Header/Header.jsx","components/SideBar/SideBar.styled.jsx","components/SideBar/SideBar.jsx","components/HeaderDashboard/HeaderDashboard.styled.jsx","components/HeaderDashboard/HeaderDashboard.jsx","components/MainDashboard/MainDashboard.styled.jsx","components/Board/Board.styled.jsx","components/Board/Board.jsx","components/BoardCreatingModal/BoardCreatingModal.styled.jsx","components/BoardCreatingModal/BoardCreatingModal.jsx","components/MainDashboard/MainDashboard.jsx","components/ScreensPage/ScreensPage.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  width: 79px;\n  height: 32px;\n  gap: 8px;\n`;\n\nexport const Name = styled.p`\n  margin: 5px 0;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing:-2;\n  color: var(--primaryTextColor);\n`;\n\nexport const Avatar = styled.img`\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n  border: 1px solid black;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 10px;\n  color: var(--primaryTextColor);\n  background:var(--modalBgColor);\n  border: 0;\n  cursor: pointer;\n  stroke: var(--primaryTextColor);\n`;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Container = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 100%;\n  height: 440px;\n  background: var(--modalBgColor);\n\n  @media only screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin: 0 0 24px 0;\n  font-family: 'Poppins-Medium';\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing:-2;\n  color: var(--primaryTextColor);\n`;\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const AvatarField = styled(Field)`\n  margin-bottom: 25px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 68px;\n  height: 68px;\n  border: 1px solid black;\n  cursor: pointer;\n  border-radius: 8px;\n`;\n\nexport const StyledField = styled(Field)`\n  position: relative;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  width: 100%;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -2;\n  color: var(--primaryTextColor);\n`;\nexport const LastField = styled(Field)`\n  margin-bottom: 24px;\n  padding: 14px 18px;\n  width: 100%;\n  outline: transparent;\n  outline-offset: -1px;\n  border: 1px solid var(--accent);\n  border-radius: 8px;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -2;\n  color: var(--primaryTextColor);\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  background: var(--accent);\n  border: 0;\n  border-radius: 8px;\n  padding: 14px 126px;\n  color: var(--primaryTextColor);\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing:-2;\n`;\n\nexport const ButtonAvatar = styled.button`\n  position: absolute;\n  top: 130px;\n  right: 155px;\n\n  width: 24px;\n  height: 24px;\n  background: var(--accent);\n  border-radius: 8px;\n  border: 0;\n  stroke: var(--primaryTextColor);\n\n  @media only screen and (min-width: 768px) {\n    right: 186px;\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n  color: red;\n  font-style: italic;\n  font-size: 14px;\n`;\n\nexport const StyledLabel = styled.label`\n  position: relative;\n  display: flex;\n  stroke: var(--primaryTextColor);\n\n  svg {\n    position: absolute;\n    top: 16px;\n    right: 15px;\n  }\n`;\n","import {\n  Container,\n  Title,\n  Button,\n  StyledForm,\n  StyledField,\n  LastField,\n  AvatarField,\n  ButtonAvatar,\n  ErrMsg,\n  StyledLabel,\n} from './EditProfile.styled';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useAuth } from 'hooks';\n\nimport { Icon } from 'components/Icon';\n\nconst EditProfileSchema = Yup.object().shape({\n  photo: Yup.string().url('invalid url'),\n  name: Yup.string()\n    .min(2, '2 chars minimum')\n    .max(32, '32 chars maximum')\n    .matches(/^[a-zA-Z0-9!@#$%^&*(),.?\":{}|<>]+$/, 'Invalin name ')\n    .required('this field is required'),\n  email: Yup.string()\n    .email('Invalid email')\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*(),.?\":{}|<>]+@[a-zA-Z0-9]+\\.[a-zA-Z]{2, }$/,\n      'Invalid email'\n    )\n    .required('this field is required'),\n  password: Yup.string()\n    .min(8, '8 chars minimum')\n    .max(64, '64 chars maximum')\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*(),.?\":{}|<>]+$/,\n      'only latin letters, numbers and symbols'\n    )\n    .matches(/^\\S*$/, 'password must not contain spaces')\n    .required('this field is required required'),\n});\n\nexport const EditProfile = () => {\n  const { user } = useAuth();\n\nreturn (\n    <Container>\n      <Title>Edit profile</Title>\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n        }}\n        validationSchema={EditProfileSchema}\n        onSubmit={(values, actions) => {\n          console.log('Profile form', values); //посилання на функцію,яка буде викликана при сабміті форми\n          actions.resetForm();\n        }}\n      >\n        <StyledForm>\n          <AvatarField id=\"photo\" name=\"photo\" type=\"file\" accept=\"image/*\" />\n\n          <ErrMsg name=\"name\" component={'div'} />\n          <label>\n            <StyledField id=\"name\" name=\"name\" placeholder={user.name} />\n          </label>\n\n          <ErrMsg name=\"email\" component={'div'} />\n          <label>\n            <StyledField\n              id=\"email\"\n              name=\"email\"\n              placeholder={user.email}\n              type=\"email\"\n            />\n          </label>\n\n          <ErrMsg name=\"password\" component={'div'} />\n          <StyledLabel>\n            <Icon name=\"eye\" />\n            <LastField\n              id=\"password\"\n              name=\"password\"\n              placeholder={user.password}\n            />\n          </StyledLabel>\n\n          <Button type=\"submit\">Submit</Button>\n        </StyledForm>\n      </Formik>\n      <ButtonAvatar>\n        <Icon name=\"plus\" width=\"10px\" height=\"10px\" />\n      </ButtonAvatar>\n    </Container>\n  );\n};\n","import { Container, Name, Avatar, Button } from './UserInfo.styled';\nimport { EditProfile } from 'components/EditProfile';\nimport { Icon } from 'components/Icon';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\n\nimport { useAuth } from 'hooks';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    padding: '0',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 4px 16px 0px #1616160D',\n  },\n  overlay: {\n    background: 'rgba(0,0,0,0.5)',\n  },\n};\n\nModal.setAppElement('#root');\n\nexport const UserInfo = () => {\n  const { user } = useAuth();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <Container>\n      <Name>{user.name}</Name>\n      <Avatar src=\"\" alt=\"image user\" onClick={openModal} />\n      <Modal isOpen={isModalOpen} style={customStyles} contentLabel=\"Modal\">\n        <EditProfile />\n        <Button onClick={closeModal}><Icon name ='close'/></Button>\n      </Modal>\n    </Container>\n  );\n};\n","import { UserInfo } from \"components/UserInfo/UserInfo\";\n\nexport const Header = () => {\n    return (<div>\n        <UserInfo />\n    </div>)\n};","import styled from 'styled-components';\n\nexport const SidebarContainer = styled.div`\n  width: 225px;\n  min-height: 100vh;\n  padding: 14px;\n  color: var(--primaryTextColor);\n  letter-spacing: -0.02em;\n  text-align: left;\n  background-color: var(--primaryBgColor);\n`;\n\nexport const Logo = styled.div`\n  font-family: 'Poppins-SemiBold';\n  letter-spacing: -0.04em;\n  display: flex;\n  column-gap: 8px;\n  align-items: center;\n  margin-bottom: 70px;\n`;\n\nexport const BoardContainer = styled.div`\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n\n  h3 {\n    margin-bottom: 8px;\n    font-size: 12px;\n    font-family: 'Poppins-Regular';\n    opacity: 50%;\n  }\n  `;\n\nexport const BoardCreationBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-top: rgba(255, 255, 255, 0.1) solid 1px;\n  border-bottom: rgba(255, 255, 255, 0.1) solid 1px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  margin-bottom: 40px;\n`;\n\nexport const BtnCreate = styled.button`\n  width: 40px;\n  height: 36px;\n  background-color: var(--btnPlus);\n  border: none;\n  border-radius: 6px;\n  stroke: var(--primaryBgColor);\n  transition: var(--transition);\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--btnPlusHover);\n  }\n`;\n\nexport const BoardList = styled.ul`\nmargin-bottom: 40px;\n`;\n\nexport const ControlIconsContainer = styled.div`\n  margin-left: auto;\n  display: none;\n  gap: 8px;\n\n  button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n`;\n\nexport const BoardItem = styled.li`\n  height: 61px;\n  margin: 0 -14px 0 -14px;\n  padding: 0 14px 0 14px;\n  display: flex;\n  align-items: center;\n  stroke: var(--primaryTextColor);\n  opacity: 0.5;\n  transition: var(--transition);\n\n  p {\n    margin-left: 4px;\n    font-family: 'Poppins-Medium';\n    font-size: 14px;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--secondaryBgColor);\n    opacity: 1;\n\n    > ${ControlIconsContainer} {\n      display: flex;\n    }\n  }\n`;\n\nexport const NeedHelpBlock = styled.div`\n  height: 238px;\n  padding: 14px;\n  margin-bottom: 24px;\n  font-size: 12px;\n  border-radius: 8px;\n  background-color: var(--secondaryBgColor);\n\n  p {\n    margin-top: 14px;\n    margin-bottom: 18px;\n    line-height: 1.33333;\n    letter-spacing: 0;\n  }\n`;\n\nexport const NeedHelpBtn = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  background: none;\n  display: flex;\n  align-items: center;\n\n  span {\n    margin-left: 8px;\n    color: var(--primaryTextColor);\n    font-family: 'Poppins-Medium';\n  }\n`;\n\nexport const LogOut = styled.button`\n  margin: 0;\n  padding: 0;\n  border: none;\n  background: none;\n  display: flex;\n  align-items: center;\n  font-family: 'Poppins-Medium';\n  font-size: 14px;\n  stroke: var(--accent);\n  transition: var(--transition);\n\n  p {\n    margin-left: 14px;\n    color: var(--primaryTextColor);\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    stroke: var(--hover);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { logOut } from '../../redux/auth/authOperation.js';\nimport { Icon } from 'components/Icon';\nimport {\n  SidebarContainer,\n  Logo,\n  BoardContainer,\n  BoardList,\n  BoardCreationBlock,\n  BtnCreate,\n  NeedHelpBlock,\n  NeedHelpBtn,\n  LogOut,\n  BoardItem,\n  ControlIconsContainer,\n} from './SideBar.styled';\n\nexport const Sidebar = () => {\n  const dispatch = useDispatch();\n\n  const handleLogOut = () => {\n    dispatch(logOut());\n  };\n\n  return (\n    <SidebarContainer>\n      <Logo>\n        <Icon name=\"logo\" width=\"32\" height=\"32\" />\n        <h2>TaskPro</h2>\n      </Logo>\n      <BoardContainer>\n        <h3>My boards</h3>\n        <BoardCreationBlock>\n          <p>\n            Create a<br />\n            new board\n          </p>\n          <BtnCreate type=\"button\">\n            <Icon name=\"plus\" width=\"20\" height=\"20\" />\n          </BtnCreate>\n        </BoardCreationBlock>\n        <BoardList>\n          <BoardItem>\n            <Icon\n              name=\"four-circles\"\n              width=\"18\"\n              height=\"18\"\n              style={{ opacity: 0.5 }}\n            />\n            <p>Board name</p>\n            <ControlIconsContainer>\n              <button type=\"button\">\n                <Icon name=\"pencil\" width=\"16\" height=\"16\" />\n              </button>\n              <button>\n                <Icon name=\"trash\" width=\"16\" height=\"16\" />\n              </button>\n            </ControlIconsContainer>\n          </BoardItem>\n        </BoardList>\n      </BoardContainer>\n      <NeedHelpBlock>\n        <picture>\n          <source\n            srcSet=\"\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-1x.webp 1x,\n              https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-2x.webp 2x\n            \"\n          />\n          <img\n            src=\"https://res.cloudinary.com/dt7u6ic1c/image/upload/v1707115407/cactus-1x.webp\"\n            width=\"54\"\n            height=\"78\"\n            alt=\"little cute cactus\"\n          />\n        </picture>\n        <p>\n          If you need help with{' '}\n          <span style={{ color: 'var(--accent)' }}>TaskPro</span>, check out our\n          support resources or reach out to our customer support team.\n        </p>\n        <NeedHelpBtn type=\"button\">\n          <div style={{ stroke: 'var(--primaryTextColor)' }}>\n            <Icon name=\"help\" width=\"20\" height=\"20\" />\n          </div>\n          <span>Need help?</span>\n        </NeedHelpBtn>\n      </NeedHelpBlock>\n      <LogOut type=\"button\" onClick={handleLogOut}>\n        <Icon name=\"login\" width=\"32\" height=\"32\" />\n        <p>Log out</p>\n      </LogOut>\n    </SidebarContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  border: none;\n\n  background-color: inherit;\n\n  stroke: black;\n  > svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  cursor: pointer;\n`;\n\nexport const BoardName = styled.h3`\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const Wrap = styled.div`\n  @media (max-width: 767px) {\n    padding: 14px 0px;\n  }\n\n  @media (min-width: 768px) {\n    padding: 26px 0px;\n  }\n\n  @media (min-width: 1440px) {\n    padding: 10px 0px;\n  }\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import { useParams } from 'react-router-dom';\nimport { FilterBtn, BoardName, Wrap } from './HeaderDashboard.styled';\nimport { Icon } from 'components/Icon';\n\nexport const HeaderDashboard = () => {\n  const { boardName } = useParams();\n  return (\n    <Wrap>\n      <BoardName>{boardName}</BoardName>\n      <FilterBtn type=\"button\">\n        <Icon name=\"filter\" />\n        Filters{' '}\n      </FilterBtn>\n    </Wrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StartText = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  min-width: 280px;\n\n  font-size: 14px;\n  font-weight: 400;\n  letter-spacing: -0.02em;\n  line-height: 1.33;\n\n  @media (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media (min-width: 768px) {\n    line-height: 1.29;\n    width: 486px;\n    margin: auto;\n  }\n`;\n\nexport const BoardCreationBtn = styled.button`\n  margin: 0;\n  padding: 0;\n\n  border: none;\n  outline: none;\n\n  background-color: inherit;\n  color: inherit;\n  cursor: pointer;\n  &:hover {\n    color: red;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n  border: 1px solid black;\n  border-radius: 8px;\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: black;\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  max-width: 335px;\n\n  padding: 14px 79px;\n\n  border: 1px solid black;\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n","import { IconWrap, AddBtn } from './Board.styled';\nimport { Icon } from 'components/Icon';\n\nexport const Board = () => {\n  return (\n    <div>\n      <AddBtn type=\"button\">\n        <IconWrap>\n          <Icon name=\"plus\" />\n        </IconWrap>{' '}\n        Add another column\n      </AddBtn>\n    </div>\n  );\n};\n","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\n  position: relative;\n  padding: 24px;\n  width: 335px;\n  height: 433px;\n\n  stroke: black;\n`;\n\nexport const ModalTitle = styled.h3`\n  margin-bottom: 24px;\n\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  border: none;\n  outline: none;\n  background-color: inherit;\n\n  cursor: pointer;\n`;\n\nexport const FormWrap = styled(Form)`\n  font-size: 14;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n\nexport const Input = styled(Field)`\n  width: 287px;\n  height: 49px;\n  padding: 14px 0 14px 18px;\n  margin-bottom: 24px;\n\n  border: 1px solid rgba(0, 0, 0, 0.4);\n  border-radius: 8px;\n`;\nexport const Text = styled.p`\n  margin-bottom: 14px;\n`;\n\nexport const IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n  border: 1px solid black;\n  border-radius: 8px;\n\n  > svg {\n    width: 14px;\n    height: 14px;\n    stroke: black;\n  }\n`;\n\nexport const InvisibleInput = styled(Field)`\nposition: absolute;\ntop: 0;\nleft: 0;\nmargin: -1px;\nwidth: 1px;\nheight: 1px;\n`;\n\nexport const IconsListWrap = styled.ul`\n  display: flex;\n  gap: 8px;\n\n  margin-bottom: 24px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 0;\n\n  border: none;\n  background-color: inherit;\n\n  width: 18px;\n  height: 18px;\n\n  cursor: pointer;\n  > svg {\n    stroke: black;\n    opacity: 1;\n  }\n  :checked {\n    border: 1px solid red;\n    border-radius: 4px;\n  }\n`;\n\nexport const Pic = styled.label`\n  width: 28px;\n  height: 28px;\n`\n\nexport const BackgroundsPallet = styled.ul`\n  width: 252px;\n  height: 60px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  min-width: 287px;\n  height: 49px;\n\n  padding: 10px 0 11px 0;\n\n  border: 1px solid black;\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n`;\n","import { Icon } from 'components/Icon';\nimport * as Yup from 'yup';\nimport {\n  FormWrap,\n  Input,\n  Text,\n  AddBtn,\n  IconWrap,\n  ModalWrap,\n  CloseBtn,\n  ModalTitle,\n  IconsListWrap,\n  InvisibleInput,\n  // IconedBtn,\n  BackgroundsPallet,\n  Label,\n  Pic,\n} from './BoardCreatingModal.styled';\nimport { Formik } from 'formik';\n\nconst iconsArr = [\n  'four-circles',\n  'star',\n  'loading',\n  'puzzle',\n  'container',\n  'lightning',\n  'colors',\n  'hexagon',\n];\n\nconst backgroundsArr = [\n  'diego',\n  'eberhard',\n  'florian',\n  'gabriella',\n  'gaetan',\n  'igor',\n  'kace',\n  'miklos',\n  'milad',\n  'nicolas',\n  'noBack',\n  'romello',\n  'tony',\n  'vickholius',\n  'vino',\n  'zhou',\n];\n\nconst initialValues = {\n  boardTitle: '',\n  icon: 'four-circles',\n  background: 'noBack',\n};\n\nconst schema = Yup.object({\n  boardTitle: Yup.string().required(),\n  icon: Yup.string().oneOf(iconsArr).required(),\n  background: Yup.string().oneOf(backgroundsArr).required(),\n});\n\nexport const BoardCreatingModal = ({ closeModal }) => {\n  const onSubmit = values => {\n    console.log(values);\n    closeModal();\n  };\n  return (\n    <ModalWrap>\n      <ModalTitle>New board</ModalTitle>\n      <CloseBtn type=\"button\" onClick={closeModal}>\n        <Icon name=\"close\" />\n      </CloseBtn>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={onSubmit}\n      >\n        <FormWrap>\n          <Input type=\"text\" placeholder=\"Title\" name=\"boardTitle\" />\n          <Text>Icons</Text>\n\n          <IconsListWrap>\n            {iconsArr.map(el => (\n              <li key={el}>\n                <Label>\n                  <Icon name={el} />\n                  <InvisibleInput type=\"radio\" name=\"icon\" value={el} />\n                </Label>\n              </li>\n            ))}\n          </IconsListWrap>\n\n          <Text>Backgrounds</Text>\n          <BackgroundsPallet>\n            {backgroundsArr.map(el =>{ \n              const imgPath = `some path`\n              return (\n              <li key={el}>\n                <Pic>\n                  <img src={imgPath} alt=''/>\n                  <InvisibleInput type=\"radio\" name=\"background\" value={el} />\n                </Pic>\n              </li>\n            )})}\n          </BackgroundsPallet>\n\n          <AddBtn type=\"submit\">\n            <IconWrap>\n              <Icon name=\"plus\" />\n            </IconWrap>{' '}\n            Create\n          </AddBtn>\n        </FormWrap>\n      </Formik>\n    </ModalWrap>\n  );\n};\n","import { StartText, BoardCreationBtn } from './MainDashboard.styled';\nimport { useParams } from 'react-router-dom';\nimport { Board } from 'components/Board';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport { BoardCreatingModal } from 'components/BoardCreatingModal';\n\nexport const MainDashboard = () => {\n  const { boardName } = useParams();\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      transform: 'translate(-50%, -50%)',\n      padding: 0,\n    },\n  };\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      {boardName ? (\n        <Board />\n      ) : (\n        <StartText>\n          Before starting your project, it is essential{' '}\n          <BoardCreationBtn type=\"button\" onClick={openModal}>\n            to create a board\n          </BoardCreationBtn>{' '}\n          to visualize and track all the necessary tasks and milestones. This\n          board serves as a powerful tool to organize the workflow and ensure\n          effective collaboration among team members.\n        </StartText>\n      )}\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Board Creation Modal\"\n        ariaHideApp={false}\n      >\n      <BoardCreatingModal closeModal={closeModal}/>              \n      </Modal>\n    </>\n  );\n};\n","import { HeaderDashboard } from 'components/HeaderDashboard';\nimport {} from './ScreensPage.styled';\nimport { MainDashboard } from 'components/MainDashboard';\n\nexport const ScreensPage = () => {\n  return (\n    <div>\n      <HeaderDashboard />\n      <MainDashboard />\n    </div>\n  );\n};\n","import { Header } from 'components/Header';\nimport { Sidebar } from 'components/SideBar';\nimport { ScreensPage } from 'components/ScreensPage';\n\nexport default function HomePage() {\n  return (\n    <div>\n      <Header />\n      <Sidebar />\n      <ScreensPage />\n    </div>\n  );\n}"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Name","_templateObject2","Avatar","_templateObject3","Button","_templateObject4","Title","StyledForm","Form","AvatarField","Field","StyledField","_templateObject5","LastField","_templateObject6","_templateObject7","ButtonAvatar","_templateObject8","ErrMsg","ErrorMessage","_templateObject9","StyledLabel","_templateObject10","EditProfileSchema","Yup","shape","photo","url","name","min","max","matches","required","email","password","EditProfile","user","useAuth","_jsxs","children","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","console","log","resetForm","id","type","accept","component","placeholder","Icon","width","height","customStyles","content","top","left","right","bottom","marginRight","padding","transform","boxShadow","overlay","background","Modal","UserInfo","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","src","alt","onClick","isOpen","style","contentLabel","Header","SidebarContainer","Logo","BoardContainer","BoardCreationBlock","BtnCreate","BoardList","ControlIconsContainer","BoardItem","NeedHelpBlock","NeedHelpBtn","LogOut","_templateObject11","Sidebar","dispatch","useDispatch","opacity","srcSet","color","stroke","logOut","FilterBtn","BoardName","Wrap","HeaderDashboard","boardName","useParams","StartText","BoardCreationBtn","IconWrap","AddBtn","Board","ModalWrap","ModalTitle","CloseBtn","FormWrap","Input","Text","InvisibleInput","IconsListWrap","Label","Pic","BackgroundsPallet","_templateObject12","_templateObject13","iconsArr","backgroundsArr","boardTitle","icon","schema","oneOf","BoardCreatingModal","_ref","closeModal","map","el","value","MainDashboard","modalIsOpen","setIsOpen","_Fragment","onRequestClose","ariaHideApp","ScreensPage","HomePage"],"sourceRoot":""}